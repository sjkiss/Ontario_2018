leader_affect$Ford_Like_wt <- (leader_affect$Ford * 0.405)
leader_affect$Wynne_Like_wt <- (leader_affect$Wynne * 0.196)
leader_affect$Horwath_Like_wt <- (leader_affect$Horwath * 0.336)
#
leader_affect %>%
mutate(mean_like=rowMeans(across(6:9), na.rm=T))->leader_affect
# leader_affect %>%
#   rowwise() %>%
#   mutate(mean_like=mean(c_across(6:9), na.rm=T))->leader_affect
leader_affect <- leader_affect %>%
select(., !(6:9)) %>%
pivot_longer(cols = !c(id, mean_like),
names_to = "Leader",
values_to = "Leader_like_score")
leader_affect %>%
mutate(vote_share=case_when(Leader == "Schreiner" ~ 0.046, Leader == "Wynne" ~ 0.196, Leader == "Horwath" ~ 0.336,
Leader == "Ford" ~ 0.405
)) -> leader_affect
leader_affect$like_mean <- (leader_affect$Leader_like_score - leader_affect$mean_like)^2
leader_affect$like_mean_wt <- (leader_affect$like_mean * leader_affect$vote_share)
leader_affect %>%
group_by(id) %>%
summarise(WAP_lead = sum(like_mean_wt)) -> leader_affect
leader_affect$WAP_lead <- sqrt(leader_affect$WAP_lead)
full_join(on18, leader_affect, by = join_by(id)) -> on18
on18$wap_difference <- on18$WAP - on18$WAP_lead
on18 <- on18 %>%
mutate(
WAP_lead_sd = as.numeric(scale(WAP_lead))
)
mean(on18$wap_difference, na.rm = T)
#### DESCRIPTIVE STATISTICS ####
#### Primary Media ####
#Descriptive Statistics for political knowledge by Primary media
table(on18$Social_Use2, on18$pol_knowledge)
on18 %>%
group_by(Primary_media) %>%
summarise(mean = mean(pol_knowledge, na.rm = T), sd = sd(pol_knowledge, na.rm = T))
#### Primary Media and Media source ####
on18$HuffingtonPostonline
media_Sources_by_primarymedia <- on18 %>%
group_by(Primary_media) %>%
summarise(across(CBCTV:HuffingtonPostonline, \(x)mean(x))) %>%
filter(Primary_media == "Online") %>%
pivot_longer(cols = 2:22)
#see the most read sources for online news users
media_Sources_by_primarymedia %>%
ggplot(aes(y = fct_reorder(name, value), x = value)) + geom_point()
#### Affective Polarization ####
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n))->mean_affect_scores
(on18 %>%
group_by(partyvote2018) %>%
summarise(Mean = mean(WAP, na.rm = T), Standard_Deviation = sd(WAP, na.rm = T), Minimum = min(WAP, na.rm = T), Maximum = max(WAP, na.rm = T), N=n()) %>%
rename(Group = partyvote2018) -> affect_scores_party)
(on18 %>%
group_by(Primary_media) %>%
summarise(Mean = mean(WAP, na.rm = T), Standard_Deviation = sd(WAP, na.rm = T), Minimum = min(WAP, na.rm = T), Maximum = max(WAP, na.rm = T), N=n()) %>%
rename(Group = Primary_media) -> affect_scores_primary_media)
mean(on18$WAP, na.rm = T); sd(on18$WAP, na.rm = T)
descripts_WAP <- rbind(tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = (length(!is.na(on18$WAP)))),
on18 %>%
group_by(Social_Use2) %>%
summarise(Mean = mean(WAP, na.rm = T), Standard_Deviation = sd(WAP, na.rm = T), Minimum = min(WAP, na.rm = T), Maximum = max(WAP, na.rm = T), N=n()) %>%
rename(Group = Social_Use2), affect_scores_party, affect_scores_primary_media)
#kableExtra::kable(descripts_WAP, format = "pipe", digits = 3)
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = (length(!is.na(on18$WAP))))
mean_affect_scores
mean_affect_scores %>%
filter(complete.cases(.)) %>%
ggplot(., aes(x = mean,
y = Social_Use2,
colour = Social_Use2)) +
geom_point()+
geom_errorbar(aes (xmin = mean - (1.96*se), xmax = mean + (1.96*se)), width =.2) +
labs(x = "Mean", y= "Social Media Use") +
theme_bw()  +
theme(axis.text.y=element_blank(),
axis.ticks.y = element_blank(),
strip.text = element_text(size=8))+
guides(color=guide_legend(reverse=T))+xlim(c(0,0.5)) -> affect_scores_social_use; affect_scores_social_use
on18 %>%
group_by(Primary_media) %>%
summarise(mean = mean(Soc_dis, na.rm = T), sd = sd(Soc_dis, na.rm = T))
#### RE-RUN MAIN ANALYSES WITHOUT STRAIGHT LINERS ####
COVARS <- c("Interest", "age3", "degree", "income3", "pol_knowledge")
# WAP_primary_media <- list()
# for(i in 1:length(COVARS)){
#   data <- on18 |> filter(straightliner == 0)
#   WAP_primary_media[[i]] <-  lm_robust(reformulate(c("Primary_media", COVARS[1:i]),
#                                                    response = "WAP_sd"), data = data, se_type = "HC0")
# }
# lm_robust(reformulate(c("Primary_media"),
#                       response = "WAP_sd"), data = data, se_type = "HC0")
# modelsummary(WAP_primary_media, stars = T)
#### Policy Position Distribution ####
#Exploratory factor analysis
# cor_policies <- on18 %>%
#   dplyr::select(c(help_racial_minorities, help_women, more_coporate_tax,
#                     more_personal_tax, income_inequality, drug_benefit_u25, free_post_secondary,
#                     lr_private_health_care, Lr_minimum_wage_to_high_prices, lr_business_benefits_everyone,
#                     lr_inappropriate_sex_ed
#   )) %>%
#   cor(., use = "complete.obs")
#
#
# eigen(cor_policies)$values
# (policy_fa_analysis <- psych::fa(cor_policies, nfactors = 3))
#
# policy_issues <- 'policy =~ help_racial_minorities + help_women + more_coporate_tax +
#                                   more_personal_tax + income_inequality + drug_benefit_u25 + free_post_secondary +
#                                  lr_private_health_care + Lr_minimum_wage_to_high_prices + lr_business_benefits_everyone +
#                                   lr_inappropriate_sex_ed'
# cfa_policies <- cfa(policy_issues, data = on18)
# summary(cfa_policies, fit.measures = T, standardized = T)
#### REGRESION MODELS ####
lookfor(on18, "id")
on18 %>%
select(pidON, pidstrngthON) %>%
val_labels()
on18$Interest
#summary(lm(Interest~partisan, data=on18))
on18 %>%
ggplot(., aes(x=partisan, y=Interest))+geom_boxplot()
#Create regression models for affective polarization using the weighted affective polarization (WAP) measure
#### Simon's Way ####
on18 %>%
pivot_longer(c(Social_Use2, Primary_media),names_to=c("Variable"), values_to=c("Score")) %>%
#  select(Variable, Score) %>%
mutate(Score=fct_relevel(Score,
"Legacy", "Mixed", "Online", "Social_Media", 'Never',
'Less than once a week',
'About once a week',
'Several times a week',
'About once a day',
'Several times a day')) %>%
nest(-Variable) %>%
mutate(model1=map(data, function(x) lm(WAP_sd~Score, data=x)),
model2=map(data, function(x) lm(WAP_sd~Score+Interest, data=x)),
model3=map(data, function(x) lm(WAP_sd~Score+partisan, data=x)),
model4=map(data, function(x) lm(WAP_sd~Score+media_diversity, data=x)),
model5=map(data, function(x) lm(WAP_sd~Score+pol_knowledge, data=x)),
model6=map(data, function(x) lm(WAP_sd~Score+Interest+partisan, data=x)),
model7=map(data, function(x) lm(WAP_sd~Score+Interest+media_diversity, data=x)),
model8=map(data, function(x) lm(WAP_sd~Score+Interest+pol_knowledge, data=x)),
model9=map(data, function(x) lm(WAP_sd~Score+Interest+partisan+media_diversity+pol_knowledge+age3, data=x)),
model10=map(data, function(x) lm(WAP_sd~Score+Interest+partisan+media_diversity+pol_knowledge+income, data=x)),
model11=map(data, function(x) lm(WAP_sd~Score+Interest+partisan+media_diversity+pol_knowledge+degree, data=x)),
model12=map(data, function(x) lm(WAP_sd~Score+Interest+partisan+media_diversity+pol_knowledge+as_factor(gender), data=x)),
model13=map(data, function(x) lm(WAP_sd~Score+Interest+partisan+media_diversity+pol_knowledge+age3+income+degree+as_factor(gender), data=x)),
model14=map(data, function(x) lm(WAP_sd~Score+Interest+partisan+media_diversity+pol_knowledge+age3+income+degree+as_factor(gender), data=x)),
model15=map(data, function(x) lm(WAP_sd~Score+Interest+partisan+media_diversity+pol_knowledge+age3+income+degree+as_factor(gender)+Score:Interest, data=x))) %>%
#Use across() to select which columns
#function(x) to specifiy applying a function to each column
# map(x, tidy) to say what you want to do to each column
mutate(across(model1:model15, function(x) map(x, tidy), .names="{col}_tidied")) %>%
pivot_longer(model1_tidied:model15_tidied, names_to = "Model_Name", values_to=c("Results")) %>%
unnest(Results)->WAP_models
#Tidying terms
WAP_models %>%
mutate(Model_Name=str_to_title(str_remove_all(Model_Name, "_tidied"))) %>%
mutate(Model_Name=str_replace_all(Model_Name, "(^Model)([0-9]+)", "\\1 \\2")) %>%
mutate(term=str_remove_all(term, "Score")) %>%
mutate(term=car::Recode(term, "'media_diversity'='Media Diversity';
'degree'='Degree';
'age3'='Age';
'pol_knowledge'='Political knowledge';
'income'='Income';'as_factor(gender)Female'='Female'")) ->WAP_models
WAP_models
WAP_models %>%
filter(Variable=="Primary_media") %>%
#Filter out the interaction model
filter(Model_Name!="Model 15") %>%
filter(str_detect(term, "Intercept", negate=T))  %>%
ggplot(., aes(x=estimate, y=fct_relevel(term, "Social_Media", "Online", "Mixed", after=10)))+
facet_wrap(~fct_relevel(Model_Name, "Model 10", "Model 11", "Model 12", "Model 13", "Model 14",  after=10))+
geom_pointrange(aes(xmin=estimate-(1.96*std.error), xmax=estimate+(1.96*std.error)))+geom_vline(xintercept=0, linetype=2, col="red")+labs(y="Variable", x="Coefficient")
table(WAP_models$term)
WAP_models %>%
filter(Variable=="Social_Use2") %>%
#Filter out the interaction model
filter(Model_Name!="Model 15") %>%
filter(str_detect(term, "Intercept", negate=T))  %>%
ggplot(., aes(x=estimate, y=fct_relevel(term, "Several times a day", "About once a day", "Several times a week", "About once a week","Less than once a week", after=10)))+
facet_wrap(~fct_relevel(Model_Name, "Model 10", "Model 11", "Model 12", "Model 13", "Model 14",  after=10))+
geom_pointrange(aes(xmin=estimate-(1.96*std.error), xmax=estimate+(1.96*std.error)))+geom_vline(xintercept=0, linetype=2, col="red")+labs(y="Variable", x="Coefficient")
# WAP_models %>%
#   filter(Variable=="Primary_media")
library(marginaleffects)
model6_pm <- lm(WAP_sd ~ Primary_media*Interest+ media_diversity+age3 + gender+degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
summary(model6_pm)
model6_su <- lm(WAP_sd ~ Social_Use2*Interest  + media_diversity+age3 + gender+degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
lm(media_diversity~Interest, data=on18) %>% summary()
summary(model6_su)
#**** Start thinking about control variables
WAP_reg <- list()
WAP_graph <- list()
WAP_reg[[1]] <- lm(WAP_sd ~ Primary_media, data = on18, na.action = na.omit);summary(WAP_reg[[1]])
WAP_graph[[1]] <- graph_regression(WAP_reg[[1]]); WAP_graph[[1]]
WAP_reg[[2]] <- lm(WAP_sd ~ Interest, data = on18, na.action = na.omit); summary(WAP_reg[[2]])
WAP_graph[[2]] <- graph_regression(WAP_reg[[2]]); WAP_graph[[2]]
WAP_reg[[3]] <- lm(WAP_sd ~ Interest + Primary_media, data = on18, na.action = na.omit); summary(WAP_reg[[3]])
WAP_graph[[3]] <- graph_regression(WAP_reg[[3]]); WAP_graph[[3]]
WAP_reg[[4]] <- lm(WAP_sd ~ Interest + Primary_media + age3, data = on18, na.action = na.omit); summary(WAP_reg[[4]])
WAP_graph[[4]] <- graph_regression(WAP_reg[[4]]); WAP_graph[[4]]
WAP_reg[[5]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree, data = on18, na.action = na.omit); summary(WAP_reg[[5]])
WAP_graph[[5]] <- graph_regression(WAP_reg[[5]]); WAP_graph[[5]]
WAP_reg[[6]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree + income3, data = on18, na.action = na.omit); summary(WAP_reg[[6]])
WAP_graph[[6]] <- graph_regression(WAP_reg[[6]]); WAP_graph[[6]]
WAP_reg[[7]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit); summary(WAP_reg[[7]])
WAP_graph[[7]] <- graph_regression(WAP_reg[[7]]); WAP_graph[[7]]
modelsummary::modelsummary(WAP_reg, stars = T)
WAP_Interact <- lm(WAP_sd ~ Primary_media*Interest, data = on18, na.action = na.omit)
summary(WAP_Interact)
WAP_Interact2 <- lm(WAP_sd ~ Primary_media*Interest  + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
summary(WAP_Interact2)
WAP_regdf <- map(WAP_reg, tidy, conf.int = TRUE)
WAP_regdf <- bind_rows(WAP_regdf, .id = "model_num")
WAP_regdf <- WAP_regdf %>%
filter(!term == "(Intercept)") %>%
mutate(term = case_match(term,
"Primary_mediaSocial_Media" ~ "Social Media (ref. Legacy News)",
"Primary_mediaOnline" ~ "Online News",
"Primary_mediaMixed" ~ "Mixed News",
"Interest" ~ "Political Interest",
"age3" ~  "Age",
"degree" ~ "University Degree",
"income3" ~ "Income",
"pol_knowledge" ~ "Political Knowledge"
),
term = as.factor(term),
term = fct_relevel(term,
"Political Knowledge", "Income",
"University Degree", "Age", "Political Interest",
"Mixed News", "Online News",
"Social Media (ref. Legacy News)"
),
model_num = paste0("Model ", model_num)
)
WAP_regs_PM <- WAP_regdf %>%
ggplot(aes(x = estimate, y = term, xmin = conf.low, xmax = conf.high)) +
geom_vline(xintercept = 0, col = "red", lty = 4) +
geom_point() + geom_linerange() + facet_wrap(~model_num) +
labs(x = "Estimates with 95% Confidence Intervals", y = NULL) +
theme_bw()
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_Interact, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
marginaleffects::plot_slopes(WAP_Interact2, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
#Display Models
modelsummary(WAP_reg, stars = T, vcov = "HC0") #As numbers
WAP_reg_df <- map(WAP_reg, tidy)
WAP_reg_df_ci <- map(WAP_reg, confint, level = 0.95, HC_type = "HC0")
WAP_reg_df_ci <- map(WAP_reg_df_ci, as_tibble)
WAP_reg_df <- bind_rows(WAP_reg_df, .id = "model_num")
WAP_reg_df_ci <- bind_rows(WAP_reg_df_ci) %>%
rename("conf.low" = "2.5 %", "conf.high" = "97.5 %")
WAP_reg_df <- bind_cols(WAP_reg_df, WAP_reg_df_ci)
COVARS <- c("Primary_media", "Interest", "age3", "degree", "income3", "pol_knowledge")
Spread_primary_media <- list()
for(i in 1:length(COVARS)){
Spread_primary_media[[i]] <-  lm_robust(reformulate(COVARS[1:i],
response = "Spread_sd"), data = on18, se_type = "HC0")
}
modelsummary(Spread_primary_media, stars = T)
model_names <- list(
"1" = "Model 1",
"2" = "Model 2",
"3" = "Model 3",
"4" = "Model 4",
"5" = "Model 5",
"6" = "Model 6",
"7" = "Model 7"
)
model_labeller <- function(variable, value){
return(model_names[value])
}
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() +
geom_linerange() + geom_vline(xintercept = 0, lty = 4) +
facet_wrap(~model_num, ncol = 4, labeller = model_labeller) + theme_bw()
#Investigating the age coefficient
summary(lm(WAP_sd ~ age, data = on18))
summary(lm(WAP_sd ~ age + I(age^2), data = on18))
age_poly <- lm(WAP_sd ~ Interest + Primary_media  + age + I(age^2), data = on18, na.action = na.omit); summary(age_poly)
summary(lm(WAP_sd ~ Interest + Primary_media + age + I(age^2) + degree + income3 + pol_knowledge, data = on18, na.action = na.omit))
age_legacy <- data.frame(age = seq(18, 100, 1),
Primary_media = "Legacy",
Interest = mean(on18$Interest, na.rm = T))
age_legacy[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_legacy, interval = "confidence")
age_legacy$media <- "Legacy"
age_mixed <- data.frame(age = seq(18, 100, 1),
Primary_media = "Mixed",
Interest = mean(on18$Interest, na.rm = T))
age_mixed[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_mixed, interval = "confidence")
age_mixed$media <- "Mixed"
age_online <- data.frame(age = seq(18, 100, 1),
Primary_media = "Online",
Interest = mean(on18$Interest, na.rm = T))
age_online[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_online, interval = "confidence")
age_online$media <- "Online"
age_social_media <- data.frame(age = seq(18, 100, 1),
Primary_media = "Social_Media",
Interest = mean(on18$Interest, na.rm = T))
age_social_media[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_social_media, interval = "confidence")
age_social_media$media <- "Social Media"
age_predicted <- rbind(age_legacy, age_mixed, age_online, age_social_media)
age_predicted_graph <- age_predicted %>%
ggplot(aes(x = age, y = predicted_WAP, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") +
labs(x = "Age", y = "Predicted Level of Affective Polarization \n (WAP Score)") +
theme_bw()
age_predicted_graph
#### Replicate models with the social use variable ####
WAP_reg_soc_use <- list()
WAP_reg_soc_use[[1]] <- lm(WAP_sd ~ Social_Use2, data = on18, na.action = na.omit);summary(WAP_reg_soc_use[[1]])
#WAP_graph[[1]] <- graph_regression(WAP_reg_soc_use[[1]]); WAP_graph[[1]]
WAP_reg_soc_use[[2]] <- lm(WAP_sd ~ Interest, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[2]])
#WAP_graph[[2]] <- graph_regression(WAP_reg_soc_use[[2]]); WAP_graph[[2]]
WAP_reg_soc_use[[3]] <- lm(WAP_sd ~ Interest + Social_Use2, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[3]])
#WAP_graph[[3]] <- graph_regression(WAP_reg_soc_use[[3]]); WAP_graph[[3]]
WAP_reg_soc_use[[4]] <- lm(WAP_sd ~ Interest + Social_Use2 + age3, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[4]])
#WAP_graph[[4]] <- graph_regression(WAP_reg_soc_use[[4]]); WAP_graph[[4]]
WAP_reg_soc_use[[5]] <- lm(WAP_sd ~ Interest + Social_Use2 + age3 + degree, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[5]])
#WAP_graph[[5]] <- graph_regression(WAP_reg_soc_use[[5]]); WAP_graph[[5]]
WAP_reg_soc_use[[6]] <- lm(WAP_sd ~ Interest + Social_Use2 + age3 + degree + income3, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[6]])
#WAP_graph[[6]] <- graph_regression(WAP_reg_soc_use[[6]]); WAP_graph[[6]]
WAP_reg_soc_use[[7]] <- lm(WAP_sd ~ Interest + Social_Use2 + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[7]])
#WAP_graph[[7]] <- graph_regression(WAP_reg_soc_use[[7]]); WAP_graph[[7]]
modelsummary(WAP_reg_soc_use, stars = T, vcov = "HC0")
#ggarrange(plotlist = list(WAP_primarymedia_graph, WAP_Interest_Graph, WAP_Interact_graph))
WAP_reg_soc_usedf <- map(WAP_reg_soc_use, tidy, conf.int = TRUE)
WAP_reg_soc_usedf <- bind_rows(WAP_reg_soc_usedf, .id = "model_num")
WAP_reg_soc_usedf <- WAP_reg_soc_usedf %>%
filter(!term == "(Intercept)") %>%
mutate(term = case_match(term,
"Social_Use2Less than once a week" ~ "Less than once a week (ref. Never)",
"Social_Use2About once a week" ~ "Once a week",
"Social_Use2Several times a week" ~ "Several Times a Week",
"Social_Use2About once a day" ~ "Once a Day",
"Social_Use2Several times a day" ~ "Several Times a Day",
"Interest" ~ "Political Interest",
"age3" ~  "Age",
"degree" ~ "University Degree",
"income3" ~ "Income",
"pol_knowledge" ~ "Political Knowledge"
),
term = as.factor(term),
term = fct_relevel(term,
"Political Knowledge", "Income",
"University Degree", "Age", "Political Interest",
"Several Times a Day", "Once a Day",
"Several Times a Week",
"Once a week",
"Less than once a week (ref. Never)"
),
model_num = paste0("Model ", model_num)
)
WAP_regs_SU <- WAP_reg_soc_usedf %>%
ggplot(aes(x = estimate, y = term, xmin = conf.low, xmax = conf.high)) +
geom_vline(xintercept = 0, col = "red", lty = 4) +
geom_point() + geom_linerange() + facet_wrap(~model_num) +
labs(x = "Estimates with 95% Confidence Intervals", y = NULL) +
theme_bw()
#### Affective polarization models for Leaders ####
#Create regression models for affective polarization for leaders using the weighted affective polarization (WAP) measure
WAP_lead_reg <- list()
WAP_lead_graph <- list()
WAP_lead_reg[[1]] <- lm(WAP_lead_sd ~ Primary_media, data = on18, na.action = na.omit);summary(WAP_lead_reg[[1]])
WAP_lead_graph[[1]] <- graph_regression(WAP_lead_reg[[1]]); WAP_lead_graph[[1]]
WAP_lead_reg[[2]] <- lm(WAP_lead_sd ~ Interest, data = on18, na.action = na.omit); summary(WAP_lead_reg[[2]])
WAP_lead_graph[[2]] <- graph_regression(WAP_lead_reg[[2]]); WAP_lead_graph[[2]]
WAP_lead_reg[[3]] <- lm(WAP_lead_sd ~ Interest + Primary_media, data = on18, na.action = na.omit); summary(WAP_lead_reg[[3]])
WAP_lead_graph[[3]] <- graph_regression(WAP_lead_reg[[3]]); WAP_lead_graph[[3]]
WAP_lead_reg[[4]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3, data = on18, na.action = na.omit); summary(WAP_lead_reg[[4]])
WAP_lead_graph[[4]] <- graph_regression(WAP_lead_reg[[4]]); WAP_lead_graph[[4]]
WAP_lead_reg[[5]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3 + degree, data = on18, na.action = na.omit); summary(WAP_lead_reg[[5]])
WAP_lead_graph[[5]] <- graph_regression(WAP_lead_reg[[5]]); WAP_lead_graph[[5]]
WAP_lead_reg[[6]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3 + degree + income3, data = on18, na.action = na.omit); summary(WAP_lead_reg[[6]])
WAP_lead_graph[[6]] <- graph_regression(WAP_lead_reg[[6]]); WAP_lead_graph[[6]]
WAP_lead_reg[[7]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit); summary(WAP_lead_reg[[7]])
WAP_lead_graph[[7]] <- graph_regression(WAP_lead_reg[[7]]); WAP_lead_graph[[7]]
WAP_lead_Interact <- lm(WAP_lead_sd ~ Primary_media*Interest, data = on18, na.action = na.omit)
summary(WAP_lead_Interact)
WAP_lead_Interact2 <- lm(WAP_lead_sd ~ Primary_media*Interest + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
summary(WAP_lead_Interact2)
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_lead_Interact, variables = "Interest", condition = "Primary_media") +
geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + coord_flip() + theme_bw()
marginaleffects::plot_slopes(WAP_lead_Interact2, variables = "Interest", condition = "Primary_media") +
geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + coord_flip() + theme_bw()
#Display Models
modelsummary(WAP_lead_reg, stars = T, vcov = "HC0") #As numbers
#### POLITICAL INTEREST AND AFFECTIVE POLARIZATION ####
Interest_pm <- lm(Interest ~ Primary_media, data = on18, na.action = na.omit); summary(Interest_pm)
Interest_su <- lm(Interest ~ Social_Use2, data = on18, na.action = na.omit); summary(Interest_su)
WAP_Interact <- lm(WAP_sd ~ Primary_media*Interest+ age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
summary(WAP_Interact)
WAP_Interact2 <- lm(WAP_sd ~ Social_Use2*Interest  + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
summary(WAP_Interact2)
#Visualize the marginal effects from the interaction effects
library(marginaleffects)
marginaleffects::plot_slopes(WAP_Interact, variables = "Primary_media", condition = "Interest") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + labs(y = "Marginal Effect of Primary Media Variable") + theme_bw()
summary(WAP_Interact)
predictions(WAP_Interact2, newdata=datagrid(Social_Use2=c("Never", "About once a day", "Several times a day")))
plot_predictions(WAP_Interact,
condition=list("Interest", "Primary_media"))
plot_predictions(WAP_Interact2,
condition=list("Interest",
Social_Use2=c("Never", "About once a day", "Several times a day")))
summary(WAP_Interact2)
plot_predictions(WAP_Interact2,
condition=list("Interest", Social_Use2=c("Never", "About once a day", "Several times a day")))
#marginaleffects::plot_slopes(WAP_Interact2, variables = "Social_Use2", condition = "Interest") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
#gam_model <- mgcv::gam(WAP_sd ~ s(age) + Primary_media + Interest + degree + income3 + pol_knowledge, data = on18)
#draw(gam_model, residuals = T)
#Theoretical distributions
set.seed(1234)
unimodal_data1 <- rnorm(1000, 0, 2)
unimodal_data2 <- rnorm(1000, 0, 1)
unimodal_data3 <- rnorm(1000, 0, 3)
unimodal_data4 <- rnorm(1000, 0, 1)
unimodal_data5 <- rnorm(1000, 0, 1)
unimodal_data <- c(unimodal_data1, unimodal_data2, unimodal_data3, unimodal_data4, unimodal_data5)
bimodality_coefficient(unimodal_data)
uni_modal <- as_tibble(unimodal_data) %>%
ggplot(aes(x = value)) +
geom_density(col = "forestgreen", fill = "forestgreen", alpha = 0.4) +
labs(subtitle = paste0("Bimodality Coefficent ",
round(bimodality_coefficient(unimodal_data), 2))) +
theme_bw()
semimodal_data1 <- rnorm(1000, -2, 1)
semimodal_data2 <- rnorm(100, 0, 1)
semimodal_data3 <- rnorm(1000, 2, 1)
semimodal_data <- c(semimodal_data1, semimodal_data2, semimodal_data3)
bimodality_coefficient(semimodal_data)
semi_modal <- as_tibble(semimodal_data) %>%
ggplot(aes(x = value)) +
geom_density(col = "forestgreen", fill = "forestgreen", alpha = 0.4) +
labs(subtitle = paste0("Bimodality Coefficent ",
round(bimodality_coefficient(semimodal_data), 2))) +
theme_bw()
bimod1 <- rnorm(1000, -1, 0.1)
bimod2 <- rnorm(1000, 1, 0.1)
bimodal_data <- c(bimod1, bimod2)
bimodality_coefficient(bimodal_data)
bimodal <- as_tibble(bimodal_data) %>%
ggplot(aes(x = value)) +
geom_density(col = "forestgreen", fill = "forestgreen", alpha = 0.4) +
labs(subtitle = paste0("Bimodality Coefficent ",
round(bimodality_coefficient(bimodal_data),2))) +
theme_bw()
#### media diversity by media consumption ####
on18 %>%
group_by(Primary_media) %>%
summarize(mean(media_diversity, na.rm=T))
names(on18)
#load libraries
library(tidyverse)
library(haven)
library(here)
library(labelled)
library(broom)
library(ggeffects)
library(modelsummary)
library(ggpubr)
#### Import Data####
on18<-read_sav(file=here("Data/Ontario ES 2018 LISPOP.sav"))
#### Run straightliner ####
source(here("Code/2_straightlining.r"))
nrow(on18)
#### Filter out non consenters ####
on18 %>%
filter(consent!=1) ->non_consenters
on18 %>%
filter(consent==1)->on18
####
names(on18)
library(rio)
on18 %>%
# select(indivfinfeel, immfeel) %>% str()
select(-yob2, postalcode, contains("irv_"), -`filter_$`, -regions) %>%
# write_sav(on18, file=here("Data/opes_2018.sav"))
as.data.frame() %>%
#select(indivfinfeel) %>%
write_sav(., path=here("Data/opes_2018.sav"), compress="zsav")
#export(., here("Data/opes_2018.sav"))
on18 %>%
# select(indivfinfeel, immfeel) %>% str()
select(-yob2, postalcode, contains("irv_"), -`filter_$`, -regions) %>%
# write_sav(on18, file=here("Data/opes_2018.sav"))
as.data.frame() %>%
#select(indivfinfeel) %>%
write_dta(., path=here("Data/opes_2018.dta"))
