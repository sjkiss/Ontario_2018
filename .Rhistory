affect_wt$PC_Like_wt <- (affect$PC_Like * 0.405)
affect_wt$Liberal_Like_wt <- (affect$Liberal_Like * 0.196)
affect_wt$NDP_Like_wt <- (affect$NDP_Like * 0.336)
affect_wt %>%
rowwise() %>%
mutate(mean_like=mean(c_across(6:9), na.rm=T))->affect_wt
affect_pol_cal_wt <- affect_wt %>%
select(., !(6:9)) %>%
pivot_longer(cols = !c(id, mean_like),
names_to = "Party",
values_to = "Party_like_score")
affect_pol_cal_wt %>%
mutate(vote_share=case_when(Party == "Green_Like" ~ 0.046, Party == "Liberal_Like" ~ 0.196, Party == "NDP_Like" ~ 0.336,
Party == "PC_Like" ~ 0.405
)) -> affect_pol_cal_wt
affect_pol_cal_wt$like_mean <- (affect_pol_cal_wt$Party_like_score - affect_pol_cal_wt$mean_like)^2
affect_pol_cal_wt$like_mean_wt <- (affect_pol_cal_wt$like_mean * affect_pol_cal_wt$vote_share)
affect_pol_cal_wt %>%
group_by(id) %>%
summarise(WAP = sum(like_mean_wt)) -> WAP_scores
WAP_scores$WAP <- sqrt(WAP_scores$WAP)
full_join(on18, WAP_scores, by = join_by(id)) -> on18
on18 %>%
group_by(Primary_media) %>%
summarise(mean = mean(pointerst_ONint, na.rm = T), sd = sd(pointerst_ONint, na.rm = T))
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T))
#create number of standard deviations from mean variable
policies_social_use
policies_social_use_sd_dis <- do.call(cbind, lapply(policies_social_use[, 1:11], sd_mean, na.rm = T))
#Policies_social_use_sd_dis is now each R's distance from the mean in SD.
head(policies_social_use_sd_dis)
policies_social_use_sd_dis %>%
bind_cols(., on18$Social_Use2, on18$WAP)->policies_social_use_sd_dis
names(policies_social_use_sd_dis)<-c(policy_names, "Social_Use2", "WAP")
policies_social_use_sd_dis
View(policies_social_use_sd_dis2)
View(policies_social_use_sd_dis_mean)
View(policies_social_use_sd_dis)
policies_social_use_sd_dis %>%
group_by(Social_Use2) %>%
summarise( across(2:12, list(.mean = mean, .se = se), na.rm = T )) -> policies_social_use_sd_dis_mean
policies_social_use_sd_dis_mean
on18 <- cbind(on18, policies_social_use_sd_dis)
policies_sd_social_dis_down <- policies_social_use_sd_dis_mean %>%
pivot_longer(cols = !c(Social_Use2, WAP),
names_to = c("Policy_Issue", ".value"),
names_sep = "\\." )
policies_social_use_sd_dis_mean
on18 <- cbind(on18, policies_social_use_sd_dis)
policies_sd_social_dis_down <- policies_social_use_sd_dis_mean %>%
pivot_longer(cols = !c(Social_Use2, WAP),
names_to = c("Policy_Issue", ".value"),
names_sep = "\\." )
policies_sd_social_dis_down
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
WAP_primarymedia <- lm(WAP ~ Primary_Media,data = on18)
#stop if function did not work properly
on18$Primary_media
WAP_primarymedia <- lm(WAP ~ Primary_Media, data = on18)
WAP_primarymedia <- lm(WAP ~ on18$Primary_Media, data = on18)
WAP_primarymedia <- lm(WAP ~ Primary_Media, data = on18)
WAP_primarymedia <- lm(WAP ~ Interest, data = on18)
WAP_primarymedia
#stop if function did not work properly
on18$Primary_media
WAP_primarymedia <- lm(WAP ~ Primary_media, data = on18)
WAP_primarymedia <- lm(WAP ~ Primary_media, data = on18, na.action = na.omit)
WAP_primarymedia
summary(WAP_primarymedia)
WAP_Interest <- lm(WAP ~ Interest, data = on18, na.action = na.omit)
summary(WAP_Interest)
WAP_Interact <- lm(WAP ~ Primary_media*Interest, data = on18, na.action = na.omit)
summary(WAP_Interact)
interact_help_racial_minorities %>%
ggplot( aes(x = x, y = predicted)) +
geom_line(colour = "forestgreen") +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.1) +
facet_wrap(~group) + theme_bw()
mods_interact[[2]][[1]] %>%
ggeffect(c("Primary_Media", "Interest")) -> interact_help_racial_minorities
interact_help_racial_minorities %>%
ggplot( aes(x = x, y = predicted)) +
geom_line(colour = "forestgreen") +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.1) +
facet_wrap(~group) + theme_bw()
mods_interact[[2]][[1]] %>%
ggeffect(c("Interest", "Primary_Media")) -> interact_help_racial_minorities
interact_help_racial_minorities %>%
ggplot( aes(x = x, y = predicted)) +
geom_line(colour = "forestgreen") +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.1) +
facet_wrap(~group) + theme_bw()
interact_help_racial_minorities %>%
ggplot( aes(x = x, y = predicted)) +
geom_line(colour = "forestgreen") +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.1) +
facet_wrap(~group) + theme_bw()
mods_interact
mods_interact[[2]][[2]] %>%
ggeffect(c("Interest", "Primary_Media"))
policies_social_use_sd_dis2_down
mods_interact[[2]][[2]] %>%
ggeffect(c("Interest", "Primary_Media")) -> interact_help_women
extract_model <- function(x, y){
mods_interact[[2]][[x]] %>%
ggeffect(c("Interest", "Primary_Media")) -> y
}
extract_model(1, interact_help_racial_minorities)
View(interact_help_racial_minorities)
extract_model(2, interact_help_women)
policies_social_use_sd_dis2_down
extract_model(3, interact_more_coporate_tax)
interact_more_coporate_tax
interact_more_coporate_tax
interact_more_coporate_tax
interact_more_coporate_tax
interact_more_coporate_tax
interact_more_coporate_tax
interact_more_coporate_tax
extract_model(3) -> more_coporate_tax
extract_model(3) -> interact_more_coporate_tax
interact_more_coporate_tax
policies_social_use_sd_dis2_down
extract_model(4) -> interact_more_personal_tax
extract_model(5) -> interact_private_health_care
extract_model(6) -> interact_minimum_wage_to_high_prices
extract_model(7) -> interact_income_inequality
extract_model(8) -> interact_business_benefits_everyone
extract_model(9) -> interact_drug_benefit_u25
print(policies_social_use_sd_dis2_down, n = 20)
extract_model(10) -> interact_free_post_secondary
extract_model(11) -> interact_inappropriate_sex_ed
extract_model <- function(x){
mods_interact[[2]][[x]] %>%
ggeffect(c("Interest", "Primary_Media"))
}
graph_interaction <- function(df){
df %>%
ggplot( aes(x = x, y = predicted)) +
geom_line(colour = "forestgreen") +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.1) +
facet_wrap(~group) + theme_bw()
}
extract_model(1) %>%
graph_interaction() -> interact_help_racial_minorities
interact_help_racial_minorities
extract_model(1) %>%
graph_interaction() -> interact_help_racial_minorities
extract_model(2) %>%
graph_interaction() -> interact_help_women
extract_model(3) %>%
graph_interaction() -> interact_more_coporate_tax
extract_model(4) %>%
graph_interaction() -> interact_more_personal_tax
extract_model(5) %>%
graph_interaction() -> interact_private_health_care
extract_model(6) %>%
graph_interaction() -> interact_minimum_wage_to_high_prices
extract_model(7) %>%
graph_interaction() -> interact_income_inequality
extract_model(8) %>%
graph_interaction() -> interact_business_benefits_everyone
extract_model(9) %>%
graph_interaction() -> interact_drug_benefit_u25
extract_model(10) %>%
graph_interaction() -> interact_free_post_secondary
extract_model(11) %>%
graph_interaction() -> interact_inappropriate_sex_ed
interact_help_racial_minorities
interact_help_women
interact_more_coporate_tax
extract_model(4) %>%
graph_interaction()
interact_private_health_care %>%
ggplot( aes(x = x, y = predicted)) +
geom_line(colour = "forestgreen") +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.1) +
facet_wrap(~group) + theme_bw()
extract_model(1)  -> interact_help_racial_minorities
extract_model(10) -> interact_free_post_secondary
interact_private_health_care
interact_free_post_secondary %>%
ggplot( aes(x = x, y = predicted)) +
geom_line(colour = "forestgreen") +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.1) +
facet_wrap(~group) + theme_bw()
interact_free_post_secondary %>%
ggplot( aes(x = x, y = predicted)) +
geom_line(colour = "forestgreen") +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.1) +
facet_wrap(~group) + theme_bw()
extract_model(7)
extract_model(8)
mods_interact[[2]][[1]]
mods_interact[[2]][[2]]
mods_interact
View(mods_interact)
View(mods_interact)
View(mods_all)
View(mods_Interest)
View(mods_media)
View(mods_media)
View(mods_Interest)
View(mods_interact)
View(mods_interact)
View(mods_media)
View(mods_interact)
mods_interact <- policies_social_use_sd_dis2_down %>%
group_by(Policy_Issue) %>%
summarise(lm_mod = list(lm(distance ~ Interest*Primary_Media, data = policies_social_use_sd_dis2_down))) %>%
mutate(tidied = map(lm_mod, tidy, conf.int = T))
mods_interact
modelsummary(mods_interact$lm_mod, stars=T)
modelsummary(mods_all$lm_mod, stars=T)
mods_interact <- policies_social_use_sd_dis2_down %>%
group_by(Policy_Issue) %>%
summarise(lm_mod = list(lm(distance ~ Interest*Primary_Media))) %>%
mutate(tidied = map(lm_mod, tidy, conf.int = T))
modelsummary(mods_interact$lm_mod, stars=T)
extract_model(1) %>%
graph_interaction() -> interact_help_racial_minorities
extract_model(1)
extract_model <- function(x){
mods_interact[[2]][[x]] %>%
ggeffect(c("Interest", "Primary_Media"))
}
extract_model(1) %>%
graph_interaction() -> interact_help_racial_minorities
mods_interact[[2]][[1]] %>%
ggeffect(c("Interest", "Primary_Media"))
mods_interact[[2]][[1]]
mods_interact[[2]][[1]] %>%
ggeffect(
#c("Interest", "Primary_Media")
)
mods_interact[[2]][[1]]
mods_interact[[2]][[1]] %>%
ggeffect(
#c("Interest", "Primary_Media")
)
?ggpredict
mods_interact[[2]][[1]] %>%
ggpredict(
c("Interest", "Primary_Media")
)
extract_model <- function(x){
mods_interact[[2]][[x]] %>%
ggpredict(c("Interest", "Primary_Media"))
}
extract_model(1) %>%
graph_interaction() -> interact_help_racial_minorities
interact_help_racial_minorities
extract_model(2) %>%
graph_interaction() -> interact_help_women
interact_help_women
extract_model(3) %>%
graph_interaction() -> interact_more_coporate_tax
interact_more_coporate_tax
extract_model(4) %>%
graph_interaction() -> interact_more_personal_tax
interact_more_personal_tax
extract_model(5) %>%
graph_interaction() -> interact_private_health_care
extract_model(6) %>%
graph_interaction() -> interact_minimum_wage_to_high_prices
extract_model(7) %>%
graph_interaction() -> interact_income_inequality
extract_model(8) %>%
graph_interaction() -> interact_business_benefits_everyone
extract_model(9) %>%
graph_interaction() -> interact_drug_benefit_u25
extract_model(10) -> interact_free_post_secondary
extract_model(10) %>%
graph_interaction() -> interact_free_post_secondary
extract_model(11) %>%
graph_interaction() -> interact_inappropriate_sex_ed
mods_media %>%
unnest(tidied) %>%
filter(term!="(Intercept)") %>%
ggplot(aes(x = estimate, y = term)) + geom_point() +
geom_linerange(aes(xmin=conf.low, xmax = conf.high), position = position_dodge(width=.75)) +
facet_wrap(~Policy_Issue, labeller = label_wrap_gen(width=30)) + geom_vline(xintercept = 0) + theme_bw()
knitr::opts_chunk$set(echo = TRUE)
#I start by setting the seed for reproducibility,
set.seed(05171814)
#I set the number of coin tosses
n_tosses <- 25
#The fair coin will have a probability of success of 0.5. I use pbinom to calculate the value of the cumulative density function, given the parameters I just set.
cdf_fair <- pbinom(0:n_tosses, size = n_tosses, prob = 0.5)
#I choose to let the biased coin have a probability of 0.7. I use pbinom again to calculate the CDF.
cdf_biased <- pbinom(0:n_tosses, size = n_tosses, prob = 0.7)
#I create a data frame that I will use for the plotting.
cdf_data <- data.frame(x = 0:n_tosses, cdf_fair = cdf_fair, cdf_biased = cdf_biased)
#I create the CDF comparison plot using ggplot. I use geom_step to draw a step function to easily illustrate the empirical cumulative density function.
cdf_plot <- ggplot(cdf_data, aes(x = x)) +
geom_step(aes(y = cdf_fair, linetype = "Fair Coin (p=0.5)", color = "Fair Coin (p=0.5)"), size = 1, show.legend = TRUE) +
geom_step(aes(y = cdf_biased, linetype = "Biased Coin (p=0.7)", color = "Biased Coin (p=0.7)"), size = 1, show.legend = TRUE) +
labs(
title = "CDF Comparison of Coin Tosses",
x = "Number of Successes",
y = "CDF"
) +
scale_linetype_manual(
values = c("Fair Coin (p=0.5)" = "solid", "Biased Coin (p=0.7)" = "solid"),
name = "Coin Type"
) +
scale_color_manual(
values = c("Fair Coin (p=0.5)" = "cyan3", "Biased Coin (p=0.7)" = "coral"),
name = "Coin Type"
) +
theme_minimal() +
theme(legend.position = "bottom", plot.title = element_text(hjust = 0.5, face = "bold"))
# Display the CDF comparison plot
print(cdf_plot)
#I start by setting the seed for reproducibility,
set.seed(05171814)
#I set the number of coin tosses
n_tosses <- 25
#The fair coin will have a probability of success of 0.5. I use pbinom to calculate the value of the cumulative density function, given the parameters I just set.
cdf_fair <- pbinom(0:n_tosses, size = n_tosses, prob = 0.5)
#I choose to let the biased coin have a probability of 0.7. I use pbinom again to calculate the CDF.
cdf_biased <- pbinom(0:n_tosses, size = n_tosses, prob = 0.7)
#I create a data frame that I will use for the plotting.
cdf_data <- data.frame(x = 0:n_tosses, cdf_fair = cdf_fair, cdf_biased = cdf_biased)
#I create the CDF comparison plot using ggplot. I use geom_step to draw a step function to easily illustrate the empirical cumulative density function.
cdf_plot <- ggplot(cdf_data, aes(x = x)) +
geom_step(aes(y = cdf_fair, linetype = "Fair Coin (p=0.5)", color = "Fair Coin (p=0.5)"), size = 1, show.legend = TRUE) +
geom_step(aes(y = cdf_biased, linetype = "Biased Coin (p=0.7)", color = "Biased Coin (p=0.7)"), size = 1, show.legend = TRUE) +
labs(
title = "CDF Comparison of Coin Tosses",
x = "Number of Successes",
y = "CDF"
) +
scale_linetype_manual(
values = c("Fair Coin (p=0.5)" = "solid", "Biased Coin (p=0.7)" = "solid"),
name = "Coin Type"
) +
scale_color_manual(
values = c("Fair Coin (p=0.5)" = "cyan3", "Biased Coin (p=0.7)" = "coral"),
name = "Coin Type"
) +
theme_minimal() +
theme(legend.position = "bottom", plot.title = element_text(hjust = 0.5, face = "bold"))
# Display the CDF comparison plot
print(cdf_plot)
#Create regression models for affective polarization
WAP_primarymedia <- lm(WAP ~ Primary_media, data = on18, na.action = na.omit)
summary(WAP_primarymedia)
WAP_Interest <- lm(WAP ~ Interest, data = on18, na.action = na.omit)
summary(WAP_Interest)
WAP_Interact <- lm(WAP ~ Primary_media*Interest, data = on18, na.action = na.omit)
summary(WAP_Interact)
testfun <- function(x, y){
x + 12 -> y
}
testfun(10, testr)
testr
graph_regression <- function(model, graphname){
require(tidyverse)
r <- tidy(model)
ci <- confint(model, level = 0.95) %>%
data.frame() %>%
rename("conf.low_95" = "X2.5..", "conf.high_95" = "X97.5..")
r <- bind_cols(r, ci) %>%
rename(Variable = term,
Coefficient = estimate,
SE = std.error) %>%
filter(!Variable %in% c("(Intercept)"))
r <- r %>% select(-SE, -statistic, - p.value)
ggplot(r, aes(y = Variable, x = Coefficient)) +  geom_hline(yintercept = 0, color = gray(1/2), lty =2) + geom_point()+
geom_linerange(aes(x = Variable, ymin = conf.low_95, ymax = conf.high_95)) + theme_bw()
}
graph_regression(WAP_primarymedia)
graph_regression <- function(model, graphname){
require("tidyverse")
r <- tidy(model)
ci <- confint(model, level = 0.95) %>%
data.frame() %>%
rename("conf.low_95" = "X2.5..", "conf.high_95" = "X97.5..")
r <- bind_cols(r, ci) %>%
rename(Variable = term,
Coefficient = estimate,
SE = std.error) %>%
filter(!Variable %in% c("(Intercept)"))
r <- r %>% select(-SE, -statistic, - p.value)
ggplot(r, aes(y = Variable, x = Coefficient)) +  geom_hline(yintercept = 0, color = gray(1/2), lty =2) + geom_point()+
geom_linerange(aes(x = Variable, ymin = conf.low_95, ymax = conf.high_95)) + theme_bw()
}
graph_regression(WAP_primarymedia)
graph_regression <- function(model, graphname){
r <- tidy(model)
ci <- confint(model, level = 0.95) %>%
data.frame() %>%
rename("conf.low_95" = "X2.5..", "conf.high_95" = "X97.5..")
r <- bind_cols(r, ci) %>%
rename(Variable = term,
Coefficient = estimate,
SE = std.error) %>%
filter(!Variable %in% c("(Intercept)"))
r <- r %>% select(-SE, -statistic, - p.value)
ggplot(r, aes(y = Variable, x = Coefficient)) +  geom_hline(yintercept = 0, color = gray(1/2), lty =2) + geom_point()+
geom_linerange(aes(x = Variable, ymin = conf.low_95, ymax = conf.high_95)) + theme_bw()
}
summary(WAP_primarymedia)
graph_regression(WAP_primarymedia)
library(broom)
graph_regression(WAP_primarymedia)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(haven)
library(here)
library(labelled)
library(broom)
install.packages("tidyverse")
install.packages("tidyverse")
graph_regression(WAP_primarymedia)
library(broom)
library(haven)
library(here)
library(labelled)
library(broom)
graph_regression(WAP_primarymedia)
?rename
require(tidyverse)
graph_regression <- function(model, graphname){
require(tidyverse)
r <- tidy(model)
ci <- confint(model, level = 0.95) %>%
data.frame() %>%
rename("conf.low_95" = "X2.5..", "conf.high_95" = "X97.5..")
r <- bind_cols(r, ci) %>%
rename(Variable = term,
Coefficient = estimate,
SE = std.error) %>%
filter(!Variable %in% c("(Intercept)"))
r <- r %>% select(-SE, -statistic, - p.value)
ggplot(r, aes(y = Variable, x = Coefficient)) +  geom_hline(yintercept = 0, color = gray(1/2), lty =2) + geom_point()+
geom_linerange(aes(x = Variable, ymin = conf.low_95, ymax = conf.high_95)) + theme_bw()
}
graph_regression(WAP_primarymedia)
r <- tidy(WAP_primarymedia)
ci <- confint(WAP_primarymedia, level = 0.95) %>%
data.frame() %>%
rename("conf.low_95" = "X2.5..", "conf.high_95" = "X97.5..")
r <- bind_cols(r, ci) %>%
rename(Variable = term,
Coefficient = estimate,
SE = std.error) %>%
filter(!Variable %in% c("(Intercept)"))
r <- r %>% select(-SE, -statistic, - p.value)
ggplot(r, aes(y = Variable, x = Coefficient)) +  geom_hline(yintercept = 0, color = gray(1/2), lty =2) + geom_point()+
geom_linerange(aes(x = Variable, ymin = conf.low_95, ymax = conf.high_95)) + theme_bw()
ggplot(r, aes(y = Variable, x = Coefficient)) +  geom_hline(yintercept = 0, color = gray(1/2), lty =2)
ggplot(r, aes(y = Variable, x = Coefficient)) +  geom_hline(yintercept = 0, color = gray(1/2), lty =2) + geom_point()+
ggplot(r, aes(y = Variable, x = Coefficient)) +  geom_hline(yintercept = 0, color = gray(1/2), lty =2) + geom_point()+
ggplot(r, aes(y = Variable, x = Coefficient)) +  geom_hline(yintercept = 0, color = gray(1/2), lty =2) + geom_point()
ggplot(r, aes(y = Variable, x = Coefficient)) +  geom_hline(yintercept = 0, color = gray(1/2), lty =2) + geom_point()
ggplot(r, aes(y = Variable, x = Coefficient)) +  geom_hline(yintercept = 0, color = gray(1/2), lty =2) + geom_point()
ggplot(r, aes(y = Variable, x = Coefficient)) +  geom_hline(yintercept = 0, color = gray(1/2), lty =2) + geom_point(aes(y = Variable, x = Coefficient)) +
geom_linerange(aes(x = Variable, ymin = conf.low_95, ymax = conf.high_95)) + theme_bw()
r
ggplot(r, aes(y = Variable, x = Coefficient)) +  geom_hline(yintercept = 0, color = gray(1/2), lty =2) + geom_point(aes(y = Variable, x = Coefficient)) +
geom_linerange(aes(x = Variable, ymin = conf.low_95, ymax = conf.high_95)) + theme_bw()
ggplot(r, aes(x = Variable, y = Coefficient)) +  geom_hline(yintercept = 0, color = gray(1/2), lty =2) + geom_point(aes(x = Variable, y = Coefficient)) +
geom_linerange(aes(x = Variable, ymin = conf.low_95, ymax = conf.high_95)) + theme_bw()
ggplot(r, aes(x = Variable, y = Coefficient)) +  geom_hline(yintercept = 0, color = gray(1/2), lty =2) + geom_point(aes(x = Variable, y = Coefficient)) +
geom_linerange(aes(x = Variable, ymin = conf.low_95, ymax = conf.high_95)) + theme_bw() + coord_flip()
graph_regression <- function(model, graphname){
require(tidyverse)
r <- tidy(model)
ci <- confint(model, level = 0.95) %>%
data.frame() %>%
rename("conf.low_95" = "X2.5..", "conf.high_95" = "X97.5..")
r <- bind_cols(r, ci) %>%
rename(Variable = term,
Coefficient = estimate,
SE = std.error) %>%
filter(!Variable %in% c("(Intercept)"))
r <- r %>% select(-SE, -statistic, - p.value)
ggplot(r, aes(y = Variable, x = Coefficient)) +  geom_hline(yintercept = 0, color = gray(1/2), lty =2) + geom_point()+
geom_linerange(aes(x = Variable, ymin = conf.low_95, ymax = conf.high_95)) + theme_bw() + coord_flip()
}
graph_regression(WAP_primarymedia)
graph_regression <- function(model, graphname){
require(tidyverse)
r <- tidy(model)
ci <- confint(model, level = 0.95) %>%
data.frame() %>%
rename("conf.low_95" = "X2.5..", "conf.high_95" = "X97.5..")
r <- bind_cols(r, ci) %>%
rename(Variable = term,
Coefficient = estimate,
SE = std.error) %>%
filter(!Variable %in% c("(Intercept)"))
r <- r %>% select(-SE, -statistic, - p.value)
ggplot(r, aes(x = Variable, y = Coefficient)) +  geom_hline(yintercept = 0, color = gray(1/2), lty =2) + geom_point()+
geom_linerange(aes(x = Variable, ymin = conf.low_95, ymax = conf.high_95)) + theme_bw() + coord_flip()
}
graph_regression(WAP_primarymedia)
graph_regression(WAP_primarymedia)
graph_regression(WAP_Interest)
graph_interaction(WAP_Interact)
library(ggeffects)
summary(WAP_Interact)
WAP_Interact %>%
ggeffect(c("Interest", "Primary_media"))
WAP_Interact %>%
ggeffect(c("Interest", "Primary_media")) %>%
graph_interaction()
