overlapping::boot.overlap(list(policy_left_mixed_vector, policy_conservatives_mixed_vector), B = 1000)
bayestestR::overlap(policy_left_mixed, policy_conservatives_mixed)
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
on18 <- on18 %>%
mutate(
Primary_media = relevel(as.factor(Primary_media), ref = "Mixed")
)
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
ggpubr::ggarrange(overlap_often, overlap_rarely, ncol = 1)
#### FUNCTIONS FOR POLARIZATION DATA ANALYSIS ####
pacman::p_load("tidyverse",
"bayestestR",
"mousetrap",
"lavaan",
"psych",
"overlapping")
#Display Models
modelsummary(WAP_reg, stars = T, vcov = "HC0") #As numbers
affect
affect %>%
pivot_longer(cols = !c(id, mean_like),
names_to = "Party",
values_to = "Party_like_score")
affect_pol_cal
lm(WAP.x ~ Primary_media, data = on18, na.action = na.omit)
lm(WAP ~ Primary_media, data = on18, na.action = na.omit)
lm(WAP_sd ~ age3, data = on18)
on18$age
on18$age2
on18$age3
lm(WAP_sd ~ age3, data = on18)
?Recode
summary(lm(WAP_sd ~ age3, data = on18))
summary(lm(WAP_sd ~ age2, data = on18))
#Display Models
modelsummary(WAP_lead_reg, stars = T, vcov = "HC0") #As numbers
ggpubr::ggarrange(overlap_often, overlap_rarely, ncol = 1)
overlapping::overlap(list(policy_left_rarely_vector, policy_conservative_social_rarely_vector))
overlapping::overlap(list(policy_left_often_vector, policy_conservative_often_vector))
on18$partyvote2018
left_wing <- on18 %>%
select(partyvote2018 == 1 | partyvote2018 == 3) %>%
filter(policy_issues)
left_wing <- on18 %>%
filter(partyvote2018 == 1 | partyvote2018 == 3) %>%
select(policy_issues)
on18 %>%
filter(partyvote2018 == 1 | partyvote2018 == 3)
left_wing <- on18 %>%
filter(partyvote2018 == 1 | partyvote2018 == 3) %>%
select(policy_polarization)
left_wing
on18$partyvote2018
right_wing <- on18 %>%
filter(partyvote2018 == 2) %>%
select(policy_polarization)
overlapping::overlap(left_wing, right_wing)
overlapping::overlap(as.double(left_wing), as.double(right_wing))
overlapping::overlap(list(left_wing, right_wing))
right_wing <- on18 %>%
filter(partyvote2018 == 2) %>%
select(policy_polarization) %>%
na.omit()
left_wing <- on18 %>%
filter(partyvote2018 == 1 | partyvote2018 == 3) %>%
select(policy_polarization) %>%
na.omit()
overlapping::overlap(list(left_wing, right_wing))
left_wing <- on18 %>%
filter(partyvote2018 == 1 | partyvote2018 == 3) %>%
select(policy_polarization) %>%
na.omit() %>%
as.double()
right_wing <- on18 %>%
filter(partyvote2018 == 2) %>%
select(policy_polarization) %>%
na.omit() %>%
as.double()
overlapping::overlap(list(left_wing, right_wing))
right_wing
left_wing
policy_left_legacy_vector
right_wing <- on18 %>%
filter(partyvote2018 == 2) %>%
select(policy_polarization) %>%
na.omit() %>%
as.vector()
left_wing <- on18 %>%
filter(partyvote2018 == 1 | partyvote2018 == 3) %>%
select(policy_polarization) %>%
na.omit() %>%
as.vector()
overlapping::overlap(list(left_wing, right_wing))
right_wing
on18 %>%
filter(partyvote2018 == 2) %>%
select(policy_polarization)
on18 %>%
filter(partyvote2018 == 2) %>%
select(policy_polarization) %>%
na.omit()
on18 %>%
filter(partyvote2018 == 2) %>%
select(policy_polarization) %>%
na.omit() %>%
as.vector()
right_wing <- on18 %>%
filter(partyvote2018 == 2) %>%
select(policy_polarization) %>%
na.omit() %>%
overlapping::overlap(list(left_wing$policy_polarization, right_wing$policy_polarization))
right_wing <- on18 %>%
filter(partyvote2018 == 2) %>%
select(policy_polarization) %>%
na.omit() %>%
overlapping::overlap(list(as.double(left_wing$policy_polarization), as.double(right_wing$policy_polarization)))
right_wing
right_wing <- on18 %>%
filter(partyvote2018 == 2) %>%
select(policy_polarization) %>%
na.omit()
overlapping::overlap(list(as.double(left_wing$policy_polarization),
as.double(right_wing$policy_polarization)))
ggpubr::ggarrange(overlap_legacy, overlap_online, overlap_smedia, overlap_mixed)
overlap_smedia <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_social_media, col = "red", fill = "red", alpha = 0.4) +
labs(title = "Social Media", subtitle = "Overlap Coefficent (0.74)", x = "Policy Positions", y = NULL) +
geom_density(aes(policy_polarization), data = policy_conservatives_media, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
ggpubr::ggarrange(overlap_legacy, overlap_online, overlap_smedia, overlap_mixed)
WAP_reg[[4]] <- lm(WAP_sd ~ Interest + Primary_media + I(age3^2), data = on18, na.action = na.omit); summary(WAP_reg[[4]])
WAP_reg[[4]] <- lm(WAP_sd ~ Interest + Primary_media + sge3 + age3^2, data = on18, na.action = na.omit); summary(WAP_reg[[4]])
WAP_reg[[4]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + age3^2, data = on18, na.action = na.omit); summary(WAP_reg[[4]])
WAP_reg[[4]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + I(age3^2), data = on18, na.action = na.omit); summary(WAP_reg[[4]])
predict(WAP_reg[[4]])
?predict
on18$Primary_media
data.frame(age3 = seq(0.18, 1, 0.01),
Primary_media = 1,
Interest = mean(on18$Interest),
)
seq(0.18, 1, 0.01)
length(seq(0.18, 1, 0.01))
data.frame(age3 = seq(0.18, 1, 0.01),
Primary_media = rep(1, 83),
Interest = mean(on18$Interest)
)
data.frame(age3 = seq(0.18, 1, 0.01),
Primary_media = rep(1, 83),
Interest = mean(on18$Interest, na.rm = T)
)
predict_legacy <- data.frame(age3 = seq(0.18, 1, 0.01),
Primary_media = rep(1, 83),
Interest = mean(on18$Interest, na.rm = T)
)
predict_legacy[ , c("predicted_values",
"predicted_lower",
"predicted_upper")] <- predict(WAP_reg[[4]], predict_legacy, interval = "confidence")
predict_legacy <- data.frame(age3 = seq(0.18, 1, 0.01),
Primary_media = rep("Legacy", 83),
Interest = mean(on18$Interest, na.rm = T)
)
predict_legacy[ , c("predicted_values",
"predicted_lower",
"predicted_upper")] <- predict(WAP_reg[[4]], predict_legacy, interval = "confidence")
plot(predict_leagcy$age3, predict_legacy$predicted_values)
plot(predict_legacy$age3, predict_legacy$predicted_values)
predict_online <- data.frame(age3 = seq(0.18, 1, 0.01),
Primary_media = rep("Online", 83),
Interest = mean(on18$Interest, na.rm = T)
)
predict_online[ , c("predicted_values",
"predicted_lower",
"predicted_upper")] <- predict(WAP_reg[[4]], predict_online, interval = "confidence")
plot(predict_online$age3, predict_online$predicted_values)
predict_social[ , c("predicted_values",
"predicted_lower",
"predicted_upper")] <- predict(WAP_reg[[4]], predict_social, interval = "confidence")
predict_social <- data.frame(age3 = seq(0.18, 1, 0.01),
Primary_media = rep("Social_Media", 83),
Interest = mean(on18$Interest, na.rm = T)
)
predict_social[ , c("predicted_values",
"predicted_lower",
"predicted_upper")] <- predict(WAP_reg[[4]], predict_social, interval = "confidence")
plot(predict_social$age3, predict_social$predicted_values)
ggplot() + geom_line(aes(x = predicted_values, y = age3), predict_legacy, col = "blue") +
geom_line(aes(x = predicted_values, y = age3), predict_online, col = "green") +
geom_line(aes(x = predicted_values, y = age3), predict_social, col = "red")
ggplot() + geom_point(aes(x = predicted_values, y = age3), predict_legacy, col = "blue") +
geom_point(aes(x = predicted_values, y = age3), predict_online, col = "green") +
geom_point(aes(x = predicted_values, y = age3), predict_social, col = "red")
ggplot() + geom_point(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_point(aes(y = predicted_values, x = age3), predict_online, col = "green") +
geom_point(aes(y = predicted_values, x = age3), predict_social, col = "red")
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_point(aes(y = predicted_values, x = age3), predict_online, col = "green") +
geom_point(aes(y = predicted_values, x = age3), predict_social, col = "red")
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_ribbon(aes(ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.3) +
geom_line(aes(y = predicted_values, x = age3), predict_online, col = "green") +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "red")
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_ribbon(aes(ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.3)
rlang::last_trace()
?geom_ribbon
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_ribbon(aes(x = age, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.3)
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.3)
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0.3) + theme_bw()
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0.3) + theme_bw()
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.3) +
geom_line(aes(y = predicted_values, x = age3), predict_online, col = "green") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_online, alpha = 0.3) +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "red") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0.3) + theme_bw()
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.1, col = "blue") +
geom_line(aes(y = predicted_values, x = age3), predict_online, col = "green") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_online, alpha = 0.3) +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "red") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0.3) + theme_bw()
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.1, col = "blue", lty = "dashed") +
geom_line(aes(y = predicted_values, x = age3), predict_online, col = "green") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_online, alpha = 0.3) +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "red") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0.3) + theme_bw()
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.1, col = "blue", lty = "dashed") +
geom_line(aes(y = predicted_values, x = age3), predict_online, col = "forestgreen") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_online, alpha = 0.1, col = "forestgreen", lty = "dotted") +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "darkred") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0.1, col = "darkred") + theme_bw()
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0, col = "blue", lty = "dashed") +
geom_line(aes(y = predicted_values, x = age3), predict_online, col = "forestgreen") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_online, alpha = 0, col = "forestgreen", lty = "dotted") +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "darkred") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0, col = "darkred") + theme_bw()
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.1, fill = "blue" , col = "blue", lty = "dashed") +
geom_line(aes(y = predicted_values, x = age3), predict_online, col = "forestgreen") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_online, alpha = 0, col = "forestgreen", lty = "dotted") +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "darkred") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0, col = "darkred") + theme_bw()
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.1, fill = "blue" , col = "blue", lty = "dashed") +
geom_line(aes(y = predicted_values, x = age3), predict_online, col = "forestgreen") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_online, alpha = 0, col = "forestgreen", lty = "dotted", fill = "forestgreen") +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "darkred") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0, col = "darkred", fill = "darkred") + theme_bw()
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.1, fill = "blue" , col = "blue", lty = "dashed") +
geom_line(aes(y = predicted_values, x = age3), predict_online, col = "forestgreen") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_online, alpha = 0.1, col = "forestgreen", lty = "dotted", fill = "forestgreen") +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "darkred") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0.1, col = "darkred", fill = "darkred") + theme_bw()
WAP_reg[[4]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + I(age3^2), data = on18, na.action = na.omit); summary(WAP_reg[[4]])
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
?aggregate
?kable
citation("overlapping")
ciation
citation()
citation("mousetrap")
age3
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.1, fill = "blue" , col = "blue", lty = "dashed") +
geom_point(mapping = aes(y = predicted_values, x = age3), data = predict_legacy)
library(tidyverse)
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.1, fill = "blue" , col = "blue", lty = "dashed") +
geom_point(mapping = aes(y = predicted_values, x = age3), data = predict_legacy)
predict_social
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.1, fill = "blue" , col = "blue", lty = "dashed") +
geom_point(mapping = aes(y = age3, x = length(on18)), data = on18)
length(on18)
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.1, fill = "blue" , col = "blue", lty = "dashed") +
geom_point(mapping = aes(y = age3), data = on18)
geom_line(aes(y = predicted_values, x = age3), predict_online, col = "forestgreen") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_online, alpha = 0.1, col = "forestgreen", lty = "dotted", fill = "forestgreen") +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "darkred") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0.1, col = "darkred", fill = "darkred") + theme_bw()
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict_legacy, col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.1, fill = "blue" , col = "blue", lty = "dashed") +
geom_line(aes(y = predicted_values, x = age3), predict_online, col = "forestgreen") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_online, alpha = 0.1, col = "forestgreen", lty = "dotted", fill = "forestgreen") +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "darkred") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0.1, col = "darkred", fill = "darkred") + theme_bw()
predict_social[ , c("predicted_values",
"predicted_lower",
"predicted_upper")] <- predict(WAP_reg[[4]], on18, interval = "confidence")
predict(WAP_reg[[4]], on18, interval = "confidence")
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict(WAP_reg[[4]], on18, interval = "confidence"), col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.1, fill = "blue" , col = "blue", lty = "dashed") +
geom_line(aes(y = predicted_values, x = age3), predict_online, col = "forestgreen") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_online, alpha = 0.1, col = "forestgreen", lty = "dotted", fill = "forestgreen") +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "darkred") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0.1, col = "darkred", fill = "darkred") + theme_bw()
library(tidyverse)
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict(WAP_reg[[4]], on18, interval = "confidence"), col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.1, fill = "blue" , col = "blue", lty = "dashed") +
geom_line(aes(y = predicted_values, x = age3), predict_online, col = "forestgreen") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_online, alpha = 0.1, col = "forestgreen", lty = "dotted", fill = "forestgreen") +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "darkred") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0.1, col = "darkred", fill = "darkred") + theme_bw()
ggplot() + geom_line(aes(y = predicted_values, x = age3), as.data.frame(predict(WAP_reg[[4]], on18, interval = "confidence")), col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.1, fill = "blue" , col = "blue", lty = "dashed") +
geom_line(aes(y = predicted_values, x = age3), predict_online, col = "forestgreen") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_online, alpha = 0.1, col = "forestgreen", lty = "dotted", fill = "forestgreen") +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "darkred") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0.1, col = "darkred", fill = "darkred") + theme_bw()
ggplot() + geom_line(aes(y = predicted_values, x = on18$age3), as.data.frame(predict(WAP_reg[[4]], on18, interval = "confidence")), col = "blue")
plot(on18$age3, on18$WAP)
plot(on18$age, on18$WAP)
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
overlap_rarely <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_rarely, col = "red", fill = "red", alpha = 0.4) +
geom_density(aes(policy_polarization), data = policy_conservative_social_rarely, col = "blue", fill = "blue", alpha = 0.4) +
labs(title = "Uses Social Media Rarely", subtitle = "Overlap Coefficent (0.70)", x = "Policy Positions", y = NULL) + theme_bw()
ggpubr::ggarrange(overlap_often, overlap_rarely, ncol = 1)
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n))->mean_affect_scores
library(tidyverse)
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n))->mean_affect_scores
mean_affect_scores
mean_affect_scores %>%
filter(complete.cases(.)) %>%
ggplot(., aes(x = mean,
y = Social_Use2,
colour = Social_Use2)) +
geom_point()+
geom_errorbar(aes (xmin = mean - (1.96*se), xmax = mean + (1.96*se)), width =.2) +
labs(x = "Mean", y= "Social Media Use") +
theme_bw()  +
theme(axis.text.y=element_blank(),
axis.ticks.y = element_blank(),
strip.text = element_text(size=8))+
guides(color=guide_legend(reverse=T))+xlim(c(0,0.5)) -> affect_scores_social_use; affect_scores_social_use
on18 %>%
group_by(Primary_media) %>%
summarise(mean = mean(Soc_dis, na.rm = T), sd = sd(Soc_dis, na.rm = T))
mean(on18$WAP)
mean(on18$WAP, na.rm = T)
mean(on18$WAP, na.rm = T); sd(on18$WAP, na.rm = T)
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
"Standard Deviation" = sd(on18$WAP, na.rm = T),
"Minimum" = min(on18$WAP, na.rm = T))
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = n(on18$WAP))
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = n(on18$WAP))
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = tally(on18$WAP))
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = count(on18$WAP))
on18$WAP
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = (na.omit(on18$WAP) %>% nrow()))
(na.omit(on18$WAP) %>% nrow())
na.omit(on18$WAP)
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = (nrow(!is.na(on18$WAP))))
!is.na(on18$WAP)
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = (length(!is.na(on18$WAP))))
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n))->mean_affect_scores
mean_affect_scores
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), Min = min(WAP, na.rm = T), max = max(WAP, na.rm = T), n=n())
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), Min = min(WAP, na.rm = T), max = max(WAP, na.rm = T), n=n()) -> descripts_WAP
descripts_WAP <- rbind(tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = (length(!is.na(on18$WAP)))),
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), Min = min(WAP, na.rm = T), max = max(WAP, na.rm = T), n=n()) )
descripts_WAP
descripts_WAP <- rbind(tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = (length(!is.na(on18$WAP)))),
on18 %>%
group_by(Social_Use2) %>%
summarise(Mean = mean(WAP, na.rm = T), Standard_Deviation = sd(WAP, na.rm = T), Minimum = min(WAP, na.rm = T), Maximum = max(WAP, na.rm = T), N=n()) %>%
rename(Group = Social_Use2))
descripts_WAP
kableExtra::kable(descripts_WAP)
?kable
kableExtra::kable(descripts_WAP, format = "pipe")
#| label: setup
#| echo: false
library(knitr)
opts_knit$set(root.dir=rprojroot::find_rstudio_root_file())
#opts_chunk$set(warning=F,message=F)
#| label: import
#| echo: false
#| warning: false
#| message: false
#| results: 'hide'
#| cache: true
source("Code/3_polarization.R")
kableExtra::kable(descripts_WAP, format = "pipe")
kableExtra::kable(descripts_WAP, format = "pipe")
kableExtra::kable(descripts_WAP, format = "pipe")
kableExtra::kable(descripts_WAP, format = "pipe", digits = 3)
kableExtra::kable(descripts_WAP, format = "pipe", digits = 3, align = "c")
kableExtra::kable(descripts_WAP, format = "pipe", digits = 3)
?cat\
?cat
#### Affective Polarization ####
on18$vote2018
on18 %>%
group_by(vote2018) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n)) -> affect_scores_party
library(tidyverse)
on18 %>%
group_by(vote2018) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n)) -> affect_scores_party
affect_scores_party
on18$vote2018
library(haven)
on18 %>%
group_by(vote2018) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n)) -> affect_scores_party
affect_scores_party
#### Affective Polarization ####
on18$partyvote2018
on18 %>%
group_by(partyvote2018) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n)) -> affect_scores_party
on18 %>%
group_by(partyvote2018) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n)) -> affect_scores_party
affect_scores_party
(on18 %>%
group_by(partyvote2018) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n)) -> affect_scores_party)
(on18 %>%
group_by(Primary_media) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n)) -> affect_scores_primary_media)
on18 %>%
group_by(partyvote2018) %>%
summarise(Mean = mean(WAP, na.rm = T), Standard_Deviation = sd(WAP, na.rm = T), Minimum = min(WAP, na.rm = T), Maximum = max(WAP, na.rm = T), N=n()) %>%
rename(Group = partyvote2018) -> affect_scores_party
(on18 %>%
group_by(partyvote2018) %>%
summarise(Mean = mean(WAP, na.rm = T), Standard_Deviation = sd(WAP, na.rm = T), Minimum = min(WAP, na.rm = T), Maximum = max(WAP, na.rm = T), N=n()) %>%
rename(Group = partyvote2018) -> affect_scores_party)
(on18 %>%
group_by(Primary_media) %>%
summarise(Mean = mean(WAP, na.rm = T), Standard_Deviation = sd(WAP, na.rm = T), Minimum = min(WAP, na.rm = T), Maximum = max(WAP, na.rm = T), N=n()) %>%
rename(Group = Primary_media) -> affect_scores_primary_media)
descripts_WAP <- rbind(tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = (length(!is.na(on18$WAP)))),
on18 %>%
group_by(Social_Use2) %>%
summarise(Mean = mean(WAP, na.rm = T), Standard_Deviation = sd(WAP, na.rm = T), Minimum = min(WAP, na.rm = T), Maximum = max(WAP, na.rm = T), N=n()) %>%
rename(Group = Social_Use2), affect_scores_party, affect_scores_primary_media)
kableExtra::kable(descripts_WAP, format = "pipe", digits = 3)
#### Affective Polarization ####
on18$partyvote2018
#| label: setup
#| echo: false
library(knitr)
opts_knit$set(root.dir=rprojroot::find_rstudio_root_file())
#opts_chunk$set(warning=F,message=F)
0.447 -  0.433
summary(WAP_lead_Interact)
WAP_lead_graph[[2]] <- graph_regression(WAP_lead_reg[[2]]); WAP_lead_graph[[2]]
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
WAP_lead_graph[[1]] <- graph_regression(WAP_lead_reg[[1]]); WAP_lead_graph[[1]]
WAP_lead_reg[[1]] <- lm(WAP_lead_sd ~ Primary_media, data = on18, na.action = na.omit);summary(WAP_lead_reg[[1]])
WAP_lead_graph[[7]] <- graph_regression(WAP_lead_reg[[7]]); WAP_lead_graph[[7]]
WAP_lead_reg[[7]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit); summary(WAP_lead_reg[[7]])
