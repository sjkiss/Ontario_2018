geom_line(aes(y = predicted_values, x = age3), predict_online, col = "forestgreen") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_online, alpha = 0.1, col = "forestgreen", lty = "dotted", fill = "forestgreen") +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "darkred") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0.1, col = "darkred", fill = "darkred") + theme_bw()
predict_social[ , c("predicted_values",
"predicted_lower",
"predicted_upper")] <- predict(WAP_reg[[4]], on18, interval = "confidence")
predict(WAP_reg[[4]], on18, interval = "confidence")
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict(WAP_reg[[4]], on18, interval = "confidence"), col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.1, fill = "blue" , col = "blue", lty = "dashed") +
geom_line(aes(y = predicted_values, x = age3), predict_online, col = "forestgreen") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_online, alpha = 0.1, col = "forestgreen", lty = "dotted", fill = "forestgreen") +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "darkred") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0.1, col = "darkred", fill = "darkred") + theme_bw()
library(tidyverse)
ggplot() + geom_line(aes(y = predicted_values, x = age3), predict(WAP_reg[[4]], on18, interval = "confidence"), col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.1, fill = "blue" , col = "blue", lty = "dashed") +
geom_line(aes(y = predicted_values, x = age3), predict_online, col = "forestgreen") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_online, alpha = 0.1, col = "forestgreen", lty = "dotted", fill = "forestgreen") +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "darkred") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0.1, col = "darkred", fill = "darkred") + theme_bw()
ggplot() + geom_line(aes(y = predicted_values, x = age3), as.data.frame(predict(WAP_reg[[4]], on18, interval = "confidence")), col = "blue") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_legacy, alpha = 0.1, fill = "blue" , col = "blue", lty = "dashed") +
geom_line(aes(y = predicted_values, x = age3), predict_online, col = "forestgreen") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_online, alpha = 0.1, col = "forestgreen", lty = "dotted", fill = "forestgreen") +
geom_line(aes(y = predicted_values, x = age3), predict_social, col = "darkred") +
geom_ribbon(aes(x = age3, ymin = predicted_lower, ymax = predicted_upper), predict_social, alpha = 0.1, col = "darkred", fill = "darkred") + theme_bw()
ggplot() + geom_line(aes(y = predicted_values, x = on18$age3), as.data.frame(predict(WAP_reg[[4]], on18, interval = "confidence")), col = "blue")
plot(on18$age3, on18$WAP)
plot(on18$age, on18$WAP)
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
overlap_rarely <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_rarely, col = "red", fill = "red", alpha = 0.4) +
geom_density(aes(policy_polarization), data = policy_conservative_social_rarely, col = "blue", fill = "blue", alpha = 0.4) +
labs(title = "Uses Social Media Rarely", subtitle = "Overlap Coefficent (0.70)", x = "Policy Positions", y = NULL) + theme_bw()
ggpubr::ggarrange(overlap_often, overlap_rarely, ncol = 1)
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n))->mean_affect_scores
library(tidyverse)
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n))->mean_affect_scores
mean_affect_scores
mean_affect_scores %>%
filter(complete.cases(.)) %>%
ggplot(., aes(x = mean,
y = Social_Use2,
colour = Social_Use2)) +
geom_point()+
geom_errorbar(aes (xmin = mean - (1.96*se), xmax = mean + (1.96*se)), width =.2) +
labs(x = "Mean", y= "Social Media Use") +
theme_bw()  +
theme(axis.text.y=element_blank(),
axis.ticks.y = element_blank(),
strip.text = element_text(size=8))+
guides(color=guide_legend(reverse=T))+xlim(c(0,0.5)) -> affect_scores_social_use; affect_scores_social_use
on18 %>%
group_by(Primary_media) %>%
summarise(mean = mean(Soc_dis, na.rm = T), sd = sd(Soc_dis, na.rm = T))
mean(on18$WAP)
mean(on18$WAP, na.rm = T)
mean(on18$WAP, na.rm = T); sd(on18$WAP, na.rm = T)
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
"Standard Deviation" = sd(on18$WAP, na.rm = T),
"Minimum" = min(on18$WAP, na.rm = T))
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = n(on18$WAP))
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = n(on18$WAP))
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = tally(on18$WAP))
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = count(on18$WAP))
on18$WAP
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = (na.omit(on18$WAP) %>% nrow()))
(na.omit(on18$WAP) %>% nrow())
na.omit(on18$WAP)
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = (nrow(!is.na(on18$WAP))))
!is.na(on18$WAP)
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = (length(!is.na(on18$WAP))))
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n))->mean_affect_scores
mean_affect_scores
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), Min = min(WAP, na.rm = T), max = max(WAP, na.rm = T), n=n())
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), Min = min(WAP, na.rm = T), max = max(WAP, na.rm = T), n=n()) -> descripts_WAP
descripts_WAP <- rbind(tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = (length(!is.na(on18$WAP)))),
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), Min = min(WAP, na.rm = T), max = max(WAP, na.rm = T), n=n()) )
descripts_WAP
descripts_WAP <- rbind(tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = (length(!is.na(on18$WAP)))),
on18 %>%
group_by(Social_Use2) %>%
summarise(Mean = mean(WAP, na.rm = T), Standard_Deviation = sd(WAP, na.rm = T), Minimum = min(WAP, na.rm = T), Maximum = max(WAP, na.rm = T), N=n()) %>%
rename(Group = Social_Use2))
descripts_WAP
kableExtra::kable(descripts_WAP)
?kable
kableExtra::kable(descripts_WAP, format = "pipe")
#| label: setup
#| echo: false
library(knitr)
opts_knit$set(root.dir=rprojroot::find_rstudio_root_file())
#opts_chunk$set(warning=F,message=F)
#| label: import
#| echo: false
#| warning: false
#| message: false
#| results: 'hide'
#| cache: true
source("Code/3_polarization.R")
kableExtra::kable(descripts_WAP, format = "pipe")
kableExtra::kable(descripts_WAP, format = "pipe")
kableExtra::kable(descripts_WAP, format = "pipe")
kableExtra::kable(descripts_WAP, format = "pipe", digits = 3)
kableExtra::kable(descripts_WAP, format = "pipe", digits = 3, align = "c")
kableExtra::kable(descripts_WAP, format = "pipe", digits = 3)
?cat\
?cat
#### Affective Polarization ####
on18$vote2018
on18 %>%
group_by(vote2018) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n)) -> affect_scores_party
library(tidyverse)
on18 %>%
group_by(vote2018) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n)) -> affect_scores_party
affect_scores_party
on18$vote2018
library(haven)
on18 %>%
group_by(vote2018) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n)) -> affect_scores_party
affect_scores_party
#### Affective Polarization ####
on18$partyvote2018
on18 %>%
group_by(partyvote2018) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n)) -> affect_scores_party
on18 %>%
group_by(partyvote2018) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n)) -> affect_scores_party
affect_scores_party
(on18 %>%
group_by(partyvote2018) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n)) -> affect_scores_party)
(on18 %>%
group_by(Primary_media) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n)) -> affect_scores_primary_media)
on18 %>%
group_by(partyvote2018) %>%
summarise(Mean = mean(WAP, na.rm = T), Standard_Deviation = sd(WAP, na.rm = T), Minimum = min(WAP, na.rm = T), Maximum = max(WAP, na.rm = T), N=n()) %>%
rename(Group = partyvote2018) -> affect_scores_party
(on18 %>%
group_by(partyvote2018) %>%
summarise(Mean = mean(WAP, na.rm = T), Standard_Deviation = sd(WAP, na.rm = T), Minimum = min(WAP, na.rm = T), Maximum = max(WAP, na.rm = T), N=n()) %>%
rename(Group = partyvote2018) -> affect_scores_party)
(on18 %>%
group_by(Primary_media) %>%
summarise(Mean = mean(WAP, na.rm = T), Standard_Deviation = sd(WAP, na.rm = T), Minimum = min(WAP, na.rm = T), Maximum = max(WAP, na.rm = T), N=n()) %>%
rename(Group = Primary_media) -> affect_scores_primary_media)
descripts_WAP <- rbind(tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = (length(!is.na(on18$WAP)))),
on18 %>%
group_by(Social_Use2) %>%
summarise(Mean = mean(WAP, na.rm = T), Standard_Deviation = sd(WAP, na.rm = T), Minimum = min(WAP, na.rm = T), Maximum = max(WAP, na.rm = T), N=n()) %>%
rename(Group = Social_Use2), affect_scores_party, affect_scores_primary_media)
kableExtra::kable(descripts_WAP, format = "pipe", digits = 3)
#### Affective Polarization ####
on18$partyvote2018
#| label: setup
#| echo: false
library(knitr)
opts_knit$set(root.dir=rprojroot::find_rstudio_root_file())
#opts_chunk$set(warning=F,message=F)
0.447 -  0.433
summary(WAP_lead_Interact)
WAP_lead_graph[[2]] <- graph_regression(WAP_lead_reg[[2]]); WAP_lead_graph[[2]]
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
WAP_lead_graph[[1]] <- graph_regression(WAP_lead_reg[[1]]); WAP_lead_graph[[1]]
WAP_lead_reg[[1]] <- lm(WAP_lead_sd ~ Primary_media, data = on18, na.action = na.omit);summary(WAP_lead_reg[[1]])
WAP_lead_graph[[7]] <- graph_regression(WAP_lead_reg[[7]]); WAP_lead_graph[[7]]
WAP_lead_reg[[7]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit); summary(WAP_lead_reg[[7]])
primarynews_7
#### LOAD SCRIPTS ####
source("Code/1_load_on18.R") #clean and load dataset
source("Code/0_functions.R") #load custom functions and packages needed for these analyses
on18$primarynews_1
on18$primarynews_1
on18$Social_Use2
on18$Social_Use
cor_policies <- on18 %>%
dplyr::select(c(help_racial_minorities, help_women, more_coporate_tax,
more_personal_tax, income_inequality, drug_benefit_u25, free_post_secondary,
lr_private_health_care, Lr_minimum_wage_to_high_prices, lr_business_benefits_everyone,
lr_inappropriate_sex_ed
)) %>%
cor(., use = "complete.obs")
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
cor_policies <- on18 %>%
dplyr::select(c(help_racial_minorities, help_women, more_coporate_tax,
more_personal_tax, income_inequality, drug_benefit_u25, free_post_secondary,
lr_private_health_care, Lr_minimum_wage_to_high_prices, lr_business_benefits_everyone,
lr_inappropriate_sex_ed
)) %>%
cor(., use = "complete.obs")
eigen(cor_policies)$values
psych::fa(cor_policies, nfactors = 3)
policy_issues <- 'policy =~ help_racial_minorities + help_women + more_coporate_tax +
more_personal_tax + income_inequality + drug_benefit_u25 + free_post_secondary +
lr_private_health_care + Lr_minimum_wage_to_high_prices + lr_business_benefits_everyone +
lr_inappropriate_sex_ed'
cfa_policies <- cfa(policy_issues, data = on18)
summary(cfa_policies, fit.measures = T, standardized = T)
eigen(cor_policies)$values
psych::fa(cor_policies, nfactors = 3)
summary(cfa_policies, fit.measures = T, standardized = T)
psych::fa(cor_policies, nfactors = 3)
WAP_reg_soc_use <- list()
WAP_reg_soc_use[[1]] <- lm(WAP ~ Social_Use2, data = on18, na.action = na.omit);summary(WAP_reg_soc_use[[1]])
WAP_reg_soc_use[[1]] <- lm(WAP ~ as.numeric(Social_Use2), data = on18, na.action = na.omit);summary(WAP_reg_soc_use[[1]])
WAP_reg_soc_use[[1]] <- lm(WAP ~ Social_Use2, data = on18, na.action = na.omit);summary(WAP_reg_soc_use[[1]])
#WAP_graph[[1]] <- graph_regression(WAP_reg_soc_use[[1]]); WAP_graph[[1]]
WAP_reg_soc_use[[2]] <- lm(WAP_sd ~ Interest, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[2]])
#WAP_graph[[2]] <- graph_regression(WAP_reg_soc_use[[2]]); WAP_graph[[2]]
WAP_reg_soc_use[[3]] <- lm(WAP_sd ~ Interest + Social_Use2, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[3]])
#WAP_graph[[3]] <- graph_regression(WAP_reg_soc_use[[3]]); WAP_graph[[3]]
WAP_reg_soc_use[[4]] <- lm(WAP_sd ~ Interest + Social_Use2 + age3, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[4]])
#WAP_graph[[4]] <- graph_regression(WAP_reg_soc_use[[4]]); WAP_graph[[4]]
WAP_reg_soc_use[[5]] <- lm(WAP_sd ~ Interest + Social_Use2 + age3 + degree, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[5]])
#WAP_graph[[5]] <- graph_regression(WAP_reg_soc_use[[5]]); WAP_graph[[5]]
WAP_reg_soc_use[[6]] <- lm(WAP_sd ~ Interest + Social_Use2 + age3 + degree + income3, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[6]])
#WAP_graph[[6]] <- graph_regression(WAP_reg_soc_use[[6]]); WAP_graph[[6]]
WAP_reg_soc_use[[7]] <- lm(WAP_sd ~ Interest + Social_Use2 + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[7]])
#WAP_graph[[7]] <- graph_regression(WAP_reg_soc_use[[7]]); WAP_graph[[7]]
summary(lm(WAP_sd ~ age2 + I(age2^2), data = on18))
summary(lm(WAP_sd ~ age2 + I(age3^2), data = on18))
#Investigating the age coefficient
summary(lm(WAP_sd ~ age3, data = on18))
summary(lm(WAP_sd ~ age3 + I(age3^2), data = on18))
summary(lm(WAP_sd ~ Interest + Primary_media + age3 + I(age3^2) + degree + income3 + pol_knowledge, data = on18, na.action = na.omit))
summary(lm(WAP_sd ~ Interest + Primary_media*(age3 + I(age3^2)), data = on18, na.action = na.omit))
?predict
predict(WAP_sd )
age_poly <- summary(lm(WAP_sd ~ Interest + Primary_media + age3 + I(age3^2), data = on18, na.action = na.omit))
predict(age_poly )
age_poly <- lm(WAP_sd ~ Interest + Primary_media + age3 + I(age3^2), data = on18, na.action = na.omit)
age_poly <- lm(WAP_sd ~ Interest + Primary_media + age3 + I(age3^2), data = on18, na.action = na.omit); summary(age_poly)
predict(age_poly)
range(on18$age3)
range(on18$age3, na.rm = T)
age_poly <- lm(WAP_sd ~ Interest + Primary_media + age3 + I(age3^2), data = on18, na.action = na.omit); summary(age_poly)
age_legacy <- data.frame(age3 = seq(0, 1, 0.01),
Primary_media = "Legacy",
Interest = mean(on18$Interest, na.rm = T))
age_legacy[, "predicted_age",
"conf_up",
"conf_low"] <- predict(age_poly, age_legacy, interval = "confidence")
predict(age_poly, age_legacy, interval = "confidence")
age_legacy[, c("predicted_age",
"conf_up",
"conf_low")] <- predict(age_poly, age_legacy, interval = "confidence")
age_legacy$media <- "Legacy"
age_mixed <- data.frame(age3 = seq(0, 1, 0.01),
Primary_media = "Mixed",
Interest = mean(on18$Interest, na.rm = T))
age_mixed[, c("predicted_age",
"conf_up",
"conf_low")] <- predict(age_poly, age_mixed, interval = "confidence")
age_mixed$media <- "Mixed"
age_online <- data.frame(age3 = seq(0, 1, 0.01),
Primary_media = "Online",
Interest = mean(on18$Interest, na.rm = T))
age_online[, c("predicted_age",
"conf_up",
"conf_low")] <- predict(age_poly, age_online, interval = "confidence")
age_online$media <- "Online"
age_poly <- lm(WAP_sd ~ Interest + Primary_media + age3 + I(age3^2), data = on18, na.action = na.omit); summary(age_poly)
age_social_media <- data.frame(age3 = seq(0, 1, 0.01),
Primary_media = "Social_Media",
Interest = mean(on18$Interest, na.rm = T))
age_social_media[, c("predicted_age",
"conf_up",
"conf_low")] <- predict(age_poly, age_social_media, interval = "confidence")
age_social_media$media <- "Social Media"
?rbind
rbind(age_legacy, age_mixed, age_online, age_social_media)
age_predicted <- rbind(age_legacy, age_mixed, age_online, age_social_media)
View(age_predicted)
age_predicted %>%
ggplot(aes(x = age3, y = predicted_age, ymin = conf_low, ymax = conf_low)) + geom_line() +
geom_ribbon() + facet_wrap(~media)
age_predicted %>%
ggplot(aes(x = age3, y = predicted_age, ymin = conf_low, ymax = conf_low)) + geom_line() + + facet_wrap(~media)
age_predicted %>%
ggplot(aes(x = age3, y = predicted_age, ymin = conf_low, ymax = conf_low)) + geom_line() +  facet_wrap(~media) +
geom_ribbon()
age_predicted %>%
ggplot(aes(x = age3, y = predicted_age, ymin = conf_low, ymax = conf_up)) + geom_line() +  facet_wrap(~media) +
geom_ribbon()
age_predicted %>%
ggplot(aes(x = age3, y = predicted_age, ymin = conf_low, ymax = conf_up)) + geom_line() +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2)
age_predicted %>%
ggplot(aes(x = age3, y = predicted_age, ymin = conf_low, ymax = conf_up)) + geom_line() +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2) + theme_bw()
age_predicted %>%
ggplot(aes(x = age3, y = predicted_age, ymin = conf_low, ymax = conf_up)) +
geom_line(col = c("blue", "red", "green", "pink")) +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2) + theme_bw()
age_predicted %>%
ggplot(aes(x = age3, y = predicted_age, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2) + theme_bw()
age_predicted %>%
ggplot(aes(x = age3, y = predicted_age, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, col = "lightcoral") + theme_bw()
age_predicted %>%
ggplot(aes(x = age3, y = predicted_age, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "lightcoral") + theme_bw()
age_predicted %>%
ggplot(aes(x = age3, y = predicted_age, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") + theme_bw()
#Investigating the age coefficient
on18$age
#Investigating the age coefficient
summary(lm(WAP_sd ~ age, data = on18))
summary(lm(WAP_sd ~ age + I(age^2), data = on18))
age_poly <- lm(WAP_sd ~ Interest + Primary_media + age + I(age^2), data = on18, na.action = na.omit); summary(age_poly)
summary(lm(WAP_sd ~ Interest + Primary_media + age + I(age^2) + degree + income3 + pol_knowledge, data = on18, na.action = na.omit))
range(on18$age)
range(on18$age, na.rm = T)
age_legacy <- data.frame(age = seq(18, 100, 1),
Primary_media = "Legacy",
Interest = mean(on18$Interest, na.rm = T))
age_legacy[, c("predicted_age",
"conf_up",
"conf_low")] <- predict(age_poly, age_legacy, interval = "confidence")
age_legacy$media <- "Legacy"
age_mixed <- data.frame(age3 = seq(18, 100, 1),
Primary_media = "Mixed",
Interest = mean(on18$Interest, na.rm = T))
age_mixed[, c("predicted_age",
"conf_up",
"conf_low")] <- predict(age_poly, age_mixed, interval = "confidence")
age_legacy <- data.frame(age = seq(18, 100, 1),
Primary_media = "Legacy",
Interest = mean(on18$Interest, na.rm = T))
age_legacy[, c("predicted_age",
"conf_up",
"conf_low")] <- predict(age_poly, age_legacy, interval = "confidence")
age_legacy$media <- "Legacy"
age_mixed <- data.frame(age = seq(18, 100, 1),
Primary_media = "Mixed",
Interest = mean(on18$Interest, na.rm = T))
age_mixed[, c("predicted_age",
"conf_up",
"conf_low")] <- predict(age_poly, age_mixed, interval = "confidence")
age_mixed$media <- "Mixed"
age_online <- data.frame(age = seq(18, 100, 1),
Primary_media = "Online",
Interest = mean(on18$Interest, na.rm = T))
age_online[, c("predicted_age",
"conf_up",
"conf_low")] <- predict(age_poly, age_online, interval = "confidence")
age_online$media <- "Online"
age_social_media <- data.frame(age = seq(18, 100, 0.01),
Primary_media = "Social_Media",
Interest = mean(on18$Interest, na.rm = T))
age_social_media[, c("predicted_age",
"conf_up",
"conf_low")] <- predict(age_poly, age_social_media, interval = "confidence")
age_social_media$media <- "Social Media"
age_predicted <- rbind(age_legacy, age_mixed, age_online, age_social_media)
age_predicted %>%
ggplot(aes(x = age3, y = predicted_age, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") + theme_bw()
age_predicted %>%
ggplot(aes(x = age, y = predicted_age, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") + theme_bw()
modelsummary::modelsummary(psych::fa(cor_policies, nfactors = 3)
)
modelsummary(cfa_policies)
modelsummary(cfa_policies, fit.measures = T, standardized = T)
datasummary(psych::fa(cor_policies, nfactors = 3))
kabel(psych::fa(cor_policies, nfactors = 3))
kabel(psych::fa(cor_policies, nfactors = 3))
kable(psych::fa(cor_policies, nfactors = 3))
kableExtra::kable(psych::fa(cor_policies, nfactors = 3))
summary(psych::fa(cor_policies, nfactors = 3))
policy_fa_analysis <- psych::fa(cor_policies, nfactors = 3)
policy_fa_analysis$
policy_issues <- 'policy =~ help_racial_minorities + help_women + more_coporate_tax +
more_personal_tax + income_inequality + drug_benefit_u25 + free_post_secondary +
lr_private_health_care + Lr_minimum_wage_to_high_prices + lr_business_benefits_everyone +
lr_inappropriate_sex_ed'
policy_fa_analysis$loadings
kableExtra::kable(policy_fa_analysis$loadings)
(policy_fa_analysis <- psych::fa(cor_policies, nfactors = 3))
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
age_predicted %>%
ggplot(aes(x = age, y = predicted_age, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") + theme_bw()
#Investigating the age coefficient
summary(lm(WAP_sd ~ age, data = on18))
WAP_graph[[5]] <- graph_regression(WAP_reg[[5]]); WAP_graph[[5]]
summary(lm(WAP_sd ~ age + I(age^2), data = on18))
age_predicted %>%
ggplot(aes(x = age, y = predicted_age, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") + theme_bw()
age_poly <- lm(WAP_sd ~ Interest + Primary_media * (age + I(age^2)), data = on18, na.action = na.omit); summary(age_poly)
summary(lm(WAP_sd ~ Interest + Primary_media + age + I(age^2) + degree + income3 + pol_knowledge, data = on18, na.action = na.omit))
age_legacy <- data.frame(age = seq(18, 100, 1),
Primary_media = "Legacy",
Interest = mean(on18$Interest, na.rm = T))
age_legacy[, c("predicted_age",
"conf_up",
"conf_low")] <- predict(age_poly, age_legacy, interval = "confidence")
age_legacy$media <- "Legacy"
age_mixed <- data.frame(age = seq(18, 100, 1),
Primary_media = "Mixed",
Interest = mean(on18$Interest, na.rm = T))
age_mixed[, c("predicted_age",
"conf_up",
"conf_low")] <- predict(age_poly, age_mixed, interval = "confidence")
age_mixed$media <- "Mixed"
age_online <- data.frame(age = seq(18, 100, 1),
Primary_media = "Online",
Interest = mean(on18$Interest, na.rm = T))
age_online[, c("predicted_age",
"conf_up",
"conf_low")] <- predict(age_poly, age_online, interval = "confidence")
age_online$media <- "Online"
age_social_media <- data.frame(age = seq(18, 100, 1),
Primary_media = "Social_Media",
Interest = mean(on18$Interest, na.rm = T))
age_social_media[, c("predicted_age",
"conf_up",
"conf_low")] <- predict(age_poly, age_social_media, interval = "confidence")
age_social_media$media <- "Social Media"
age_predicted <- rbind(age_legacy, age_mixed, age_online, age_social_media)
age_predicted %>%
ggplot(aes(x = age, y = predicted_age, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") + theme_bw()
age_predicted %>%
ggplot(aes(x = age, y = predicted_age, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") + theme_bw()
on18$WAP
affect_pol_cal_wt
affect_wt %>%
rowwise()
library(tidyverse)
affect_wt %>%
rowwise()
affect_wt
affect_wt %>%
rowwise()
WAP_scores
affect_pol_cal_wt %>%
group_by(id) %>%
summarise(WAP = sum(like_mean_wt)) -> WAP_scores
WAP_scores
