#So we need to effectively calculate a mean for each row.
#Each row is one R.
affect %>%
rowwise() %>%
mutate(mean_like=mean(c_across(2:5), na.rm=T))->affect
affect_pol_cal <- affect %>%
pivot_longer(cols = !c(id, mean_like),
names_to = "Party",
values_to = "Party_like_score")
affect_pol_cal
affect_pol_cal$like_mean <- (affect_pol_cal$Party_like_score - affect_pol_cal$mean_like)^2
affect_pol_cal %>%
group_by(id) %>%
summarise(Soc_dis = sum(like_mean)) -> Soc_dis_scores
Soc_dis_scores$Soc_dis <- sqrt(Soc_dis_scores$Soc_dis/4)
full_join(on18, Soc_dis_scores, by = join_by(id)) -> on18
affect_wt$Green_Like_wt <- (affect$Green_Like * 0.046)
affect_wt$PC_Like_wt <- (affect$PC_Like * 0.405)
affect_wt$Liberal_Like_wt <- (affect$Liberal_Like * 0.196)
affect_wt$NDP_Like_wt <- (affect$NDP_Like * 0.336)
affect_wt %>%
rowwise() %>%
mutate(mean_like=mean(c_across(6:9), na.rm=T))->affect_wt
affect_pol_cal_wt <- affect_wt %>%
select(., !(6:9)) %>%
pivot_longer(cols = !c(id, mean_like),
names_to = "Party",
values_to = "Party_like_score")
affect_pol_cal_wt %>%
mutate(vote_share=case_when(Party == "Green_Like" ~ 0.046, Party == "Liberal_Like" ~ 0.196, Party == "NDP_Like" ~ 0.336,
Party == "PC_Like" ~ 0.405
)) -> affect_pol_cal_wt
affect_pol_cal_wt$like_mean <- (affect_pol_cal_wt$Party_like_score - affect_pol_cal_wt$mean_like)^2
affect_pol_cal_wt$like_mean_wt <- (affect_pol_cal_wt$like_mean * affect_pol_cal_wt$vote_share)
affect_pol_cal_wt %>%
group_by(id) %>%
summarise(WAP = sum(like_mean_wt)) -> WAP_scores
WAP_scores$WAP <- sqrt(WAP_scores$WAP)
full_join(on18, WAP_scores, by = join_by(id)) -> on18
on18 <- on18 %>%
mutate(
WAP_sd = as.numeric(scale(WAP))
)
on18 %>%
group_by(Primary_media) %>%
summarise(mean = mean(pointerst_ONint, na.rm = T), sd = sd(pointerst_ONint, na.rm = T))
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T))
leader_affect <- on18 %>%
select(c(id, leadereval_1_out:leadereval_4_out)) %>%
rename(
Ford = leadereval_1_out,
Horwath = leadereval_2_out,
Schreiner = leadereval_3_out,
Wynne = leadereval_4_out
)
leader_affect$Schreiner_Like_wt <- (leader_affect$Schreiner * 0.046)
leader_affect$Ford_Like_wt <- (leader_affect$Ford * 0.405)
leader_affect$Wynne_Like_wt <- (leader_affect$Wynne * 0.196)
leader_affect$Horwath_Like_wt <- (leader_affect$Horwath * 0.336)
leader_affect %>%
rowwise() %>%
mutate(mean_like=mean(c_across(6:9), na.rm=T))->leader_affect
leader_affect <- leader_affect %>%
select(., !(6:9)) %>%
pivot_longer(cols = !c(id, mean_like),
names_to = "Leader",
values_to = "Leader_like_score")
leader_affect %>%
mutate(vote_share=case_when(Leader == "Schreiner" ~ 0.046, Leader == "Wynne" ~ 0.196, Leader == "Horwath" ~ 0.336,
Leader == "Ford" ~ 0.405
)) -> leader_affect
leader_affect$like_mean <- (leader_affect$Leader_like_score - leader_affect$mean_like)^2
leader_affect$like_mean_wt <- (leader_affect$like_mean * leader_affect$vote_share)
leader_affect %>%
group_by(id) %>%
summarise(WAP_lead = sum(like_mean_wt)) -> leader_affect
leader_affect$WAP_lead <- sqrt(leader_affect$WAP_lead)
full_join(on18, leader_affect, by = join_by(id)) -> on18
on18$wap_difference <- on18$WAP.x - on18$WAP_lead
on18 <- on18 %>%
mutate(
WAP_lead_sd = as.numeric(scale(WAP_lead))
)
#### CPC AFFECT POLARIZATION ####
on18$partyeval_4_out
on18 <- on18 %>%
mutate(
Liberal_Like_wt = partyeval_1_out * 0.196,
NDP_Like_wt = partyeval_3_out * 0.336,
Green_Like_wt = partyeval_4_out * 0.046,
Con_Like_wt = partyeval_2_out * 0.405
)
cpc_high <- on18 %>%
filter((Social_Use2 == "Several times a day" | Social_Use2 == "About once a day" |  Social_Use2 == "Several times a week" | Social_Use2 == "About once a week"  |  Social_Use2 == "Several times a month")) %>%
select(c(Liberal_Like_wt,NDP_Like_wt,Green_Like_wt ,  Con_Like_wt)) %>%
as.matrix()
cpclow <- on18 %>%
filter((Social_Use2 == "Several times in a year" | Social_Use2 == "Never" | Social_Use2 == "About once a month")) %>%
select(c(Liberal_Like_wt,NDP_Like_wt,Green_Like_wt ,  Con_Like_wt)) %>%
as.matrix()
cpc_legacy <- on18 %>%
filter(Primary_media == "Legacy") %>%
select(c(Liberal_Like_wt,NDP_Like_wt,Green_Like_wt ,  Con_Like_wt)) %>%
as.matrix()
cpc_social <- on18 %>%
filter(Primary_media == "Social_Media") %>%
select(c(Liberal_Like_wt,NDP_Like_wt,Green_Like_wt ,  Con_Like_wt)) %>%
as.matrix()
cpc_online <- on18 %>%
filter(Primary_media == "Online") %>%
select(c(Liberal_Like_wt,NDP_Like_wt,Green_Like_wt ,  Con_Like_wt)) %>%
na.omit() %>%
as.matrix()
cpc_mixed <- on18 %>%
filter(Primary_media == "Mixed") %>%
select(c(Liberal_Like_wt,NDP_Like_wt,Green_Like_wt ,  Con_Like_wt)) %>%
as.matrix()
set.seed(178)
CPC(cpc_high, k = 4, type = "kmeans")
set.seed(178)
CPC(cpclow, k = 4, type = "kmeans")
set.seed(178)
CPC(cpc_legacy, k = 4, type = "kmeans")
set.seed(178)
CPC(cpc_social, k = 4, type = "kmeans")
set.seed(178)
CPC(cpc_online, k = 4, type = "kmeans")
set.seed(178)
CPC(cpc_mixed, k = 4, type = "kmeans")
#create number of standard deviations from mean variable
policies_social_use
policies_social_use_sd_dis <- do.call(cbind, lapply(policies_social_use[, 1:11], sd_mean, na.rm = T))
#Policies_social_use_sd_dis is now each R's distance from the mean in SD.
head(policies_social_use_sd_dis)
policies_social_use_sd_dis %>%
bind_cols(., on18$Social_Use2)->policies_social_use_sd_dis
names(policies_social_use_sd_dis)<-c(policy_names, "Social_Use2")
#check to make sure function worked properly
mean(policies$help_racial_minorities, na.rm = T)
sd(policies$help_racial_minorities, na.rm = T)
#observation #1
# 0.95 = (x-x̄)/σ
# 0.95 = (0.75-0.481)/0.282
# 0.95 = 0.95
stopifnot(round(policies_social_use_sd_dis2[1 , 1], 3) == round(((0.75-0.4809809)/ 0.2815165), 3))
#stop if function did not work properly
on18$Primary_media
names(policies_social_use_sd_dis2)<-c(policy_names, "Social_Use2", "Primary_Media", "Interest")
policies_social_use_sd_dis2 %>%
pivot_longer(cols = 1:11, names_to = "Policy_Issue", values_to = "distance") -> policies_social_use_sd_dis2_down
policies_social_use_sd_dis2_down
#Descriptive Statistics for political knowledge by Primary media
table(on18$Social_Use2, on18$pol_knowledge)
on18 %>%
group_by(Primary_media) %>%
summarise(mean = mean(pol_knowledge, na.rm = T), sd = sd(pol_knowledge, na.rm = T))
on18$HuffingtonPostonline
media_Sources_by_primarymedia <- on18 %>%
group_by(Primary_media) %>%
summarise(across(CBCTV:HuffingtonPostonline, \(x)mean(x))) %>%
filter(Primary_media == "Online") %>%
pivot_longer(cols = 2:22)
#see the most read soucrces for online news users
media_Sources_by_primarymedia %>%
ggplot(aes(y = name, x = value)) + geom_point()
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(Soc_dis, na.rm = T), sd = sd(Soc_dis, na.rm = T), n=n(), se=sd/sqrt(n))->mean_affect_scores
mean_affect_scores %>%
filter(complete.cases(.)) %>%
ggplot(., aes(x = mean,
y = Social_Use2,
colour = Social_Use2)) +
geom_point()+
geom_errorbar(aes (xmin = mean - (1.96*se), xmax = mean + (1.96*se)), width =.2) +
labs(x = "Mean", y= "Social Media Use") +
theme_bw()  +
theme(axis.text.y=element_blank(),
axis.ticks.y = element_blank(),
strip.text = element_text(size=8))+
guides(color=guide_legend(reverse=T))+xlim(c(0,0.5)) -> affect_scores_social_use
affect_scores_social_use
on18 %>%
group_by(Primary_media) %>%
summarise(mean = mean(Soc_dis, na.rm = T), sd = sd(Soc_dis, na.rm = T))
policies_social_use_sd_dis %>%
group_by(Social_Use2) %>%
summarise( across(everything(), list(.mean = mean, .se = se), na.rm = T )) -> policies_social_use_sd_dis_mean
policies_social_use_sd_dis_mean
policies_social_use_sd_dis %>%
bind_cols(., on18$Primary_media) %>%
bind_cols(., on18$Interest) ->policies_social_use_sd_dis2
#Exploratory factor analysis
cor_policies <- on18 %>%
dplyr::select(c(help_racial_minorities, help_women, more_coporate_tax,
more_personal_tax, income_inequality, drug_benefit_u25, free_post_secondary,
lr_private_health_care, Lr_minimum_wage_to_high_prices, lr_business_benefits_everyone,
lr_inappropriate_sex_ed
)) %>%
cor(., use = "complete.obs")
eigen(cor_policies)$values
psych::fa(cor_policies, nfactors = 3)
policy_issues <- 'policy =~ help_racial_minorities + help_women + more_coporate_tax +
more_personal_tax + income_inequality + drug_benefit_u25 + free_post_secondary +
lr_private_health_care + Lr_minimum_wage_to_high_prices + lr_business_benefits_everyone +
lr_inappropriate_sex_ed'
cfa_policies <- cfa(policy_issues, data = on18)
summary(cfa_policies, fit.measures = T, standardized = T)
#Create regression models for affective polarization using the weighted affective polarization (WAP) measure
#**** Start thinking about control variables
WAP_reg <- list()
WAP_graph <- list()
WAP_reg[[1]] <- lm(WAP_sd ~ Primary_media, data = on18, na.action = na.omit);summary(WAP_reg[[1]])
WAP_graph[[1]] <- graph_regression(WAP_reg[[1]]); WAP_graph[[1]]
WAP_reg[[2]] <- lm(WAP_sd ~ Interest, data = on18, na.action = na.omit); summary(WAP_reg[[2]])
WAP_graph[[2]] <- graph_regression(WAP_reg[[2]]); WAP_graph[[2]]
WAP_reg[[3]] <- lm(WAP_sd ~ Interest + Primary_media, data = on18, na.action = na.omit); summary(WAP_reg[[3]])
WAP_graph[[3]] <- graph_regression(WAP_reg[[3]]); WAP_graph[[3]]
WAP_reg[[4]] <- lm(WAP_sd ~ Interest + Primary_media + age3, data = on18, na.action = na.omit); summary(WAP_reg[[4]])
WAP_graph[[4]] <- graph_regression(WAP_reg[[4]]); WAP_graph[[4]]
WAP_reg[[5]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree, data = on18, na.action = na.omit); summary(WAP_reg[[5]])
WAP_graph[[5]] <- graph_regression(WAP_reg[[5]]); WAP_graph[[5]]
WAP_reg[[6]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree + income3, data = on18, na.action = na.omit); summary(WAP_reg[[6]])
WAP_graph[[6]] <- graph_regression(WAP_reg[[6]]); WAP_graph[[6]]
WAP_reg[[7]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit); summary(WAP_reg[[7]])
WAP_graph[[7]] <- graph_regression(WAP_reg[[7]]); WAP_graph[[7]]
WAP_Interact <- lm(WAP_sd ~ Primary_media*Interest, data = on18, na.action = na.omit)
summary(WAP_Interact)
WAP_Interact2 <- lm(WAP_sd ~ Primary_media*Interest + + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
summary(WAP_Interact2)
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_Interact, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
marginaleffects::plot_slopes(WAP_Interact2, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
#Display Models
modelsummary(WAP_reg, stars = T, vcov = "HC0") #As numbers
(WAP_graph[[1]] | WAP_graph[[2]] ) /
(WAP_graph[[3]] | WAP_graph[[4]]) /
( WAP_graph[[5]] | WAP_graph[[6]]  ) /
WAP_graph[[7]]
WAP_lead_graph[[4]] <- graph_regression(WAP_lead_reg[[4]]); WAP_lead_graph[[4]]
WAP_lead_reg[[5]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3 + degree, data = on18, na.action = na.omit); summary(WAP_lead_reg[[5]])
WAP_lead_graph[[5]] <- graph_regression(WAP_lead_reg[[5]]); WAP_lead_graph[[5]]
WAP_lead_reg[[6]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3 + degree + income3, data = on18, na.action = na.omit); summary(WAP_lead_reg[[6]])
WAP_lead_graph[[6]] <- graph_regression(WAP_lead_reg[[6]]); WAP_lead_graph[[6]]
WAP_lead_reg[[7]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit); summary(WAP_lead_reg[[7]])
WAP_lead_graph[[7]] <- graph_regression(WAP_lead_reg[[7]]); WAP_lead_graph[[7]]
WAP_lead_Interact <- lm(WAP_lead_sd ~ Primary_media*Interest, data = on18, na.action = na.omit)
summary(WAP_lead_Interact)
WAP_lead_Interact2 <- lm(WAP_lead_sd ~ Primary_media*Interest + + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
summary(WAP_lead_Interact2)
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_lead_Interact, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
marginaleffects::plot_slopes(WAP_lead_Interact2, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
#Display Models
modelsummary(WAP_lead_reg, stars = T, vcov = "HC0") #As numbers
(WAP_lead_graph[[1]] | WAP_lead_graph[[2]] ) /
(WAP_lead_graph[[3]] | WAP_lead_graph[[4]]) /
( WAP_lead_graph[[5]] | WAP_lead_graph[[6]]  ) /
WAP_lead_graph[[7]]
bimodality_coefficient(policy_online, na.rm = T)
bimodality_coefficient(policy_social_media, na.rm = T)
bimodality_coefficient(policy_mixed, na.rm = T)
bimod_legacy <- policy_legacy %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Legacy Media", subtitle = "Bimodality Coefficent (0.29)", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_online <- policy_online %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Online Media", subtitle = "Bimodality Coefficent (0.36)", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_social <- policy_social_media %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Social Media", subtitle = "Bimodality Coefficent (0.31)", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_mixed <- policy_mixed %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Mixed media", subtitle = "Bimodality Coefficent (0.32)", x = "Policy Positions", y = NULL) +
theme_bw()
gridExtra::grid.arrange(bimod_legacy, bimod_online, bimod_social, bimod_mixed)
bimodality_coefficient(policy_often, na.rm = T)
bimodality_coefficient(policy_rarely, na.rm = T)
bimod_often <- policy_often %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Uses Social Media Often", subtitle = "Bimodality Coefficent (0.29)", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_rarely <- policy_rarely %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Uses Social Media Rarely", subtitle = "Bimodality Coefficent (0.33)", x = "Policy Positions", y = NULL) +
theme_bw()
gridExtra::grid.arrange(bimod_often, bimod_rarely)
policy_left_legacy_vector <- as.double(policy_left_legacy$policy_polarization) %>%
na.omit()
policy_conservatives_legacy_vector <- as.double(policy_conservatives_legacy$policy_polarization) %>%
na.omit()
OVL.BCAN(policy_left_legacy_vector,
policy_conservatives_legacy_vector,
alpha = 0.05,  B = 1000, h_ini = -0.6)
bayestestR::overlap(policy_left_legacy_vector, policy_conservatives_legacy_vector)
overlap_legacy <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_legacy, col = "red", fill = "red", alpha = 0.4) +
labs(title = "Legacy Media", subtitle = "Overlap Coefficent (0.66)", x = "Policy Positions", y = NULL) +
geom_density(aes(policy_polarization), data = policy_conservatives_legacy, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
policy_left_online_vector <- as.double(policy_left_online$policy_polarization) %>%
na.omit()
policy_conservatives_online_vector <- as.double(policy_conservatives_online$policy_polarization) %>%
na.omit()
OVL.BCAN(policy_left_online_vector,
policy_conservatives_online_vector,
alpha = 0.05,  B = 1000, h_ini = -0.6)
bayestestR::overlap(policy_left_online, policy_conservatives_online)
overlap_online <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_online, col = "red", fill = "red", alpha = 0.4) +
labs(title = "Online Media", subtitle = "Overlap Coefficent (0.59)", x = "Policy Positions", y = NULL) +
geom_density(aes(policy_polarization), data = policy_conservatives_online, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
policy_left_media_vector <- as.double(policy_left_social_media$policy_polarization) %>%
na.omit()
policy_conservatives_media_vector <- as.double(policy_conservatives_media$policy_polarization) %>%
na.omit()
OVL.BCAN(policy_left_media_vector,
policy_conservatives_media_vector,
alpha = 0.05,  B = 1000, h_ini = -0.6)
bayestestR::overlap(policy_left_social_media, policy_conservatives_media)
overlap_smedia <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_social_media, col = "red", fill = "red", alpha = 0.4) +
labs(title = "Online Media", subtitle = "Overlap Coefficent (0.74)", x = "Policy Positions", y = NULL) +
geom_density(aes(policy_polarization), data = policy_conservatives_media, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
policy_left_mixed_vector <- as.double(policy_left_mixed$policy_polarization) %>%
na.omit()
policy_conservatives_mixed_vector <- as.double(policy_conservatives_mixed$policy_polarization) %>%
na.omit()
OVL.BCAN(policy_left_mixed_vector,
policy_conservatives_mixed_vector,
alpha = 0.05,  B = 1000, h_ini = -0.6)
bayestestR::overlap(policy_left_mixed, policy_conservatives_mixed)
overlap_mixed <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_mixed, col = "red", fill = "red", alpha = 0.4) +
labs(title = "Mixed Media", subtitle = "Overlap Coefficent (0.70)", x = "Policy Positions", y = NULL) +
geom_density(aes(policy_polarization), data = policy_conservatives_mixed, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
ggpubr::ggarrange(overlap_legacy, overlap_online, overlap_smedia, overlap_mixed)
policy_left_often_vector <- as.double(policy_left_often$policy_polarization) %>%
na.omit()
policy_conservative_often_vector <- as.double(policy_conservative_often$policy_polarization) %>%
na.omit()
OVL.BCAN(policy_left_often_vector,
policy_conservative_often_vector,
alpha = 0.05,  B = 1000, h_ini = -0.6)
bayestestR::overlap(policy_left_often, policy_conservative_often)
overlap_often <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_often, col = "red", fill = "red", alpha = 0.4) +
geom_density(aes(policy_polarization), data = policy_conservative_often, col = "blue", fill = "blue", alpha = 0.4) +
labs(title = "Uses Social Media Often", subtitle = "Overlap Coefficent (0.53)", x = "Policy Positions", y = NULL) + theme_bw()
policy_left_rarely_vector <- as.double(policy_left_rarely$policy_polarization) %>%
na.omit()
policy_conservative_social_rarely_vector <- as.double(policy_conservative_social_rarely$policy_polarization) %>%
na.omit()
OVL.D(policy_left_rarely_vector,
policy_conservative_social_rarely_vector,
alpha = 0.05)
OVL.BCAN(policy_left_rarely_vector,
policy_conservative_social_rarely_vector,
alpha = 0.05,  B = 1000, h_ini = -0.6)
bayestestR::overlap(policy_left_rarely, policy_conservative_social_rarely)
overlap_rarely <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_rarely, col = "red", fill = "red", alpha = 0.4) +
geom_density(aes(policy_polarization), data = policy_conservative_social_rarely, col = "blue", fill = "blue", alpha = 0.4) +
labs(title = "Uses Social Media Rarely", subtitle = "Overlap Coefficent (0.70)", x = "Policy Positions", y = NULL) + theme_bw()
ggpubr::ggarrange(overlap_often, overlap_rarely, ncol = 1)
#report the null of the social media use
#report the null of the social media use
#make the positive finding more interesting
#report the null of the social media use
#make the positive finding more interesting
#statistical tests with Overlap coefficients
#report the null of the social media use
#make the positive finding more interesting
#statistical tests with Overlap coefficients
#report the null of the social media use
#make the positive finding more interesting
#statistical tests with Overlap coefficients
#report the null of the social media use
#make the positive finding more interesting
#statistical tests with Overlap coefficients
#report the null of the social media use
#make the positive finding more interesting
#statistical tests with Overlap coefficients
#report the null of the social media use
#make the positive finding more interesting
#statistical tests with Overlap coefficients
#report the null of the social media use
#make the positive finding more interesting
#statistical tests with Overlap coefficients
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
install.packages("GPArotation")
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
#### Primary Media ####
bimod_online <- bimodality_coefficient(policy_online, na.rm = T)
ggpubr::ggarrange(overlap_often, overlap_rarely, ncol = 1)
#### LOAD SCRIPTS ####
source("Code/1_load_on18.R") #clean and load dataset
source("Code/0_functions.R") #load custom functions and packages needed for these analyses
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
OVL.D(policy_left_rarely_vector,
policy_conservative_social_rarely_vector,
alpha = 0.05)
OVL.BCAN(policy_left_rarely_vector,
policy_conservative_social_rarely_vector,
alpha = 0.05,  B = 1000, h_ini = -0.6)
bayestestR::overlap(policy_left_rarely, policy_conservative_social_rarely)
bayestestR::overlap(policy_left_rarely_vector, policy_conservative_social_rarely_vector)
?overlap
gridExtra::grid.arrange(bimod_legacy, bimod_online, bimod_social, bimod_mixed)
ci(xbayestestR::overlap(policy_left_rarely, policy_conservative_social_rarely), ci = 0.95)
ci(overlap(policy_left_rarely, policy_conservative_social_rarely), ci = 0.95)
ci(overlap(policy_left_rarely, policy_conservative_social_rarely), ci = 0.95, dof = NULL, method = "wald", iterations = 500)
ci(overlap(policy_left_rarely, policy_conservative_social_rarely), ci = 0.95, dof = NULL, method = "HDI", iterations = 500)
?OVL.CI
??OVL.CI
OVL.K(policy_left_rarely_vector,
policy_conservative_social_rarely_vector,
alpha = 0.05)
OVL.KPB(policy_left_rarely_vector,
policy_conservative_social_rarely_vector,
alpha = 0.05)
bayestestR::overlap(policy_left_rarely, policy_conservative_social_rarely)
marginaleffects::plot_slopes(WAP_Interact, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
marginaleffects::plot_slopes(WAP_Interact2, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
WAP_graph[[1]] <- graph_regression(WAP_reg[[1]]); WAP_graph[[1]]
WAP_reg[[2]] <- lm(WAP_sd ~ Interest, data = on18, na.action = na.omit); summary(WAP_reg[[2]])
WAP_graph[[2]] <- graph_regression(WAP_reg[[2]]); WAP_graph[[2]]
WAP_reg[[3]] <- lm(WAP_sd ~ Interest + Primary_media, data = on18, na.action = na.omit); summary(WAP_reg[[3]])
WAP_graph[[3]] <- graph_regression(WAP_reg[[3]]); WAP_graph[[3]]
WAP_reg[[4]] <- lm(WAP_sd ~ Interest + Primary_media + age3, data = on18, na.action = na.omit); summary(WAP_reg[[4]])
WAP_graph[[4]] <- graph_regression(WAP_reg[[4]]); WAP_graph[[4]]
WAP_reg[[5]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree, data = on18, na.action = na.omit); summary(WAP_reg[[5]])
WAP_graph[[5]] <- graph_regression(WAP_reg[[5]]); WAP_graph[[5]]
WAP_reg[[6]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree + income3, data = on18, na.action = na.omit); summary(WAP_reg[[6]])
WAP_graph[[6]] <- graph_regression(WAP_reg[[6]]); WAP_graph[[6]]
WAP_reg[[7]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit); summary(WAP_reg[[7]])
WAP_graph[[7]] <- graph_regression(WAP_reg[[7]]); WAP_graph[[7]]
on18 <- on18 %>%
mutate(
Primary_media = relevel(Primary_media, ref = "Mixed")
)
on18 <- on18 %>%
mutate(
Primary_media = relevel(as.factor(Primary_media), ref = "Mixed")
)
WAP_reg[[1]] <- lm(WAP_sd ~ Primary_media, data = on18, na.action = na.omit);summary(WAP_reg[[1]])
WAP_graph[[1]] <- graph_regression(WAP_reg[[1]]); WAP_graph[[1]]
WAP_reg[[2]] <- lm(WAP_sd ~ Interest, data = on18, na.action = na.omit); summary(WAP_reg[[2]])
WAP_graph[[2]] <- graph_regression(WAP_reg[[2]]); WAP_graph[[2]]
WAP_reg[[3]] <- lm(WAP_sd ~ Interest + Primary_media, data = on18, na.action = na.omit); summary(WAP_reg[[3]])
WAP_graph[[3]] <- graph_regression(WAP_reg[[3]]); WAP_graph[[3]]
WAP_reg[[4]] <- lm(WAP_sd ~ Interest + Primary_media + age3, data = on18, na.action = na.omit); summary(WAP_reg[[4]])
WAP_graph[[4]] <- graph_regression(WAP_reg[[4]]); WAP_graph[[4]]
WAP_reg[[5]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree, data = on18, na.action = na.omit); summary(WAP_reg[[5]])
WAP_graph[[5]] <- graph_regression(WAP_reg[[5]]); WAP_graph[[5]]
WAP_reg[[6]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree + income3, data = on18, na.action = na.omit); summary(WAP_reg[[6]])
WAP_graph[[6]] <- graph_regression(WAP_reg[[6]]); WAP_graph[[6]]
WAP_reg[[7]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit); summary(WAP_reg[[7]])
WAP_graph[[7]] <- graph_regression(WAP_reg[[7]]); WAP_graph[[7]]
WAP_Interact <- lm(WAP_sd ~ Primary_media*Interest, data = on18, na.action = na.omit)
summary(WAP_Interact)
WAP_Interact2 <- lm(WAP_sd ~ Primary_media*Interest + + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
summary(WAP_Interact2)
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_Interact, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
marginaleffects::plot_slopes(WAP_Interact2, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
WAP_Interact2 <- lm(WAP_sd ~ Primary_media*Interest  + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
summary(WAP_Interact2)
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_Interact, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
marginaleffects::plot_slopes(WAP_Interact2, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
#Display Models
modelsummary(WAP_reg, stars = T, vcov = "HC0") #As numbers
ggarrange(plotlist = list(WAP_primarymedia_graph, WAP_Interest_Graph, WAP_Interact_graph))
#Create regression models for affective polarization using the weighted affective polarization (WAP) measure
WAP_lead_reg <- list()
WAP_lead_graph <- list()
WAP_lead_reg[[1]] <- lm(WAP_lead_sd ~ Primary_media, data = on18, na.action = na.omit);summary(WAP_lead_reg[[1]])
WAP_lead_graph[[1]] <- graph_regression(WAP_lead_reg[[1]]); WAP_lead_graph[[1]]
WAP_lead_reg[[2]] <- lm(WAP_lead_sd ~ Interest, data = on18, na.action = na.omit); summary(WAP_lead_reg[[2]])
WAP_lead_graph[[2]] <- graph_regression(WAP_lead_reg[[2]]); WAP_lead_graph[[2]]
WAP_lead_reg[[3]] <- lm(WAP_lead_sd ~ Interest + Primary_media, data = on18, na.action = na.omit); summary(WAP_lead_reg[[3]])
WAP_lead_graph[[3]] <- graph_regression(WAP_lead_reg[[3]]); WAP_lead_graph[[3]]
WAP_lead_reg[[4]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3, data = on18, na.action = na.omit); summary(WAP_lead_reg[[4]])
WAP_lead_graph[[4]] <- graph_regression(WAP_lead_reg[[4]]); WAP_lead_graph[[4]]
WAP_lead_reg[[5]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3 + degree, data = on18, na.action = na.omit); summary(WAP_lead_reg[[5]])
WAP_lead_graph[[5]] <- graph_regression(WAP_lead_reg[[5]]); WAP_lead_graph[[5]]
WAP_lead_reg[[6]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3 + degree + income3, data = on18, na.action = na.omit); summary(WAP_lead_reg[[6]])
WAP_lead_graph[[6]] <- graph_regression(WAP_lead_reg[[6]]); WAP_lead_graph[[6]]
WAP_lead_reg[[7]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit); summary(WAP_lead_reg[[7]])
WAP_lead_graph[[7]] <- graph_regression(WAP_lead_reg[[7]]); WAP_lead_graph[[7]]
WAP_lead_Interact <- lm(WAP_lead_sd ~ Primary_media*Interest, data = on18, na.action = na.omit)
summary(WAP_lead_Interact)
WAP_lead_Interact2 <- lm(WAP_lead_sd ~ Primary_media*Interest + + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
summary(WAP_lead_Interact2)
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_lead_Interact, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
marginaleffects::plot_slopes(WAP_lead_Interact2, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
WAP_lead_Interact2 <- lm(WAP_lead_sd ~ Primary_media*Interest + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
summary(WAP_lead_Interact2)
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_lead_Interact, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
marginaleffects::plot_slopes(WAP_lead_Interact2, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_lead_Interact, variables = "Interest", condition = "Primary_media") +
geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + coord_flip() + theme_bw()
marginaleffects::plot_slopes(WAP_lead_Interact2, variables = "Interest", condition = "Primary_media") +
geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + coord_flip() + theme_bw()
