policies <- mutate_all(policies, \(x) as.numeric(as.character(x)))
policies <- range01(policies, na.rm = T)
on18 <- policies %>%
bind_cols(., on18)
#Create a separate data set for descriptive statistics
policies %>%
bind_cols(., on18$Social_Use2)->policies_social_use
names(policies_social_use)<-c(policy_names, "Social_Use2")
?gt
??gt
library(gt)
?gt
#| label: setup
#| echo: false
library(knitr)
library(mousetrap)
opts_knit$set(root.dir=rprojroot::find_rstudio_root_file())
#opts_chunk$set(warning=F,message=F)
#| echo: false
#| warning: false
#| results: hide
#| label: fig-OVL_SU
ggpubr::ggarrange(overlap_often, overlap_rarely, ncol = 1)
affect
PARTIES <- ("Green_Like", "Liberal_Like", "NDP_Like", "PC_Like")
PARTIES <- c("Green_Like", "Liberal_Like", "NDP_Like", "PC_Like")
PARTIES
on18[, PARTIES]
on18[, "Green_Like"]
on18$Green_Like
on18 %>%
select(id,starts_with("partyeval")&ends_with("out"))
on18 %>%
rename(Green_Like = partyeval_4_out)
on18 <- on18 %>%
rename(Green_Like = partyeval_4_out,
Liberal_Like = partyeval_1_out,
NDP_Like = partyeval_3_out,
PC_Like = partyeval_1_out)
on18[, PARTIES]
like_scores <- on18[, "Green_Like"]
on18[, "Green_Like"]
on18[, PARTIES]
on18[, Liberal_Like]
on18$Liberal_Like
on18$partyeval_1_out
on18$Green_Like
on18$NDP_Like
on18$PC_Like
on18$Liberal_Like
source(here("Code/1_load_on18.R")) #clean and load dataset
source(here("Code/0_functions.R")) #load custom functions and packages needed for these analyses
#### Primary News Source ####
#Create a variable that classifies individuals based on the primary media type they use
on18 %>%
mutate(Primary_media=case_when(
(primarynews_7 == 1 | primarynews_6 == 1) & (primarynews_5 == 0 & primarynews_4 == 0 & primarynews_3 == 0 & primarynews_2 == 0 & primarynews_1 == 0) ~ "Social_Media", #For individuals who only use Social Media
(primarynews_4 == 1 | primarynews_5 == 1) & (primarynews_6 == 0 & primarynews_7 == 0 & primarynews_3 == 0 & primarynews_2 == 0 & primarynews_1 == 0) ~ "Online", #For individuals who only use online sources that are not social media
(primarynews_3 == 1 | primarynews_2 == 1 | primarynews_1 == 1) & (primarynews_5 == 0 & primarynews_4 == 0 & primarynews_6 == 0 & primarynews_7 == 0) ~ "Legacy", #For individuals who only receive news from television or newspapers
TRUE ~ "Mixed"
))->on18
on18 %>%
select(unsg:nhse) %>%
glimpse()
#This prints the variable labels of each item to see what each measures
on18 %>%
select(unsg:nhse) %>%
var_label()
#this prints the value lablels to see what each value label contains
on18 %>%
select(unsg:nhse) %>%
val_labels()
on18 %>%
mutate(
across(.cols=unsg:nhse,
binaryrecode, #recode function from 0_functions
.names="{.col}_correct")
)->on18
on18 %>%
select(ends_with("_correct"))
lookfor(on18, "seats in the House of Commons")
#political knowledge variable
on18$pol_knowledge <- (on18$unsg_correct + on18$financename_correct +
on18$ggname_correct + on18$nhse_correct)/4
table(on18$pol_knowledge)
# Defensive coding for political knowledge variable
on18 %>%
ggplot(., aes(x=pol_knowledge))+geom_histogram()
on18 %>%
select(ends_with("correct")| "pol_knowledge") #%>%
#View()
on18$pol_knowledge
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(pol_knowledge, na.rm = T), sd = sd(pol_knowledge, na.rm = T))
stopifnot((isTRUE(all.equal(on18$pol_knowledge,
((on18$unsg_correct + on18$financename_correct +
on18$ggname_correct + on18$nhse_correct)/4))))) #Check to ensure the math is correct
#### POLARIZATION MEASURES ####
#### policy polarization ####
on18$climate_views <- (on18$climate_bin + on18$paris_bin)/2
#create a dataframe with all the policies
on18 %>%
select(starts_with("agreement_"))-> policies
#rename policies with more descriptive names
policy_names <- c("help_racial_minorities", "help_women", "more_coporate_tax", "more_personal_tax", "private_health_care",
"minimum_wage_to_high_prices", "income_inequality", "business_benefits_everyone",
"drug_benefit_u25", "free_post_secondary", "inappropriate_sex_ed")
names(policies)<-policy_names
#recombine
policies <- mutate_all(policies, \(x) as.numeric(as.character(x)))
policies <- range01(policies, na.rm = T)
on18 <- policies %>%
bind_cols(., on18)
policies %>%
bind_cols(., on18$Social_Use2)->policies_social_use
names(policies_social_use)<-c(policy_names, "Social_Use2")
#Create Policy Polarization Distribution
on18$agreement_1
#Recode policy polarization variables so that 0 represents the most left-wing position and 1 represents the most right-wing position
on18 <- on18 %>%
mutate(
lr_private_health_care = case_match(private_health_care,
0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA),
Lr_minimum_wage_to_high_prices = case_match(minimum_wage_to_high_prices,
0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA),
lr_business_benefits_everyone = case_match(business_benefits_everyone,
0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA),
lr_inappropriate_sex_ed = case_match(inappropriate_sex_ed,
0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA)
)
#Create a variable for the policy positions of all individuals
on18 <- on18 %>%
mutate(policy_polarization = (help_racial_minorities + help_women + more_coporate_tax +
more_personal_tax + income_inequality + drug_benefit_u25 + free_post_secondary +
lr_private_health_care + Lr_minimum_wage_to_high_prices + lr_business_benefits_everyone +
lr_inappropriate_sex_ed))
on18$partyvote2018
#legacy primary media - left-wing
policy_left_legacy <- on18 %>%
filter(Primary_media == "Legacy" & (partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
#online primary media - left-wing
policy_left_online <- on18 %>%
filter(Primary_media == "Online" & (partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
#social media primary media - left-wing
policy_left_social_media <- on18 %>%
filter(Primary_media == "Social_Media" & (partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
#mixed primary media - left-wing
policy_left_mixed <- on18 %>%
filter(Primary_media == "Mixed" & (partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
#legacy primary media - right-wing
policy_conservatives_legacy <- on18 %>%
filter(Primary_media == "Legacy" & partyvote2018 == 2) %>%
select(policy_polarization)
#online primary media - right-wing
policy_conservatives_online <- on18 %>%
filter(Primary_media == "Online" & partyvote2018 == 2) %>%
select(policy_polarization)
#social media primary media - right-wing
policy_conservatives_media <- on18 %>%
filter(Primary_media == "Social_Media" & partyvote2018 == 2) %>%
select(policy_polarization)
# mixed primary media - right-wing
policy_conservatives_mixed <- on18 %>%
filter(Primary_media == "Mixed" & partyvote2018 == 2) %>%
select(policy_polarization)
# High social use - left-wing
policy_left_often <- on18 %>%
filter((Social_Use2 == "Several times a day" |
Social_Use2 == "About once a day" |
Social_Use2 == "Several times a week" |
Social_Use2 == "About once a week"  |
Social_Use2 == "Several times a month") &
(partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
# low social use - left-wing
policy_left_rarely <- on18 %>%
filter((Social_Use2 == "Several times in a year" |
Social_Use2 == "Never" |
Social_Use2 == "About once a month") &
(partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
# high social use - right-wing
policy_conservative_often <- on18 %>%
filter((Social_Use2 == "Several times a day" |
Social_Use2 == "About once a day" |
Social_Use2 == "Several times a week" |
Social_Use2 == "About once a week" |
Social_Use2 == "Several times a month") & partyvote2018 == 2) %>%
select(policy_polarization)
# low social use - right-wing
policy_conservative_social_rarely <- on18 %>%
filter((Social_Use2 == "Several times in a year" |
Social_Use2 == "Never" |
Social_Use2 == "About once a month" ) & partyvote2018 == 2) %>%
select(policy_polarization)
### Primary media
bimodalities <- on18 %>%
select(c(Primary_media, policy_polarization)) %>%
rename("mt_id" = "policy_polarization", "Condition" = "Primary_media") %>%
list(data = .)
# primary media legacy
policy_legacy <- on18 %>%
filter(Primary_media == "Legacy") %>%
select(policy_polarization)
bimodality_coefficient(policy_legacy, na.rm=T)
# primary media online
policy_online <- on18 %>%
filter(Primary_media == "Online") %>%
select(policy_polarization)
#primary media social media
policy_social_media <- on18 %>%
filter(Primary_media == "Social_Media") %>%
select(policy_polarization)
#primary media mixed
policy_mixed <- on18 %>%
filter(Primary_media == "Mixed") %>%
select(policy_polarization)
#high social use
policy_often <- on18 %>%
filter((Social_Use2 == "Several times a day" |
Social_Use2 == "About once a day" |
Social_Use2 == "Several times a week" |
Social_Use2 == "About once a week"  |
Social_Use2 == "Several times a month")) %>%
select(policy_polarization)
# low social use
policy_rarely <- on18 %>%
filter((Social_Use2 == "Several times in a year" |
Social_Use2 == "Never" | Social_Use2 == "About once a month")) %>%
select(policy_polarization)
bimodality_coefficient(policy_often, na.rm = T)
bimodality_coefficient(policy_rarely, na.rm = T)
on18 <- on18 %>%
rename(Green_Like = partyeval_4_out,
Liberal_Like = partyeval_1_out,
NDP_Like = partyeval_3_out,
PC_Like = partyeval_1_out)
on18 %>%
select(id,starts_with("partyeval")&ends_with("out"))->affect
names(affect)
on18$Liberal_Like
on18$partyeval_1_out
#### LOAD SCRIPTS ####
library(here)
source(here("Code/1_load_on18.R")) #clean and load dataset
source(here("Code/0_functions.R")) #load custom functions and packages needed for these analyses
#source("Code/2_LSD_emotions.R")
nrow(on18)
#### CHECK THE DATASET ####
# head(on18)
# names(on18)
# glimpse(on18)
#### CREATE VARIABLES FOR POLARIZATION ANALYSIS ####
#### Primary News Source ####
#Create a variable that classifies individuals based on the primary media type they use
on18 %>%
mutate(Primary_media=case_when(
(primarynews_7 == 1 | primarynews_6 == 1) & (primarynews_5 == 0 & primarynews_4 == 0 & primarynews_3 == 0 & primarynews_2 == 0 & primarynews_1 == 0) ~ "Social_Media", #For individuals who only use Social Media
(primarynews_4 == 1 | primarynews_5 == 1) & (primarynews_6 == 0 & primarynews_7 == 0 & primarynews_3 == 0 & primarynews_2 == 0 & primarynews_1 == 0) ~ "Online", #For individuals who only use online sources that are not social media
(primarynews_3 == 1 | primarynews_2 == 1 | primarynews_1 == 1) & (primarynews_5 == 0 & primarynews_4 == 0 & primarynews_6 == 0 & primarynews_7 == 0) ~ "Legacy", #For individuals who only receive news from television or newspapers
TRUE ~ "Mixed"
))->on18
#table(on18$Primary_)
# on18 <- on18 %>%
#   mutate(
#     Primary_media = relevel(as.factor(Primary_media), ref = "Mixed")
#   )
#### Political Knowledge ####
#Create a political knowledge using three political knowledge questions.
# R gets 1 if they got each response right
# sum to 3 divide by 3 to get one variable indicating their knowledge
on18 %>%
select(unsg:nhse) %>%
glimpse()
#This prints the variable labels of each item to see what each measures
on18 %>%
select(unsg:nhse) %>%
var_label()
#this prints the value lablels to see what each value label contains
on18 %>%
select(unsg:nhse) %>%
val_labels()
on18 %>%
mutate(
across(.cols=unsg:nhse,
binaryrecode, #recode function from 0_functions
.names="{.col}_correct")
)->on18
on18 %>%
select(ends_with("_correct"))
lookfor(on18, "seats in the House of Commons")
#political knowledge variable
on18$pol_knowledge <- (on18$unsg_correct + on18$financename_correct +
on18$ggname_correct + on18$nhse_correct)/4
table(on18$pol_knowledge)
# Defensive coding for political knowledge variable
on18 %>%
ggplot(., aes(x=pol_knowledge))+geom_histogram()
on18 %>%
select(ends_with("correct")| "pol_knowledge") #%>%
#View()
on18$pol_knowledge
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(pol_knowledge, na.rm = T), sd = sd(pol_knowledge, na.rm = T))
stopifnot((isTRUE(all.equal(on18$pol_knowledge,
((on18$unsg_correct + on18$financename_correct +
on18$ggname_correct + on18$nhse_correct)/4))))) #Check to ensure the math is correct
#### POLARIZATION MEASURES ####
#### policy polarization ####
on18$climate_views <- (on18$climate_bin + on18$paris_bin)/2
#create a dataframe with all the policies
on18 %>%
select(starts_with("agreement_"))-> policies
#rename policies with more descriptive names
policy_names <- c("help_racial_minorities", "help_women", "more_coporate_tax", "more_personal_tax", "private_health_care",
"minimum_wage_to_high_prices", "income_inequality", "business_benefits_everyone",
"drug_benefit_u25", "free_post_secondary", "inappropriate_sex_ed")
names(policies)<-policy_names
#recombine
policies <- mutate_all(policies, \(x) as.numeric(as.character(x)))
policies <- range01(policies, na.rm = T)
on18 <- policies %>%
bind_cols(., on18)
#Create a separate data set for descriptive statistics
policies %>%
bind_cols(., on18$Social_Use2)->policies_social_use
names(policies_social_use)<-c(policy_names, "Social_Use2")
#### POLICY DISTRIBUTIONS ####
#Create Policy Polarization Distribution
on18$agreement_1
#Recode policy polarization variables so that 0 represents the most left-wing position and 1 represents the most right-wing position
on18 <- on18 %>%
mutate(
lr_private_health_care = case_match(private_health_care,
0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA),
Lr_minimum_wage_to_high_prices = case_match(minimum_wage_to_high_prices,
0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA),
lr_business_benefits_everyone = case_match(business_benefits_everyone,
0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA),
lr_inappropriate_sex_ed = case_match(inappropriate_sex_ed,
0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA)
)
#Create a variable for the policy positions of all individuals
on18 <- on18 %>%
mutate(policy_polarization = (help_racial_minorities + help_women + more_coporate_tax +
more_personal_tax + income_inequality + drug_benefit_u25 + free_post_secondary +
lr_private_health_care + Lr_minimum_wage_to_high_prices + lr_business_benefits_everyone +
lr_inappropriate_sex_ed))
#### Distributions for distinctiveness coefficients ####
# Primary Media
on18$partyvote2018
#legacy primary media - left-wing
policy_left_legacy <- on18 %>%
filter(Primary_media == "Legacy" & (partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
#online primary media - left-wing
policy_left_online <- on18 %>%
filter(Primary_media == "Online" & (partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
#social media primary media - left-wing
policy_left_social_media <- on18 %>%
filter(Primary_media == "Social_Media" & (partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
#mixed primary media - left-wing
policy_left_mixed <- on18 %>%
filter(Primary_media == "Mixed" & (partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
#on18$partyvote2018
#legacy primary media - right-wing
policy_conservatives_legacy <- on18 %>%
filter(Primary_media == "Legacy" & partyvote2018 == 2) %>%
select(policy_polarization)
#online primary media - right-wing
policy_conservatives_online <- on18 %>%
filter(Primary_media == "Online" & partyvote2018 == 2) %>%
select(policy_polarization)
#social media primary media - right-wing
policy_conservatives_media <- on18 %>%
filter(Primary_media == "Social_Media" & partyvote2018 == 2) %>%
select(policy_polarization)
# mixed primary media - right-wing
policy_conservatives_mixed <- on18 %>%
filter(Primary_media == "Mixed" & partyvote2018 == 2) %>%
select(policy_polarization)
# Social Media Use
#unique(on18$Social_Use)
# High social use - left-wing
policy_left_often <- on18 %>%
filter((Social_Use2 == "Several times a day" |
Social_Use2 == "About once a day" |
Social_Use2 == "Several times a week" |
Social_Use2 == "About once a week"  |
Social_Use2 == "Several times a month") &
(partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
# low social use - left-wing
policy_left_rarely <- on18 %>%
filter((Social_Use2 == "Several times in a year" |
Social_Use2 == "Never" |
Social_Use2 == "About once a month") &
(partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
# high social use - right-wing
policy_conservative_often <- on18 %>%
filter((Social_Use2 == "Several times a day" |
Social_Use2 == "About once a day" |
Social_Use2 == "Several times a week" |
Social_Use2 == "About once a week" |
Social_Use2 == "Several times a month") & partyvote2018 == 2) %>%
select(policy_polarization)
# low social use - right-wing
policy_conservative_social_rarely <- on18 %>%
filter((Social_Use2 == "Several times in a year" |
Social_Use2 == "Never" |
Social_Use2 == "About once a month" ) & partyvote2018 == 2) %>%
select(policy_polarization)
#### Distributions for bimodality coefficients ####
### Primary media
bimodalities <- on18 %>%
select(c(Primary_media, policy_polarization)) %>%
rename("mt_id" = "policy_polarization", "Condition" = "Primary_media") %>%
list(data = .)
# primary media legacy
policy_legacy <- on18 %>%
filter(Primary_media == "Legacy") %>%
select(policy_polarization)
bimodality_coefficient(policy_legacy, na.rm=T)
# primary media online
policy_online <- on18 %>%
filter(Primary_media == "Online") %>%
select(policy_polarization)
#primary media social media
policy_social_media <- on18 %>%
filter(Primary_media == "Social_Media") %>%
select(policy_polarization)
#primary media mixed
policy_mixed <- on18 %>%
filter(Primary_media == "Mixed") %>%
select(policy_polarization)
### Social Use
#high social use
policy_often <- on18 %>%
filter((Social_Use2 == "Several times a day" |
Social_Use2 == "About once a day" |
Social_Use2 == "Several times a week" |
Social_Use2 == "About once a week"  |
Social_Use2 == "Several times a month")) %>%
select(policy_polarization)
# low social use
policy_rarely <- on18 %>%
filter((Social_Use2 == "Several times in a year" |
Social_Use2 == "Never" | Social_Use2 == "About once a month")) %>%
select(policy_polarization)
bimodality_coefficient(policy_often, na.rm = T)
bimodality_coefficient(policy_rarely, na.rm = T)
#### Affective Polarization Wagner (2021) ####
#Extract feelings towards parties scores
# on18 %>%
#   select(starts_with("partyeval")) %>%
#   glimpse()
# so it looks like I took the step sometime of
# scaling these variables to 0 and 1, and they end in
# _out.
# on18 %>%
#   select(starts_with("partyeval")) %>%
#   summary()
#Looks like the originals run from 0 to 5
# on18 %>%
#   select(starts_with("partyeval")) %>%
#   val_labels()
# on18 %>%
#   select(starts_with("partyeval")) %>%
#   var_label()
#Party Numbers
#4 is Green
# 1 is Liberal
# 3 is NDP
# 2 is OPC
# 0 (0) is Really dislike and 5 (1) is really like.
#Extract _out and create a new dataset to calculate affective polarization scores
on18 <- on18 %>%
rename(Green_Like = partyeval_4_out,
Liberal_Like = partyeval_1_out,
NDP_Like = partyeval_3_out,
PC_Like = partyeval_2_out)
on18$partyeval_1_out
on18$Liberal_Like
on18$PC_Like
on18[, Liberal_Like]
on18[, NDP_Like]
on18[, "NDP_Like"]
on18[, PARTIES]
unweighted_like_scores <- function(parties, df){
data <- df[, parties]
data$mean_like <- ifelse(
rowSums(!is.na(data)) >= 2,
rowMeans(data, na.rm = T)
, NA
)
data$distance <- rowSums((data[, parties] - data$mean_like)^2, na.rm = T)/(rowSums(!is.na(data[, parties])))
data$spread <- modify(data$distance, sqrt)
data$spread
}
unweighted_like_scores(PARTIES, on18)
on18$Spread <- unweighted_like_scores(PARTIES, on18)
on18$Spread
