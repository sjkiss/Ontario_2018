filter(Primary_media == "Online" & partyvote2018 == 2) %>%
select(policy_polarization)
policy_conservatives_media <- on18 %>%
filter(Primary_media == "Social_Media" & partyvote2018 == 2) %>%
select(policy_polarization)
policy_conservatives_mixed <- on18 %>%
filter(Primary_media == "Mixed" & partyvote2018 == 2) %>%
select(policy_polarization)
overlap(policy_left_legacy, policy_conservatives_legacy)
overlap_legacy <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_legacy, col = "red", fill = "red", alpha = 0.4) +
geom_density(aes(policy_polarization), data = policy_conservatives_legacy, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
overlap(policy_left_online, policy_conservatives_online)
overlap_online <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_online, col = "red", fill = "red", alpha = 0.4) +
geom_density(aes(policy_polarization), data = policy_conservatives_online, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
overlap(policy_left_social_media, policy_conservatives_media)
overlap_smedia <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_social_media, col = "red", fill = "red", alpha = 0.4) +
geom_density(aes(policy_polarization), data = policy_conservatives_media, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
overlap(policy_left_mixed, policy_conservatives_mixed)
overlap_mixed <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_mixed, col = "red", fill = "red", alpha = 0.4) +
geom_density(aes(policy_polarization), data = policy_conservatives_mixed, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
ggpubr::ggarrange(overlap_legacy, overlap_online, overlap_smedia, overlap_mixed)
unique(on18$Social_Use)
policy_left_often <- on18 %>%
filter((Social_Use2 == "Several times a day" | Social_Use2 == "About once a day" |  Social_Use2 == "Several times a week" | Social_Use2 == "About once a week"  |  Social_Use2 == "Several times a month") & (partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
policy_left_rarely <- on18 %>%
filter((Social_Use2 == "Several times in a year" | Social_Use2 == "Never" | Social_Use2 == "About once a month") & (partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
on18$partyvote2018
policy_conservative_often <- on18 %>%
filter((Social_Use2 == "Several times a day" | Social_Use2 == "About once a day" |  Social_Use2 == "Several times a week" |
Social_Use2 == "About once a week" |  Social_Use2 == "Several times a month") & partyvote2018 == 2) %>%
select(policy_polarization)
policy_conservative_social_rarely <- on18 %>%
filter((Social_Use2 == "Several times in a year" | Social_Use2 == "Never" | Social_Use2 == "About once a month" ) & partyvote2018 == 2) %>%
select(policy_polarization)
overlap(policy_left_often, policy_conservative_often)
overlap_often <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_often, col = "red", fill = "red", alpha = 0.4) +
geom_density(aes(policy_polarization), data = policy_conservative_often, col = "blue", fill = "blue", alpha = 0.4) +
labs(title = "Uses Social Media Often", subtitle = "Overlap Coefficent (0.53)", x = "Policy Positions", y = NULL) + theme_bw()
overlap(policy_left_rarely, policy_conservative_social_rarely)
overlap_rarely <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_rarely, col = "red", fill = "red", alpha = 0.4) +
geom_density(aes(policy_polarization), data = policy_conservative_social_rarely, col = "blue", fill = "blue", alpha = 0.4) +
labs(title = "Uses Social Media Rarely", subtitle = "Overlap Coefficent (0.70)", x = "Policy Positions", y = NULL) + theme_bw()
ggpubr::ggarrange(overlap_often, overlap_rarely, ncol = 1)
#### Primary Media and Media source ####
on18$primarynews_1
on18 %>%
group_by(Primary_media) %>%
summarise(across(CBCTV:HuffingtonPostonline, \(x)mean(x)))
on18 %>%
group_by(Primary_media) %>%
summarise(across(CBCTV:HuffingtonPostonline, \(x)mean(x))) %>%
kableExtra::kable()
media_Sources_by_primarymedia <- on18 %>%
group_by(Primary_media) %>%
summarise(across(CBCTV:HuffingtonPostonline, \(x)mean(x)))
View(media_Sources_by_primarymedia)
#### Primary Media and Media source ####
on18$dailynews_1
media_Sources_by_primarymedia <- on18 %>%
group_by(Primary_media) %>%
summarise(across(dailynews_1:dailynews_22, \(x)mean(x)))
View(media_Sources_by_primarymedia)
# Defensive coding for political knowledge variable
on18 %>%
ggplot(., aes(x=pol_knowledge))+geom_histogram()
on18 %>%
select(ends_with("correct")| "pol_knowledge") %>%
View()
policies_sd_social_dis_down <- policies_social_use_sd_dis_mean %>%
pivot_longer(cols = !Social_Use2,
names_to = c("Policy_Issue", ".value"),
names_sep = "\\." )
policies_sd_social_dis_down
policies_sd_social_dis_down %>%
filter(complete.cases(.)) %>%
ggplot(., aes(x = mean,
y = Social_Use2,
colour = Social_Use2)) +
geom_point()+ facet_wrap(~Policy_Issue, labeller = label_wrap_gen(width=30)) +
geom_errorbar(aes (xmin = mean - (1.96*se), xmax = mean + (1.96*se)), width =.2) +
labs(x = "Mean", y= "Social Media Use") +
theme_bw()  +
theme(axis.text.y=element_blank(),
axis.ticks.y = element_blank(),
strip.text = element_text(size=8))+
guides(color=guide_legend(reverse=T))
# Note no pattern
policies_social_use_sd_dis %>%
group_by(Social_Use2) %>%
summarise( across(everything(), list(.mean = mean, .se = se), na.rm = T )) -> policies_social_use_sd_dis_mean
policies_social_use_sd_dis_mean
install.packages("CPC")
library(CPC)
?rowwise
testdata <- matrix(c(rnorm(50, 0, 1), rnorm(50, 5, 1)), ncol = 2, byrow = TRUE)
View(testdata)
cpc_data <- matrix(select(on18, partyeval_4_out:partyeval_1_out))
cpc_data
cpc_data <- select(on18, partyeval_4_out:partyeval_1_out)
cpc_data
cpc_data <- as.matrix(select(on18, partyeval_4_out:partyeval_1_out))
cpc_data
CPC(partyeval_4_out, k = 4, type = "kmeans")
CPC(cpc_data, k = 4, type = "kmeans")
cpc_high <- on18 %>%
filter((Social_Use2 == "Several times a day" | Social_Use2 == "About once a day" |  Social_Use2 == "Several times a week" | Social_Use2 == "About once a week"  |  Social_Use2 == "Several times a month")) %>%
as.matrix(select(., partyeval_4_out:partyeval_1_out))
cpc_high <- on18 %>%
filter((Social_Use2 == "Several times a day" | Social_Use2 == "About once a day" |  Social_Use2 == "Several times a week" | Social_Use2 == "About once a week"  |  Social_Use2 == "Several times a month")) %>%
as.matrix(select(., partyeval_4_out:partyeval_1_out))
on18 %>%
filter((Social_Use2 == "Several times a day" | Social_Use2 == "About once a day" |  Social_Use2 == "Several times a week" | Social_Use2 == "About once a week"  |  Social_Use2 == "Several times a month"))
on18 %>%
filter((Social_Use2 == "Several times a day" | Social_Use2 == "About once a day" |  Social_Use2 == "Several times a week" | Social_Use2 == "About once a week"  |  Social_Use2 == "Several times a month")) %>%
as.matrix(select(., partyeval_4_out:partyeval_1_out))
on18 %>%
filter((Social_Use2 == "Several times a day" | Social_Use2 == "About once a day" |  Social_Use2 == "Several times a week" | Social_Use2 == "About once a week"  |  Social_Use2 == "Several times a month"))
on18 %>%
filter((Social_Use2 == "Several times a day" | Social_Use2 == "About once a day" |  Social_Use2 == "Several times a week" | Social_Use2 == "About once a week"  |  Social_Use2 == "Several times a month")) %>%
as.matrix(select(partyeval_4_out:partyeval_1_out))
cpc_high <- on18 %>%
filter((Social_Use2 == "Several times a day" | Social_Use2 == "About once a day" |  Social_Use2 == "Several times a week" | Social_Use2 == "About once a week"  |  Social_Use2 == "Several times a month")) %>%
select(partyeval_4_out:partyeval_1_out)
cpc_high
cpc_high <- on18 %>%
filter((Social_Use2 == "Several times a day" | Social_Use2 == "About once a day" |  Social_Use2 == "Several times a week" | Social_Use2 == "About once a week"  |  Social_Use2 == "Several times a month")) %>%
select(partyeval_4_out:partyeval_1_out) %>%
as.matrix()
cpc_high
on18 %>%
filter((Social_Use2 == "Several times a day" | Social_Use2 == "About once a day" |  Social_Use2 == "Several times a week" | Social_Use2 == "About once a week"  |  Social_Use2 == "Several times a month")) %>%
select(partyeval_4_out:partyeval_1_out)
on18 %>%
filter((Social_Use2 == "Several times a day" | Social_Use2 == "About once a day" |  Social_Use2 == "Several times a week" | Social_Use2 == "About once a week"  |  Social_Use2 == "Several times a month")) %>%
select(c(partyeval_4_out,partyeval_3_out,partyeval_2_out ,  partyeval_1_out))
cpc_high <- on18 %>%
filter((Social_Use2 == "Several times a day" | Social_Use2 == "About once a day" |  Social_Use2 == "Several times a week" | Social_Use2 == "About once a week"  |  Social_Use2 == "Several times a month")) %>%
select(c(partyeval_4_out,partyeval_3_out,partyeval_2_out ,  partyeval_1_out)) %>%
as.matrix()
CPC(cpc_high, k = 4, type = "kmeans")
cpc_high <- on18 %>%
filter((Social_Use2 == "Several times in a year" | Social_Use2 == "Never" | Social_Use2 == "About once a month")) %>%
select(c(partyeval_4_out,partyeval_3_out,partyeval_2_out ,  partyeval_1_out)) %>%
as.matrix()
cpc_high <- on18 %>%
filter((Social_Use2 == "Several times a day" | Social_Use2 == "About once a day" |  Social_Use2 == "Several times a week" | Social_Use2 == "About once a week"  |  Social_Use2 == "Several times a month")) %>%
select(c(partyeval_4_out,partyeval_3_out,partyeval_2_out ,  partyeval_1_out)) %>%
as.matrix()
cpclow <- on18 %>%
filter((Social_Use2 == "Several times in a year" | Social_Use2 == "Never" | Social_Use2 == "About once a month")) %>%
select(c(partyeval_4_out,partyeval_3_out,partyeval_2_out ,  partyeval_1_out)) %>%
as.matrix()
CPC(cpclow, k = 4, type = "kmeans")
CPC(cpc_high, k = 4, type = "kmeans")
cpc_legacy <- on18 %>%
filter(Primary_media == "Legacy") %>%
select(c(partyeval_4_out,partyeval_3_out,partyeval_2_out ,  partyeval_1_out)) %>%
as.matrix()
cpc_social <- on18 %>%
filter(Primary_media == "Social_Media") %>%
select(c(partyeval_4_out,partyeval_3_out,partyeval_2_out ,  partyeval_1_out)) %>%
as.matrix()
cpc_online <- on18 %>%
filter(Primary_media == "Online") %>%
select(c(partyeval_4_out,partyeval_3_out,partyeval_2_out ,  partyeval_1_out)) %>%
as.matrix()
cpc_mixed <- on18 %>%
filter(Primary_media == "Mixed") %>%
select(c(partyeval_4_out,partyeval_3_out,partyeval_2_out ,  partyeval_1_out)) %>%
as.matrix()
CPC(cpc_online, k = 4, type = "kmeans")
CPC(cpc_legacy, k = 4, type = "kmeans")
CPC(cpc_social, k = 4, type = "kmeans")
CPC(cpc_online, k = 4, type = "kmeans")
cpc_online <- on18 %>%
filter(Primary_media == "Online") %>%
select(c(partyeval_4_out,partyeval_3_out,partyeval_2_out ,  partyeval_1_out)) %>%
as.matrix()
cpc_online
CPC(cpc_online, k = 4, type = "kmeans")
cpc_online <- on18 %>%
filter(Primary_media == "Online") %>%
select(c(partyeval_4_out,partyeval_3_out,partyeval_2_out ,  partyeval_1_out)) %>%
na.omit() %>%
as.matrix()
CPC(cpc_online, k = 4, type = "kmeans")
CPC(cpc_mixed, k = 4, type = "kmeans")
CPC(cpc_online, k = 4, type = "kmeans")
CPC(cpc_social, k = 4, type = "kmeans")
CPC(cpc_legacy, k = 4, type = "kmeans")
#### FUNCTIONS FOR POLARIZATION DATA ANALYSIS ####
pacman::p_load("tidyverse",
"bayestestR",
"mousetrap",
"lavaan")
#### FUNCTIONS FOR POLARIZATION DATA ANALYSIS ####
pacman::p_load("tidyverse",
"bayestestR",
"mousetrap",
"lavaan",
"pysch")
#### FUNCTIONS FOR POLARIZATION DATA ANALYSIS ####
pacman::p_load("tidyverse",
"bayestestR",
"mousetrap",
"lavaan",
"psych")
policy_issues <- 'policy ~ help_racial_minorities + help_women + more_coporate_tax +
more_personal_tax + income_inequality + drug_benefit_u25 + free_post_secondary +
lr_private_health_care + Lr_minimum_wage_to_high_prices + lr_business_benefits_everyone +
lr_inappropriate_sex_ed'
cfa_policies <- cfa(policy_issues, data = on18)
policy_issues <- 'policy =~ help_racial_minorities + help_women + more_coporate_tax +
more_personal_tax + income_inequality + drug_benefit_u25 + free_post_secondary +
lr_private_health_care + Lr_minimum_wage_to_high_prices + lr_business_benefits_everyone +
lr_inappropriate_sex_ed'
cfa_policies <- cfa(policy_issues, data = on18)
modelsummary(cfa_policies)
summary(cfa_policies, fit.meaures = T, standardized = t)
summary(cfa_policies, fit.measures = T, standardized = T)
policy_rarely
overlap(policy_left_legacy, policy_conservatives_legacy)
overlap(policy_left_online, policy_conservatives_online)
overlap(policy_left_social_media, policy_conservatives_media)
overlap(policy_left_mixed, policy_conservatives_mixed)
overlap_mixed <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_mixed, col = "red", fill = "red", alpha = 0.4) +
labs(title = "Mixed Media", subtitle = "Overlap Coefficent (0.70)", x = "Policy Positions", y = NULL) +
geom_density(aes(policy_polarization), data = policy_conservatives_mixed, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
overlap_smedia <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_social_media, col = "red", fill = "red", alpha = 0.4) +
labs(title = "Online Media", subtitle = "Overlap Coefficent (0.74)", x = "Policy Positions", y = NULL) +
geom_density(aes(policy_polarization), data = policy_conservatives_media, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
overlap_online <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_online, col = "red", fill = "red", alpha = 0.4) +
labs(title = "Online Media", subtitle = "Overlap Coefficent (0.59)", x = "Policy Positions", y = NULL) +
geom_density(aes(policy_polarization), data = policy_conservatives_online, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
overlap_legacy <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_legacy, col = "red", fill = "red", alpha = 0.4) +
labs(title = "Legacy Media", subtitle = "Overlap Coefficent (0.66)", x = "Policy Positions", y = NULL) +
geom_density(aes(policy_polarization), data = policy_conservatives_legacy, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
ggpubr::ggarrange(overlap_legacy, overlap_online, overlap_smedia, overlap_mixed)
#### Primary Media ####
bimodality_coefficient(policy_legacy, na.rm = T)
policy_legacy
bimod_legacy <- policy_legacy %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Legacy Media", subtitle = "Overlap Coefficent (0.66)", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_legacy
#### Primary Media ####
bimodality_coefficient(policy_legacy, na.rm = T)
bimodality_coefficient(policy_online, na.rm = T)
bimod_legacy <- policy_online %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Online Media", subtitle = "Bimodality Coefficent (0.36)", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_legacy
bimodality_coefficient(policy_social_media, na.rm = T)
bimod_legacy <- policy_social_media %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Online Media", subtitle = "Bimodality Coefficent (0.31)", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_legacy
bimodality_coefficient(policy_mixed, na.rm = T)
bimod_mixed <- policy_mixed %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Online Media", subtitle = "Bimodality Coefficent (0.32)", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_mixed
bimodality_coefficient(policy_often, na.rm = T)
bimod_often <- policy_often %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Uses Social Media Often", subtitle = "Bimodality Coefficent (0.29)", x = "Policy Positions", y = NULL) +
theme_bw()
bimodality_coefficient(policy_rarely, na.rm = T)
bimod_often <- policy_often %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Uses Social Media Often", subtitle = "Bimodality Coefficent (0.29)", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_rarely <- policy_rarely %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Uses Social Media Rarely", subtitle = "Bimodality Coefficent (0.33)", x = "Policy Positions", y = NULL) +
theme_bw()
gridExtra::grid.arrange(bimod_legacy, bimod_online, bimod_social, bimod_mixed)
bimod_online <- policy_online %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Online Media", subtitle = "Bimodality Coefficent (0.36)", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_social <- policy_social_media %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Social Media", subtitle = "Bimodality Coefficent (0.31)", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_mixed <- policy_mixed %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Mixed media", subtitle = "Bimodality Coefficent (0.32)", x = "Policy Positions", y = NULL) +
theme_bw()
gridExtra::grid.arrange(bimod_legacy, bimod_online, bimod_social, bimod_mixed)
bimod_often <- policy_often %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Uses Social Media Often", subtitle = "Bimodality Coefficent (0.29)", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_rarely <- policy_rarely %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Uses Social Media Rarely", subtitle = "Bimodality Coefficent (0.33)", x = "Policy Positions", y = NULL) +
theme_bw()
gridExtra::grid.arrange(bimod_often, bimod_rarely)
on18 %>%
group_by(Primary_media) %>%
summarise(mean = mean(pol_knowledge, na.rm = T), sd = sd(pol_knowledge, na.rm = T))
media_Sources_by_primarymedia <- on18 %>%
group_by(Primary_media) %>%
summarise(across(dailynews_1:dailynews_22, \(x)mean(x)))
media_Sources_by_primarymedia
#### Primary Media and Media source ####
on18$dailynews_1
ggplot(aes(x = Primary_Media, y = dailynews_1))
media_Sources_by_primarymedia %>%
filter(Primary_media == "Legacy") %>%
ggplot(aes(x = Primary_Media, y = dailynews_1))
media_Sources_by_primarymedia %>%
filter(Primary_media == "Legacy")
media_Sources_by_primarymedia %>%
filter(Primary_media == "Legacy") %>%
pivot_longer(cols = 2:23)
media_Sources_by_primarymedia %>%
filter(Primary_media == "Legacy") %>%
pivot_longer(cols = 2:23) %>%
ggplot(aes(x = name, y = value)) + geom_point()
media_Sources_by_primarymedia %>%
filter(Primary_media == "Legacy") %>%
pivot_longer(cols = 2:23) %>%
ggplot(aes(y = name, x = value)) + geom_point()
media_Sources_by_primarymedia %>%
filter(Primary_media == "Legacy") %>%
pivot_longer(cols = 2:23) %>%
ggplot(aes(y = name, x = value)) + geom_point() + scale_x_discrete(c("1"))
media_Sources_by_primarymedia %>%
filter(Primary_media == "Legacy") %>%
pivot_longer(cols = 2:23) %>%
ggplot(aes(y = name, x = value)) + geom_point() + scale_y_discrete(c("1"))
media_Sources_by_primarymedia %>%
filter(Primary_media == "Legacy") %>%
pivot_longer(cols = 2:23) %>%
ggplot(aes(y = name, x = value)) + geom_point() + scale_y_discrete(c("1", "2"))
media_Sources_by_primarymedia %>%
filter(Primary_media == "Legacy") %>%
pivot_longer(cols = 2:23) %>%
ggplot(aes(y = name, x = value)) + geom_point() + scale_x_discrete(labels = c("CBC", "Need For Cognition" , "Conscientiousness", "Emotional Stability", "Extraversion", "Openness to Experiences", "Social Trust")) +
#### Affective Polarization ####
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(Soc_dis, na.rm = T), sd = sd(Soc_dis, na.rm = T), n=n(), se=sd/sqrt(n))->mean_affect_scores
media_Sources_by_primarymedia %>%
filter(Primary_media == "Legacy") %>%
pivot_longer(cols = 2:23) %>%
ggplot(aes(y = name, x = value)) + geom_point() + scale_x_discrete(labels = c("CBC", "Need For Cognition" , "Conscientiousness", "Emotional Stability", "Extraversion", "Openness to Experiences", "Social Trust"))
media_Sources_by_primarymedia %>%
filter(Primary_media == "Legacy") %>%
pivot_longer(cols = 2:23) %>%
ggplot(aes(y = name, x = value)) + geom_point() + scale_y_discrete(labels = c("CBC", "Need For Cognition" , "Conscientiousness", "Emotional Stability", "Extraversion", "Openness to Experiences", "Social Trust"))
media_Sources_by_primarymedia %>%
filter(Primary_media == "Legacy") %>%
pivot_longer(cols = 2:23) %>%
ggplot(aes(y = name, x = value)) + geom_point()
#### Primary Media and Media source ####
on18$dailynews_2
#### Primary Media and Media source ####
on18$dailynews_2
#### Primary Media and Media source ####
on18$dailynews_3
#### Primary Media and Media source ####
on18$dailynews_1
#### Primary Media and Media source ####
on18$dailynews_4
#### Primary Media and Media source ####
on18$dailynews_5
#### Primary Media and Media source ####
on18$dailynews_6
#### Primary Media and Media source ####
on18$dailynews_7
#### Primary Media and Media source ####
on18$dailynews_8
#### Primary Media and Media source ####
on18$dailynews_9
media_Sources_by_primarymedia <- on18 %>%
group_by(Primary_media) %>%
summarise(across(dailynews_1:dailynews_22, \(x)mean(x)))
media_Sources_by_primarymedia <- on18 %>%
group_by(Primary_media) %>%
summarise(across(dailynews_1:dailynews_22, \(x)mean(x))) %>%
filter(Primary_media == "Legacy") %>%
pivot_longer(cols = 2:23)
on18$primarynews_1
media_Sources_by_primarymedia$name <- as.factor(media_Sources_by_primarymedia$name,
levels = c("primarynews_1" = "CBC TV"))
media_Sources_by_primarymedia$name <- as.factor(media_Sources_by_primarymedia$name,
levels = c( "CBC TV" = "primarynews_1"))
?as.factor
on18$CBConline
View(on18)
media_Sources_by_primarymedia <- on18 %>%
group_by(Primary_media) %>%
summarise(across(CBCTV:HuffingtonPostonline, \(x)mean(x)))
media_Sources_by_primarymedia
media_Sources_by_primarymedia <- on18 %>%
group_by(Primary_media) %>%
summarise(across(CBCTV:HuffingtonPostonline, \(x)mean(x))) %>%
filter(Primary_media == "Legacy") %>%
pivot_longer(cols = 2:22)
media_Sources_by_primarymedia %>%
filter(Primary_media == "Legacy") %>%
pivot_longer(cols = 2:23) %>%
ggplot(aes(y = name, x = value)) + geom_point()
media_Sources_by_primarymedia %>%
ggplot(aes(y = name, x = value)) + geom_point()
media_Sources_by_primarymedia <- on18 %>%
group_by(Primary_media) %>%
summarise(across(CBCTV:HuffingtonPostonline, \(x)mean(x))) %>%
filter(Primary_media == "online") %>%
pivot_longer(cols = 2:22)
media_Sources_by_primarymedia %>%
ggplot(aes(y = name, x = value)) + geom_point()
media_Sources_by_primarymedia <- on18 %>%
group_by(Primary_media) %>%
summarise(across(CBCTV:HuffingtonPostonline, \(x)mean(x)))
on18 %>%
group_by(Primary_media) %>%
summarise(across(CBCTV:HuffingtonPostonline, \(x)mean(x)))
media_Sources_by_primarymedia <- on18 %>%
group_by(Primary_media) %>%
summarise(across(CBCTV:HuffingtonPostonline, \(x)mean(x))) %>%
filter(Primary_media == "Online") %>%
pivot_longer(cols = 2:22)
media_Sources_by_primarymedia %>%
ggplot(aes(y = name, x = value)) + geom_point()
interact_help_racial_minorities
#Create graphs of the marginal effects of the interaction models using the functions defined in "0_functions.R"
marginaleffects::plot_slopes(extract_model(1))
extract_model(1)
mods_all %>%
unnest(tidied) %>%
filter(term!="(Intercept)") %>%
ggplot(aes(x = estimate, y = term)) + geom_point() +
geom_linerange(aes(xmin=conf.low, xmax = conf.high), position = position_dodge(width=.75)) +
facet_wrap(~Policy_Issue, labeller = label_wrap_gen(width=30)) + geom_vline(xintercept = 0) + theme_bw()
mods_interact[[1]]
mods_interact[1]
mods_interact
#Create graphs of the marginal effects of the interaction models using the functions defined in "0_functions.R"
marginaleffects::plot_slopes(mods_interact[[2]], condition = "")
#Create graphs of the marginal effects of the interaction models using the functions defined in "0_functions.R"
marginaleffects::plot_slopes(mods_interact[[2]][[1]], condition = "")
mods_interact[[2]][[1]]
mods_interact[[2]][1]
#Create graphs of the marginal effects of the interaction models using the functions defined in "0_functions.R"
marginaleffects::plot_slopes(mods_interact[[2]][1], condition = "Primary_Media")
?plotslopes
?plot_slopes
#Create graphs of the marginal effects of the interaction models using the functions defined in "0_functions.R"
marginaleffects::plot_slopes(mods_interact[[2]][1], variables = "Interest",condition = "Primary_Media")
#Create graphs of the marginal effects of the interaction models using the functions defined in "0_functions.R"
marginaleffects::plot_slopes(mods_interact[[2]][1], variables = "Interest", condition = Primary_Media)
#Create graphs of the marginal effects of the interaction models using the functions defined in "0_functions.R"
marginaleffects::plot_slopes(mods_interact[[2]][1], variables = "Interest", condition = "Primary_Media")
mods_interact
#Create graphs of the marginal effects of the interaction models using the functions defined in "0_functions.R"
marginaleffects::plot_slopes(mods_interact[[2]][[1]], variables = "Interest", condition = "Primary_Media")
#Create graphs of the marginal effects of the interaction models using the functions defined in "0_functions.R"
marginaleffects::plot_slopes(mods_interact[[2]][[1]], variables = "Interest", condition = "Primary_Media") + geom_hline(x = 0)
#Create graphs of the marginal effects of the interaction models using the functions defined in "0_functions.R"
marginaleffects::plot_slopes(mods_interact[[2]][[1]], variables = "Interest", condition = "Primary_Media") + geom_hline(xintercept = 0)
?geom_hline
#Create graphs of the marginal effects of the interaction models using the functions defined in "0_functions.R"
marginaleffects::plot_slopes(mods_interact[[2]][[1]], variables = "Interest", condition = "Primary_Media") + geom_hline(yintercept  = 0)
#Create graphs of the marginal effects of the interaction models using the functions defined in "0_functions.R"
marginaleffects::plot_slopes(mods_interact[[2]][[1]], variables = "Interest", condition = "Primary_Media") + geom_hline(yintercept  = 0, lty = "dotted")
#Create graphs of the marginal effects of the interaction models using the functions defined in "0_functions.R"
marginaleffects::plot_slopes(mods_interact[[2]][[1]], variables = "Interest", condition = "Primary_Media") + geom_hline(yintercept  = 0, lty = "dashed")
#Create graphs of the marginal effects of the interaction models using the functions defined in "0_functions.R"
marginaleffects::plot_slopes(mods_interact[[2]][[1]], variables = "Interest", condition = "Primary_Media") + geom_hline(yintercept  = 0, lty = "dashed", col = "seagreen")
#Create graphs of the marginal effects of the interaction models using the functions defined in "0_functions.R"
marginaleffects::plot_slopes(mods_interact[[2]][[1]], variables = "Interest", condition = "Primary_Media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
marginaleffects::plot_slopes(mods_interact[[2]][[11]], variables = "Interest", condition = "Primary_Media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
marginaleffects::plot_slopes(mods_interact[[2]][[10]], variables = "Interest", condition = "Primary_Media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
on18$WAP
affect_interest <-
affect_scores_social_use
affect_interest <- lm(WAP ~ Interest, data = on18, na.action = na.omit)
#### Affective polarization models ####
affect_models <- list()
affect_models[[1]] <- lm(WAP ~ Interest, data = on18, na.action = na.omit)
affect_models[[2]] <- lm(WAP ~ Primary_Media, data = on18, na.action = na.omit)
affect_models[[2]] <- lm(WAP ~ Primary_Media, data = on18, na.action = na.omit)
lm(WAP ~ Primary_Media, data = on18, na.action = na.omit)
#### Primary News Source ####
#Create a variable that classifies individuals based on the primary media type they use
on18 %>%
mutate(Primary_media=case_when(
(primarynews_7 == 1 | primarynews_6 == 1) & (primarynews_5 == 0 & primarynews_4 == 0 & primarynews_3 == 0 & primarynews_2 == 0 & primarynews_1 == 0) ~ "Social_Media", #For individuals who only use Social Media
(primarynews_4 == 1 | primarynews_5 == 1) & (primarynews_6 == 0 & primarynews_7 == 0 & primarynews_3 == 0 & primarynews_2 == 0 & primarynews_1 == 0) ~ "Online", #For individuals who only use online sources that are not social media
(primarynews_3 == 1 | primarynews_2 == 1 | primarynews_1 == 1) & (primarynews_5 == 0 & primarynews_4 == 0 & primarynews_6 == 0 & primarynews_7 == 0) ~ "Legacy", #For individuals who only receive news from television or newspapers
TRUE ~ "Mixed"
))->on18
affect_models[[2]] <- lm(WAP ~ Primary_Media, data = on18, na.action = na.omit)
affect_models[[2]] <- lm(WAP ~ Primary_media, data = on18, na.action = na.omit)
affect_models[[2]] <- lm(WAP ~ Interest + Primary_media, data = on18, na.action = na.omit)
affect_models[[1]] <- lm(WAP ~ Interest, data = on18, na.action = na.omit)
affect_models[[2]] <- lm(WAP ~ Primary_media, data = on18, na.action = na.omit)
affect_models[[3]] <- lm(WAP ~ Interest + Primary_media, data = on18, na.action = na.omit)
affect_models[[4]] <- lm(WAP ~ Interest * Primary_media, data = on18, na.action = na.omit)
modelsummary(affect_models)
modelsummary(affect_models, stars = T)
marginaleffects::plot_slopes(affect_models[[4]], variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
