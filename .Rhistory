Horwath = leadereval_2_out,
Schreiner = leadereval_3_out,
Wynne = leadereval_4_out
)
leader_affect$Schreiner_Like_wt <- (leader_affect$Schreiner * 0.046)
leader_affect$Ford_Like_wt <- (leader_affect$Ford * 0.405)
leader_affect$Wynne_Like_wt <- (leader_affect$Wynne * 0.196)
leader_affect$Horwath_Like_wt <- (leader_affect$Horwath * 0.336)
#
leader_affect %>%
mutate(mean_like=rowMeans(across(6:9), na.rm=T))->leader_affect
# leader_affect %>%
#   rowwise() %>%
#   mutate(mean_like=mean(c_across(6:9), na.rm=T))->leader_affect
leader_affect <- leader_affect %>%
select(., !(6:9)) %>%
pivot_longer(cols = !c(id, mean_like),
names_to = "Leader",
values_to = "Leader_like_score")
leader_affect %>%
mutate(vote_share=case_when(Leader == "Schreiner" ~ 0.046, Leader == "Wynne" ~ 0.196, Leader == "Horwath" ~ 0.336,
Leader == "Ford" ~ 0.405
)) -> leader_affect
leader_affect$like_mean <- (leader_affect$Leader_like_score - leader_affect$mean_like)^2
leader_affect$like_mean_wt <- (leader_affect$like_mean * leader_affect$vote_share)
leader_affect %>%
group_by(id) %>%
summarise(WAP_lead = sum(like_mean_wt)) -> leader_affect
leader_affect$WAP_lead <- sqrt(leader_affect$WAP_lead)
full_join(on18, leader_affect, by = join_by(id)) -> on18
on18$wap_difference <- on18$WAP - on18$WAP_lead
on18 <- on18 %>%
mutate(
WAP_lead_sd = as.numeric(scale(WAP_lead))
)
mean(on18$wap_difference, na.rm = T)
#### DESCRIPTIVE STATISTICS ####
#### Primary Media ####
#Descriptive Statistics for political knowledge by Primary media
table(on18$Social_Use2, on18$pol_knowledge)
on18 %>%
group_by(Primary_media) %>%
summarise(mean = mean(pol_knowledge, na.rm = T), sd = sd(pol_knowledge, na.rm = T))
#### Primary Media and Media source ####
on18$HuffingtonPostonline
media_Sources_by_primarymedia <- on18 %>%
group_by(Primary_media) %>%
summarise(across(CBCTV:HuffingtonPostonline, \(x)mean(x))) %>%
filter(Primary_media == "Online") %>%
pivot_longer(cols = 2:22)
#see the most read sources for online news users
media_Sources_by_primarymedia %>%
ggplot(aes(y = name, x = value)) + geom_point()
#### Affective Polarization ####
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T), n=n(), se=sd/sqrt(n))->mean_affect_scores
(on18 %>%
group_by(partyvote2018) %>%
summarise(Mean = mean(WAP, na.rm = T), Standard_Deviation = sd(WAP, na.rm = T), Minimum = min(WAP, na.rm = T), Maximum = max(WAP, na.rm = T), N=n()) %>%
rename(Group = partyvote2018) -> affect_scores_party)
(on18 %>%
group_by(Primary_media) %>%
summarise(Mean = mean(WAP, na.rm = T), Standard_Deviation = sd(WAP, na.rm = T), Minimum = min(WAP, na.rm = T), Maximum = max(WAP, na.rm = T), N=n()) %>%
rename(Group = Primary_media) -> affect_scores_primary_media)
mean(on18$WAP, na.rm = T); sd(on18$WAP, na.rm = T)
descripts_WAP <- rbind(tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = (length(!is.na(on18$WAP)))),
on18 %>%
group_by(Social_Use2) %>%
summarise(Mean = mean(WAP, na.rm = T), Standard_Deviation = sd(WAP, na.rm = T), Minimum = min(WAP, na.rm = T), Maximum = max(WAP, na.rm = T), N=n()) %>%
rename(Group = Social_Use2), affect_scores_party, affect_scores_primary_media)
#kableExtra::kable(descripts_WAP, format = "pipe", digits = 3)
tibble(Group = "Ontarians", Mean = mean(on18$WAP, na.rm = T),
Standard_Deviation = sd(on18$WAP, na.rm = T),
Minimum = min(on18$WAP, na.rm = T),
Maximum = max(on18$WAP, na.rm = T),
N = (length(!is.na(on18$WAP))))
mean_affect_scores
mean_affect_scores %>%
filter(complete.cases(.)) %>%
ggplot(., aes(x = mean,
y = Social_Use2,
colour = Social_Use2)) +
geom_point()+
geom_errorbar(aes (xmin = mean - (1.96*se), xmax = mean + (1.96*se)), width =.2) +
labs(x = "Mean", y= "Social Media Use") +
theme_bw()  +
theme(axis.text.y=element_blank(),
axis.ticks.y = element_blank(),
strip.text = element_text(size=8))+
guides(color=guide_legend(reverse=T))+xlim(c(0,0.5)) -> affect_scores_social_use; affect_scores_social_use
on18 %>%
group_by(Primary_media) %>%
summarise(mean = mean(Soc_dis, na.rm = T), sd = sd(Soc_dis, na.rm = T))
#### RE-RUN MAIN ANALYSES WITHOUT STRAIGHT LINERS ####
COVARS <- c("Interest", "age3", "degree", "income3", "pol_knowledge")
WAP_primary_media <- list()
for(i in 1:length(COVARS)){
data <- on18 |> filter(straightliner == 0)
WAP_primary_media[[i]] <-  lm_robust(reformulate(c("Primary_media", COVARS[1:i]),
response = "WAP_sd"), data = data, se_type = "HC0")
}
lm_robust(reformulate(c("Primary_media"),
response = "WAP_sd"), data = data, se_type = "HC0")
modelsummary(WAP_primary_media, stars = T)
#Exploratory factor analysis
cor_policies <- on18 %>%
dplyr::select(c(help_racial_minorities, help_women, more_coporate_tax,
more_personal_tax, income_inequality, drug_benefit_u25, free_post_secondary,
lr_private_health_care, Lr_minimum_wage_to_high_prices, lr_business_benefits_everyone,
lr_inappropriate_sex_ed
)) %>%
cor(., use = "complete.obs")
eigen(cor_policies)$values
(policy_fa_analysis <- psych::fa(cor_policies, nfactors = 3))
policy_issues <- 'policy =~ help_racial_minorities + help_women + more_coporate_tax +
more_personal_tax + income_inequality + drug_benefit_u25 + free_post_secondary +
lr_private_health_care + Lr_minimum_wage_to_high_prices + lr_business_benefits_everyone +
lr_inappropriate_sex_ed'
cfa_policies <- cfa(policy_issues, data = on18)
summary(cfa_policies, fit.measures = T, standardized = T)
#Create regression models for affective polarization using the weighted affective polarization (WAP) measure
#**** Start thinking about control variables
WAP_reg <- list()
WAP_graph <- list()
WAP_reg[[1]] <- lm(WAP_sd ~ Primary_media, data = on18, na.action = na.omit);summary(WAP_reg[[1]])
WAP_graph[[1]] <- graph_regression(WAP_reg[[1]]); WAP_graph[[1]]
WAP_reg[[2]] <- lm(WAP_sd ~ Interest, data = on18, na.action = na.omit); summary(WAP_reg[[2]])
WAP_graph[[2]] <- graph_regression(WAP_reg[[2]]); WAP_graph[[2]]
WAP_reg[[3]] <- lm(WAP_sd ~ Interest + Primary_media, data = on18, na.action = na.omit); summary(WAP_reg[[3]])
WAP_graph[[3]] <- graph_regression(WAP_reg[[3]]); WAP_graph[[3]]
WAP_reg[[4]] <- lm(WAP_sd ~ Interest + Primary_media + age3, data = on18, na.action = na.omit); summary(WAP_reg[[4]])
WAP_graph[[4]] <- graph_regression(WAP_reg[[4]]); WAP_graph[[4]]
WAP_reg[[5]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree, data = on18, na.action = na.omit); summary(WAP_reg[[5]])
WAP_graph[[5]] <- graph_regression(WAP_reg[[5]]); WAP_graph[[5]]
WAP_reg[[6]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree + income3, data = on18, na.action = na.omit); summary(WAP_reg[[6]])
WAP_graph[[6]] <- graph_regression(WAP_reg[[6]]); WAP_graph[[6]]
WAP_reg[[7]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit); summary(WAP_reg[[7]])
WAP_graph[[7]] <- graph_regression(WAP_reg[[7]]); WAP_graph[[7]]
WAP_Interact <- lm(WAP_sd ~ Primary_media*Interest, data = on18, na.action = na.omit)
summary(WAP_Interact)
WAP_Interact2 <- lm(WAP_sd ~ Primary_media*Interest  + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
summary(WAP_Interact2)
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_Interact, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
marginaleffects::plot_slopes(WAP_Interact2, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
#Display Models
modelsummary(WAP_reg, stars = T, vcov = "HC0") #As numbers
WAP_reg_df <- map(WAP_reg, tidy)
WAP_reg_df_ci <- map(WAP_reg, confint, level = 0.95, HC_type = "HC0")
WAP_reg_df_ci <- map(WAP_reg_df_ci, as_tibble)
WAP_reg_df <- bind_rows(WAP_reg_df, .id = "model_num")
WAP_reg_df_ci <- bind_rows(WAP_reg_df_ci) %>%
rename("conf.low" = "2.5 %", "conf.high" = "97.5 %")
WAP_reg_df <- bind_cols(WAP_reg_df, WAP_reg_df_ci)
model_names <- list(
"1" = "Model 1",
"2" = "Model 2",
"3" = "Model 3",
"4" = "Model 4",
"5" = "Model 5",
"6" = "Model 6",
"7" = "Model 7"
)
model_labeller <- function(variable, value){
return(model_names[value])
}
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() +
geom_linerange() + geom_vline(xintercept = 0, lty = 4) +
facet_wrap(~model_num, ncol = 4, labeller = model_labeller) + theme_bw()
#Investigating the age coefficient
summary(lm(WAP_sd ~ age, data = on18))
summary(lm(WAP_sd ~ age + I(age^2), data = on18))
age_poly <- lm(WAP_sd ~ Interest + Primary_media  + age + I(age^2), data = on18, na.action = na.omit); summary(age_poly)
summary(lm(WAP_sd ~ Interest + Primary_media + age + I(age^2) + degree + income3 + pol_knowledge, data = on18, na.action = na.omit))
age_legacy <- data.frame(age = seq(18, 100, 1),
Primary_media = "Legacy",
Interest = mean(on18$Interest, na.rm = T))
age_legacy[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_legacy, interval = "confidence")
age_legacy$media <- "Legacy"
age_mixed <- data.frame(age = seq(18, 100, 1),
Primary_media = "Mixed",
Interest = mean(on18$Interest, na.rm = T))
age_mixed[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_mixed, interval = "confidence")
age_mixed$media <- "Mixed"
age_online <- data.frame(age = seq(18, 100, 1),
Primary_media = "Online",
Interest = mean(on18$Interest, na.rm = T))
age_online[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_online, interval = "confidence")
age_online$media <- "Online"
age_social_media <- data.frame(age = seq(18, 100, 1),
Primary_media = "Social_Media",
Interest = mean(on18$Interest, na.rm = T))
age_social_media[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_social_media, interval = "confidence")
age_social_media$media <- "Social Media"
age_predicted <- rbind(age_legacy, age_mixed, age_online, age_social_media)
age_predicted_graph <- age_predicted %>%
ggplot(aes(x = age, y = predicted_WAP, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") +
labs(x = "Age", y = "Predicted Level of Affective Polarization \n (WAP Score)") +
theme_bw()
age_predicted_graph
WAP_reg_soc_use <- list()
WAP_reg_soc_use[[1]] <- lm(WAP_sd ~ Social_Use2, data = on18, na.action = na.omit);summary(WAP_reg_soc_use[[1]])
WAP_reg_soc_use[[2]] <- lm(WAP_sd ~ Interest, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[2]])
WAP_reg_soc_use[[3]] <- lm(WAP_sd ~ Interest + Social_Use2, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[3]])
WAP_reg_soc_use[[4]] <- lm(WAP_sd ~ Interest + Social_Use2 + age3, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[4]])
WAP_reg_soc_use[[5]] <- lm(WAP_sd ~ Interest + Social_Use2 + age3 + degree, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[5]])
WAP_reg_soc_use[[6]] <- lm(WAP_sd ~ Interest + Social_Use2 + age3 + degree + income3, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[6]])
WAP_reg_soc_use[[7]] <- lm(WAP_sd ~ Interest + Social_Use2 + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[7]])
#WAP_graph[[7]] <- graph_regression(WAP_reg_soc_use[[7]]); WAP_graph[[7]]
modelsummary(WAP_reg_soc_use, stars = T, vcov = "HC0")
#Create regression models for affective polarization using the weighted affective polarization (WAP) measure
WAP_lead_reg <- list()
WAP_lead_graph <- list()
WAP_lead_reg[[1]] <- lm(WAP_lead_sd ~ Primary_media, data = on18, na.action = na.omit);summary(WAP_lead_reg[[1]])
WAP_lead_graph[[1]] <- graph_regression(WAP_lead_reg[[1]]); WAP_lead_graph[[1]]
WAP_lead_reg[[2]] <- lm(WAP_lead_sd ~ Interest, data = on18, na.action = na.omit); summary(WAP_lead_reg[[2]])
WAP_lead_graph[[2]] <- graph_regression(WAP_lead_reg[[2]]); WAP_lead_graph[[2]]
WAP_lead_reg[[3]] <- lm(WAP_lead_sd ~ Interest + Primary_media, data = on18, na.action = na.omit); summary(WAP_lead_reg[[3]])
WAP_lead_graph[[3]] <- graph_regression(WAP_lead_reg[[3]]); WAP_lead_graph[[3]]
WAP_lead_reg[[4]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3, data = on18, na.action = na.omit); summary(WAP_lead_reg[[4]])
WAP_lead_graph[[4]] <- graph_regression(WAP_lead_reg[[4]]); WAP_lead_graph[[4]]
WAP_lead_reg[[5]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3 + degree, data = on18, na.action = na.omit); summary(WAP_lead_reg[[5]])
WAP_lead_graph[[5]] <- graph_regression(WAP_lead_reg[[5]]); WAP_lead_graph[[5]]
WAP_lead_reg[[6]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3 + degree + income3, data = on18, na.action = na.omit); summary(WAP_lead_reg[[6]])
WAP_lead_graph[[6]] <- graph_regression(WAP_lead_reg[[6]]); WAP_lead_graph[[6]]
WAP_lead_reg[[7]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit); summary(WAP_lead_reg[[7]])
WAP_lead_graph[[7]] <- graph_regression(WAP_lead_reg[[7]]); WAP_lead_graph[[7]]
WAP_lead_Interact <- lm(WAP_lead_sd ~ Primary_media*Interest, data = on18, na.action = na.omit)
summary(WAP_lead_Interact)
WAP_lead_Interact2 <- lm(WAP_lead_sd ~ Primary_media*Interest + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
summary(WAP_lead_Interact2)
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_lead_Interact, variables = "Interest", condition = "Primary_media") +
geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + coord_flip() + theme_bw()
marginaleffects::plot_slopes(WAP_lead_Interact2, variables = "Interest", condition = "Primary_media") +
geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + coord_flip() + theme_bw()
#Display Models
modelsummary(WAP_lead_reg, stars = T, vcov = "HC0") #As numbers
#### Primary Media ####
bimod_online <- bimodality_coefficient(policy_online, na.rm = T); bimod_online
bimod_leacgy <- bimodality_coefficient(policy_legacy, na.rm = T); bimod_leacgy
bimodality_coefficient(policy_social_media, na.rm = T)
bimodality_coefficient(policy_mixed, na.rm = T)
bimod_legacy <- policy_legacy %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Legacy Media", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_online <- policy_online %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Online Media", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_social <- policy_social_media %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Social Media", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_mixed <- policy_mixed %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Mixed media", x = "Policy Positions", y = NULL) +
theme_bw()
gridExtra::grid.arrange(bimod_legacy, bimod_online, bimod_social, bimod_mixed)
bimodality_coefficient(policy_often, na.rm = T)
bimodality_coefficient(policy_rarely, na.rm = T)
bimod_often <- policy_often %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Uses Social Media Often", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_rarely <- policy_rarely %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Uses Social Media Rarely", x = "Policy Positions", y = NULL) +
theme_bw()
gridExtra::grid.arrange(bimod_often, bimod_rarely)
on18$partyvote2018
left_wing <- on18 %>%
filter(partyvote2018 == 1 | partyvote2018 == 3) %>%
select(policy_polarization) %>%
na.omit()
right_wing <- on18 %>%
filter(partyvote2018 == 2) %>%
select(policy_polarization) %>%
na.omit()
overlapping::overlap(list(as.double(left_wing$policy_polarization),
as.double(right_wing$policy_polarization)))
policy_left_legacy_vector <- as.double(policy_left_legacy$policy_polarization) %>%
na.omit()
policy_conservatives_legacy_vector <- as.double(policy_conservatives_legacy$policy_polarization) %>%
na.omit()
overlapping::overlap(list(policy_left_legacy_vector, policy_conservatives_legacy_vector))
overlap_legacy <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_legacy, col = "red", fill = "red", alpha = 0.4) +
labs(title = "Legacy Media", subtitle = "Overlap Coefficent (0.66)", x = "Policy Positions", y = NULL) +
geom_density(aes(policy_polarization), data = policy_conservatives_legacy, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
policy_left_online_vector <- as.double(policy_left_online$policy_polarization) %>%
na.omit()
policy_conservatives_online_vector <- as.double(policy_conservatives_online$policy_polarization) %>%
na.omit()
overlapping::overlap(list(policy_left_online_vector, policy_conservatives_online_vector))
overlapping::boot.overlap(list(policy_left_online_vector, policy_conservatives_online_vector), B = 1000)
overlap_online <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_online, col = "red", fill = "red", alpha = 0.4) +
labs(title = "Online Media", subtitle = "Overlap Coefficent (0.59)", x = "Policy Positions", y = NULL) +
geom_density(aes(policy_polarization), data = policy_conservatives_online, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
policy_left_media_vector <- as.double(policy_left_social_media$policy_polarization) %>%
na.omit()
policy_conservatives_media_vector <- as.double(policy_conservatives_media$policy_polarization) %>%
na.omit()
overlap_online <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_online, col = "red", fill = "red", alpha = 0.4) +
labs(title = "Online Media", subtitle = "Overlap Coefficent (0.59)", x = "Policy Positions", y = NULL) +
geom_density(aes(policy_polarization), data = policy_conservatives_online, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
policy_left_media_vector <- as.double(policy_left_social_media$policy_polarization) %>%
na.omit()
policy_conservatives_media_vector <- as.double(policy_conservatives_media$policy_polarization) %>%
na.omit()
overlapping::overlap(list(policy_left_media_vector, policy_conservatives_media_vector))
overlapping::boot.overlap(list(policy_left_media_vector, policy_conservatives_media_vector), B = 1000)
#bayestestR::overlap(policy_left_social_media, policy_conservatives_media)
overlap_smedia <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_social_media, col = "red", fill = "red", alpha = 0.4) +
labs(title = "Social Media", subtitle = "Overlap Coefficent (0.74)", x = "Policy Positions", y = NULL) +
geom_density(aes(policy_polarization), data = policy_conservatives_media, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
policy_left_mixed_vector <- as.double(policy_left_mixed$policy_polarization) %>%
na.omit()
policy_conservatives_mixed_vector <- as.double(policy_conservatives_mixed$policy_polarization) %>%
na.omit()
overlapping::overlap(list(policy_left_mixed_vector, policy_conservatives_mixed_vector))
set.seed(1234); overlapping::boot.overlap(list(policy_left_mixed_vector,
policy_conservatives_mixed_vector), B = 1000)
#bayestestR::overlap(policy_left_mixed, policy_conservatives_mixed)
overlap_mixed <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_mixed, col = "red", fill = "red", alpha = 0.4) +
labs(title = "Mixed Media", subtitle = "Overlap Coefficent (0.70)", x = "Policy Positions", y = NULL) +
geom_density(aes(policy_polarization), data = policy_conservatives_mixed, col = "blue", fill = "blue", alpha = 0.4) + theme_bw()
ggpubr::ggarrange(overlap_legacy, overlap_online, overlap_smedia, overlap_mixed)
#### OVERLAP FOR SOCIAL USE ####
policy_left_often_vector <- as.double(policy_left_often$policy_polarization) %>%
na.omit()
policy_conservative_often_vector <- as.double(policy_conservative_often$policy_polarization) %>%
na.omit()
overlapping::overlap(list(policy_left_often_vector, policy_conservative_often_vector))
set.seed(1234); overlapping::boot.overlap(list(policy_left_often_vector,
policy_conservative_often_vector), B = 1000)
#bayestestR::overlap(policy_left_often, policy_conservative_often)
overlap_often <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_often, col = "red", fill = "red", alpha = 0.4) +
geom_density(aes(policy_polarization), data = policy_conservative_often, col = "blue", fill = "blue", alpha = 0.4) +
labs(title = "Uses Social Media Often", subtitle = "Overlap Coefficent (0.53)", x = "Policy Positions", y = NULL) + theme_bw()
policy_left_rarely_vector <- as.double(policy_left_rarely$policy_polarization) %>%
na.omit()
policy_conservative_social_rarely_vector <- as.double(policy_conservative_social_rarely$policy_polarization) %>%
na.omit()
overlapping::overlap(list(policy_left_rarely_vector, policy_conservative_social_rarely_vector))
set.seed(1234); overlapping::boot.overlap(list(policy_left_rarely_vector,
policy_conservative_social_rarely_vector), B = 1000)
#bayestestR::overlap(policy_left_rarely_vector, policy_conservative_social_rarely_vector)
overlap_rarely <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_rarely, col = "red", fill = "red", alpha = 0.4) +
geom_density(aes(policy_polarization), data = policy_conservative_social_rarely, col = "blue", fill = "blue", alpha = 0.4) +
labs(title = "Uses Social Media Rarely", subtitle = "Overlap Coefficent (0.70)", x = "Policy Positions", y = NULL) + theme_bw()
ggpubr::ggarrange(overlap_often, overlap_rarely, ncol = 1)
#report the null of the social media use
#make the positive finding more interesting
#statistical tests with Overlap coefficients
#### POLITICAL INTEREST AND AFFECTIVE POLARIZATION ####
Interest_pm <- lm(Interest ~ Primary_media, data = on18, na.action = na.omit); summary(Interest_pm)
Interest_su <- lm(Interest ~ Social_Use2, data = on18, na.action = na.omit); summary(Interest_su)
WAP_Interact <- lm(WAP_sd ~ Primary_media*Interest, data = on18, na.action = na.omit)
summary(WAP_Interact)
WAP_Interact2 <- lm(WAP_sd ~ as.numeric(Social_Use2)*Interest  + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
summary(WAP_Interact2)
#| label: import
#| echo: false
#| warning: false
#| message: false
#| results: 'hide'
#| output: false
library(here)
source(here("Code/3_polarization.R"))
#| label: setup
#| echo: false
library(knitr)
library(mousetrap)
opts_knit$set(root.dir=rprojroot::find_rstudio_root_file())
#opts_chunk$set(warning=F,message=F)
#| label: import
#| echo: false
#| warning: false
#| message: false
#| results: 'hide'
#| output: false
library(here)
source(here("Code/3_polarization.R"))
#Cache needs to be turned off the render
table(on18$Social_Use2, on18$Primary_media)
table(on18$Primary_media)
table(on18$Social_Use2, on18$Primary_media)
as.ordered(Social_Use2)
as.ordered(on18$Social_Use2)
as.orderd(on18$Primary_media)
as.ordered(on18$Primary_media)
?cor
cor(as.ordered(on18$Social_Use2),as.ordered(on18$Primary_media), method="kendall")
install.packages("pspearman")
pspearman::spearman.test(as.ordered(on18$Social_Use2),as.ordered(on18$Primary_media))
#install.packages("pspearman")
on18 %>%
tbl_cross(Social_Use2, Primary_media)
#install.packages("pspearman")
library(gtsummary)
on18 %>%
tbl_cross(Social_Use2, Primary_media)
#| label: calculate-spearman
#install.packages("pspearman")
spear1<-pspearman::spearman.test(as.ordered(on18$Social_Use2),as.ordered(on18$Primary_media))
spear1$statistic
spear1$estimate
on18 %>%
tbl_cross(Social_Use2, Primary_media, percent="column")
on18 %>%
tbl_cross(Social_Use2, Primary_media, percent="column")
on18$partyeval_1
#| label: setup
#| echo: false
library(knitr)
library(mousetrap)
opts_knit$set(root.dir=rprojroot::find_rstudio_root_file())
#opts_chunk$set(warning=F,message=F)
#| label: import
#| echo: false
#| warning: false
#| message: false
#| results: 'hide'
#| output: false
library(here)
source(here("Code/3_polarization.R"))
#Cache needs to be turned off the render
#| label: calculate-spearman
#install.packages("pspearman")
spear1<-pspearman::spearman.test(as.ordered(on18$Social_Use2),as.ordered(on18$Primary_media))
spear1$estimate
#| label: tbl-cross
#| tbl-cap: "Cross-tabulation of primary source of election news by frequency of general social media usage. Spearman's Rho correlation coefficient is 0.24"
#|
library(gtsummary)
on18 %>%
tbl_cross(Social_Use2, Primary_media, percent="column")
names(on18)
on18 %>%
pivot_longer(ends_with("_like"))
on18 %>%
select(ends_with("_like"))
on18 %>%
pivot_longer(ends_with("_like"))
on18 %>%
pivot_longer(ends_with("_like"), names_to="Party", values_to="Score") %>%
group_by(Party) %>%
summarize(SD=sd(Score, na.rm=T))
on18 %>%
pivot_longer(ends_with("_like"), names_to="Party", values_to="Score") %>%
group_by(Party, Primary_media) %>%
summarize(SD=sd(Score, na.rm=T))
on18 %>%
pivot_longer(ends_with("_like"), names_to="Party", values_to="Score") %>%
group_by(Party, Primary_media) %>%
summarize(SD=sd(Score, na.rm=T)) %>%
ggplot(., aes(x=SD, y=Party))+geom_point()+facet_wrap(~Primary_media)
on18 %>%
pivot_longer(ends_with("_like"), names_to="Party", values_to="Score") %>%
group_by(Party, Primary_media) %>%
summarize(SD=sd(Score, na.rm=T)) %>%
ggplot(., aes(x=SD, y=Primary_media))+geom_point()+facet_wrap(~Party)
on18 %>%
pivot_longer(ends_with("_like"), names_to="Party", values_to="Score") %>%
group_by(Party, Primary_media) %>%
summarize(SD=sd(Score, na.rm=T)) %>%
ggplot(., aes(x=SD, y=Primary_media, col=Party))+geom_point()+scale_col_manual(values=c("green", "red", "orange", "darkblue"))
on18 %>%
pivot_longer(ends_with("_like"), names_to="Party", values_to="Score") %>%
group_by(Party, Primary_media) %>%
summarize(SD=sd(Score, na.rm=T)) %>%
ggplot(., aes(x=SD, y=Primary_media, col=Party))+geom_point()+scale_color_manual(values=c("green", "red", "orange", "darkblue"))
on18 %>%
pivot_longer(contains("partyeval"), names_to="Party", values_to="Score") %>%
group_by(Party, Primary_media) %>%
summarize(SD=sd(Score, na.rm=T)) %>%
ggplot(., aes(x=SD, y=Primary_media, col=Party))+geom_point()+scale_color_manual(values=c("green", "red", "orange", "darkblue"))
?rescale
on18 %>%
pivot_longer(ends_with("_like"), names_to="Party", values_to="Score") %>%
mutate(Score=scales::rescale(Score,to=c(0,100) ))
on18 %>%
pivot_longer(ends_with("_like"), names_to="Party", values_to="Score") %>%
mutate(Score=scales::rescale(Score,to=c(0,100) )) %>%
group_by(Party, Primary_media) %>%
summarize(SD=sd(Score, na.rm=T)) %>%
ggplot(., aes(x=SD, y=Primary_media, col=Party))+geom_point()+scale_color_manual(values=c("green", "red", "orange", "darkblue"))
#| label: fig-affective-polarization-sd-social-media
on18 %>%
pivot_longer(ends_with("_like"), names_to="Party", values_to="Score") %>%
mutate(Score=scales::rescale(Score,to=c(0,100) )) %>%
group_by(Party, Social_Use2) %>%
summarize(SD=sd(Score, na.rm=T)) %>%
ggplot(., aes(x=SD, y=Social_Use2, col=Party))+geom_point()+scale_color_manual(values=c("green", "red", "orange", "darkblue"))
