on18 %>%
filter(if_any(contains("irv"), ~.==0))
on18 %>%
mutate(straightliner=case_when(
irv_party==0~ 1,
irv_agreement==0~1,
irv_spending==0~1,
irv_leader==0~1,
TRUE~0
))->on18
table(on18$straightliner)
for(i in 1:length(COVARS)){
data <- on18 |> filter(straightliner == 0)
WAP_primary_media[[i]] <-  lm_robust(reformulate(c("Primary_Media", COVARS[1:i]),
response = "WAP_sd"), data = data, se_type = "HC0")
}
#### Primary News Source ####
#Create a variable that classifies individuals based on the primary media type they use
on18 %>%
mutate(Primary_media=case_when(
(primarynews_7 == 1 | primarynews_6 == 1) & (primarynews_5 == 0 & primarynews_4 == 0 & primarynews_3 == 0 & primarynews_2 == 0 & primarynews_1 == 0) ~ "Social_Media", #For individuals who only use Social Media
(primarynews_4 == 1 | primarynews_5 == 1) & (primarynews_6 == 0 & primarynews_7 == 0 & primarynews_3 == 0 & primarynews_2 == 0 & primarynews_1 == 0) ~ "Online", #For individuals who only use online sources that are not social media
(primarynews_3 == 1 | primarynews_2 == 1 | primarynews_1 == 1) & (primarynews_5 == 0 & primarynews_4 == 0 & primarynews_6 == 0 & primarynews_7 == 0) ~ "Legacy", #For individuals who only receive news from television or newspapers
TRUE ~ "Mixed"
))->on18
table(on18$Primary_)
on18 %>%
select(unsg:nhse) %>%
glimpse()
#This prints the variable labels of each item to see what each measures
on18 %>%
select(unsg:nhse) %>%
var_label()
#this prints the value lablels to see what each value label contains
on18 %>%
select(unsg:nhse) %>%
val_labels()
on18 %>%
mutate(
across(.cols=unsg:nhse,
binaryrecode, #recode function from 0_functions
.names="{.col}_correct")
)->on18
on18 %>%
select(ends_with("_correct"))
lookfor(on18, "seats in the House of Commons")
#political knowledge variable
on18$pol_knowledge <- (on18$unsg_correct + on18$financename_correct +
on18$ggname_correct + on18$nhse_correct)/4
table(on18$pol_knowledge)
# Defensive coding for political knowledge variable
on18 %>%
ggplot(., aes(x=pol_knowledge))+geom_histogram()
on18 %>%
select(ends_with("correct")| "pol_knowledge") #%>%
#View()
on18$pol_knowledge
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(pol_knowledge, na.rm = T), sd = sd(pol_knowledge, na.rm = T))
stopifnot((isTRUE(all.equal(on18$pol_knowledge,
((on18$unsg_correct + on18$financename_correct +
on18$ggname_correct + on18$nhse_correct)/4))))) #Check to ensure the math is correct
#### POLARIZATION MEASURES ####
#### policy polarization ####
on18$climate_views <- (on18$climate_bin + on18$paris_bin)/2
#create a dataframe with all the policies
on18 %>%
select(starts_with("agreement_"))-> policies
#rename policies with more descriptive names
policy_names <- c("help_racial_minorities", "help_women", "more_coporate_tax", "more_personal_tax", "private_health_care",
"minimum_wage_to_high_prices", "income_inequality", "business_benefits_everyone",
"drug_benefit_u25", "free_post_secondary", "inappropriate_sex_ed")
names(policies)<-policy_names
#recombine
policies <- mutate_all(policies, \(x) as.numeric(as.character(x)))
policies <- range01(policies, na.rm = T)
on18 <- policies %>%
bind_cols(., on18)
policies %>%
bind_cols(., on18$Social_Use2)->policies_social_use
names(policies_social_use)<-c(policy_names, "Social_Use2")
#Create Policy Polarization Distribution
on18$agreement_1
#Recode policy polarization variables so that 0 represents the most left-wing position and 1 represents the most right-wing position
on18 <- on18 %>%
mutate(
lr_private_health_care = case_match(private_health_care,
0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA),
Lr_minimum_wage_to_high_prices = case_match(minimum_wage_to_high_prices,
0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA),
lr_business_benefits_everyone = case_match(business_benefits_everyone,
0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA),
lr_inappropriate_sex_ed = case_match(inappropriate_sex_ed,
0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA)
)
#Create a variable for the policy positions of all individuals
on18 <- on18 %>%
mutate(policy_polarization = (help_racial_minorities + help_women + more_coporate_tax +
more_personal_tax + income_inequality + drug_benefit_u25 + free_post_secondary +
lr_private_health_care + Lr_minimum_wage_to_high_prices + lr_business_benefits_everyone +
lr_inappropriate_sex_ed))
on18$partyvote2018
#legacy primary media - left-wing
policy_left_legacy <- on18 %>%
filter(Primary_media == "Legacy" & (partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
#online primary media - left-wing
policy_left_online <- on18 %>%
filter(Primary_media == "Online" & (partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
#social media primary media - left-wing
policy_left_social_media <- on18 %>%
filter(Primary_media == "Social_Media" & (partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
#mixed primary media - left-wing
policy_left_mixed <- on18 %>%
filter(Primary_media == "Mixed" & (partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
#legacy primary media - right-wing
policy_conservatives_legacy <- on18 %>%
filter(Primary_media == "Legacy" & partyvote2018 == 2) %>%
select(policy_polarization)
#online primary media - right-wing
policy_conservatives_online <- on18 %>%
filter(Primary_media == "Online" & partyvote2018 == 2) %>%
select(policy_polarization)
#social media primary media - right-wing
policy_conservatives_media <- on18 %>%
filter(Primary_media == "Social_Media" & partyvote2018 == 2) %>%
select(policy_polarization)
# mixed primary media - right-wing
policy_conservatives_mixed <- on18 %>%
filter(Primary_media == "Mixed" & partyvote2018 == 2) %>%
select(policy_polarization)
unique(on18$Social_Use)
# High social use - left-wing
policy_left_often <- on18 %>%
filter((Social_Use2 == "Several times a day" |
Social_Use2 == "About once a day" |
Social_Use2 == "Several times a week" |
Social_Use2 == "About once a week"  |
Social_Use2 == "Several times a month") &
(partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
# low social use - left-wing
policy_left_rarely <- on18 %>%
filter((Social_Use2 == "Several times in a year" |
Social_Use2 == "Never" |
Social_Use2 == "About once a month") &
(partyvote2018 == 1 | partyvote2018 == 3)) %>%
select(policy_polarization)
on18$partyvote2018
# high social use - right-wing
policy_conservative_often <- on18 %>%
filter((Social_Use2 == "Several times a day" |
Social_Use2 == "About once a day" |
Social_Use2 == "Several times a week" |
Social_Use2 == "About once a week" |
Social_Use2 == "Several times a month") & partyvote2018 == 2) %>%
select(policy_polarization)
# low social use - right-wing
policy_conservative_social_rarely <- on18 %>%
filter((Social_Use2 == "Several times in a year" |
Social_Use2 == "Never" |
Social_Use2 == "About once a month" ) & partyvote2018 == 2) %>%
select(policy_polarization)
### Primary media
bimodalities <- on18 %>%
select(c(Primary_media, policy_polarization)) %>%
rename("mt_id" = "policy_polarization", "Condition" = "Primary_media") %>%
list(data = .)
# primary media legacy
policy_legacy <- on18 %>%
filter(Primary_media == "Legacy") %>%
select(policy_polarization)
# primary media online
policy_online <- on18 %>%
filter(Primary_media == "Online") %>%
select(policy_polarization)
#primary media social media
policy_social_media <- on18 %>%
filter(Primary_media == "Social_Media") %>%
select(policy_polarization)
#primary media mixed
policy_mixed <- on18 %>%
filter(Primary_media == "Mixed") %>%
select(policy_polarization)
#high social use
policy_often <- on18 %>%
filter((Social_Use2 == "Several times a day" |
Social_Use2 == "About once a day" |
Social_Use2 == "Several times a week" |
Social_Use2 == "About once a week"  |
Social_Use2 == "Several times a month")) %>%
select(policy_polarization)
# low social use
policy_rarely <- on18 %>%
filter((Social_Use2 == "Several times in a year" |
Social_Use2 == "Never" | Social_Use2 == "About once a month")) %>%
select(policy_polarization)
bimodality_coefficient(policy_often, na.rm = T)
bimodality_coefficient(policy_rarely, na.rm = T)
#Extract feelings towards parties scores
on18 %>%
select(starts_with("partyeval")) %>%
glimpse()
# so it looks like I took the step sometime of
# scaling these variables to 0 and 1, and they end in
# _out.
on18 %>%
select(starts_with("partyeval")) %>%
summary()
#Looks like the originals run from 0 to 5
on18 %>%
select(starts_with("partyeval")) %>%
val_labels()
on18 %>%
select(starts_with("partyeval")) %>%
var_label()
on18 %>%
select(id,starts_with("partyeval")&ends_with("out"))->affect
names(affect)
source("~/Documents/Stats/Ontario_2018/Code/1_load_on18.R", echo=TRUE)
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
affect_pol_cal_wt %>%
group_by(id) %>%
summarise(WAP = sum(like_mean_wt)) -> WAP_scores
affect_wt$Green_Like_wt <- (affect$Green_Like * 0.046)
affect_wt$Green_Like_wt <- (affect$Green_Like * 0.046)
#Create a new dataset for the weighted score
affect_wt <- affect
#For each respondent, we will need an average like for the parties
# This is mean(like)_i
#So we need to effectively calculate a mean for each row.
#Each row is one R.
affect %>%
rowwise() %>%
mutate(mean_like=mean(c_across(2:5), na.rm=T))->affect
affect_pol_cal <- affect %>%
pivot_longer(cols = !c(id, mean_like),
names_to = "Party",
values_to = "Party_like_score")
affect_pol_cal
affect_pol_cal$like_mean <- (affect_pol_cal$Party_like_score - affect_pol_cal$mean_like)^2
affect_pol_cal %>%
group_by(id) %>%
summarise(Soc_dis = sum(like_mean)) -> Soc_dis_scores
Soc_dis_scores$Soc_dis <- sqrt(Soc_dis_scores$Soc_dis/4)
full_join(on18, Soc_dis_scores, by = join_by(id)) -> on18
affect_wt$Green_Like_wt <- (affect$Green_Like * 0.046)
affect_wt$PC_Like_wt <- (affect$PC_Like * 0.405)
affect_wt$Green_Like_wt <- (affect$Green_Like * 0.046)
affect_wt$Green_Like_wt
affect$Green_Like
affect
affect %>%
rename(Green_Like=2, Liberal_Like=3, NDP_Like=4, PC_Like=5)->affect
on18 %>%
select(id,starts_with("partyeval")&ends_with("out"))->affect
names(affect)
affect %>%
rename(Green_Like=2, Liberal_Like=3, NDP_Like=4, PC_Like=5)->affect
#Create a new dataset for the weighted score
affect_wt <- affect
#For each respondent, we will need an average like for the parties
# This is mean(like)_i
#So we need to effectively calculate a mean for each row.
#Each row is one R.
affect %>%
rowwise() %>%
mutate(mean_like=mean(c_across(2:5), na.rm=T))->affect
affect_pol_cal <- affect %>%
pivot_longer(cols = !c(id, mean_like),
names_to = "Party",
values_to = "Party_like_score")
affect_pol_cal
affect_pol_cal$like_mean <- (affect_pol_cal$Party_like_score - affect_pol_cal$mean_like)^2
affect_pol_cal %>%
group_by(id) %>%
summarise(Soc_dis = sum(like_mean)) -> Soc_dis_scores
Soc_dis_scores$Soc_dis <- sqrt(Soc_dis_scores$Soc_dis/4)
full_join(on18, Soc_dis_scores, by = join_by(id)) -> on18
affect_wt$Green_Like_wt <- (affect$Green_Like * 0.046)
affect_wt$PC_Like_wt <- (affect$PC_Like * 0.405)
affect_wt$Liberal_Like_wt <- (affect$Liberal_Like * 0.196)
affect_wt$NDP_Like_wt <- (affect$NDP_Like * 0.336)
affect_wt %>%
rowwise() %>%
mutate(mean_like=mean(c_across(6:9), na.rm=T))->affect_wt
affect_pol_cal_wt <- affect_wt %>%
select(., !(6:9)) %>%
pivot_longer(cols = !c(id, mean_like),
names_to = "Party",
values_to = "Party_like_score")
affect_pol_cal_wt %>%
mutate(vote_share=case_when(Party == "Green_Like" ~ 0.046, Party == "Liberal_Like" ~ 0.196, Party == "NDP_Like" ~ 0.336,
Party == "PC_Like" ~ 0.405
)) -> affect_pol_cal_wt
affect_pol_cal_wt$like_mean <- (affect_pol_cal_wt$Party_like_score - affect_pol_cal_wt$mean_like)^2
affect_pol_cal_wt$like_mean_wt <- (affect_pol_cal_wt$like_mean * affect_pol_cal_wt$vote_share)
affect_pol_cal_wt %>%
group_by(id) %>%
summarise(WAP = sum(like_mean_wt)) -> WAP_scores
WAP_scores$WAP <- sqrt(WAP_scores$WAP)
full_join(on18, WAP_scores, by = join_by(id)) -> on18
on18 <- on18 %>%
mutate(
WAP_sd = as.numeric(scale(WAP))
)
on18 %>%
group_by(Primary_media) %>%
summarise(mean = mean(pointerst_ONint, na.rm = T), sd = sd(pointerst_ONint, na.rm = T))
#### Primary News Source ####
#Create a variable that classifies individuals based on the primary media type they use
on18 %>%
mutate(Primary_media=case_when(
(primarynews_7 == 1 | primarynews_6 == 1) & (primarynews_5 == 0 & primarynews_4 == 0 & primarynews_3 == 0 & primarynews_2 == 0 & primarynews_1 == 0) ~ "Social_Media", #For individuals who only use Social Media
(primarynews_4 == 1 | primarynews_5 == 1) & (primarynews_6 == 0 & primarynews_7 == 0 & primarynews_3 == 0 & primarynews_2 == 0 & primarynews_1 == 0) ~ "Online", #For individuals who only use online sources that are not social media
(primarynews_3 == 1 | primarynews_2 == 1 | primarynews_1 == 1) & (primarynews_5 == 0 & primarynews_4 == 0 & primarynews_6 == 0 & primarynews_7 == 0) ~ "Legacy", #For individuals who only receive news from television or newspapers
TRUE ~ "Mixed"
))->on18
for(i in 1:length(COVARS)){
data <- on18 |> filter(straightliner == 0)
WAP_primary_media[[i]] <-  lm_robust(reformulate(c("Primary_Media", COVARS[1:i]),
response = "WAP_sd"), data = data, se_type = "HC0")
}
on18 %>%
mutate(straightliner=case_when(
irv_party==0~ 1,
irv_agreement==0~1,
irv_spending==0~1,
irv_leader==0~1,
TRUE~0
))->on18
on18 %>%
select(matches("partyeval_[0-9]$")) %>%
irv(.)->irv_party
on18$irv_party<-irv_party
on18 %>%
filter(irv_party==0)
on18 %>%
select(matches("leader_[0-9]$")) %>%
irv(.)->irv_leader
on18$irv_leader<-irv_leader
on18 %>%
filter(irv_party==0|irv_leader==0)
lookfor(on18, "taxes")
on18 %>%
select(matches("^agreement_[0-9]$")) %>%
irv(.)->irv_agreement
on18$irv_agreement<-irv_agreement
lookfor(on18, "spend")
on18 %>%
select(matches("^spending_[0-9]$")) %>%
irv(.)->irv_spending
on18$irv_spending<-irv_spending
on18 %>%
filter(if_any(contains("irv"), ~.==0))
on18 %>%
mutate(straightliner=case_when(
irv_party==0~ 1,
irv_agreement==0~1,
irv_spending==0~1,
irv_leader==0~1,
TRUE~0
))->on18
table(on18$straightliner)
for(i in 1:length(COVARS)){
data <- on18 |> filter(straightliner == 0)
WAP_primary_media[[i]] <-  lm_robust(reformulate(c("Primary_Media", COVARS[1:i]),
response = "WAP_sd"), data = data, se_type = "HC0")
}
#### Primary News Source ####
#Create a variable that classifies individuals based on the primary media type they use
on18 %>%
mutate(Primary_media=case_when(
(primarynews_7 == 1 | primarynews_6 == 1) & (primarynews_5 == 0 & primarynews_4 == 0 & primarynews_3 == 0 & primarynews_2 == 0 & primarynews_1 == 0) ~ "Social_Media", #For individuals who only use Social Media
(primarynews_4 == 1 | primarynews_5 == 1) & (primarynews_6 == 0 & primarynews_7 == 0 & primarynews_3 == 0 & primarynews_2 == 0 & primarynews_1 == 0) ~ "Online", #For individuals who only use online sources that are not social media
(primarynews_3 == 1 | primarynews_2 == 1 | primarynews_1 == 1) & (primarynews_5 == 0 & primarynews_4 == 0 & primarynews_6 == 0 & primarynews_7 == 0) ~ "Legacy", #For individuals who only receive news from television or newspapers
TRUE ~ "Mixed"
))->on18
for(i in 1:length(COVARS)){
data <- on18 |> filter(straightliner == 0)
WAP_primary_media[[i]] <-  lm_robust(reformulate(c("Primary_Media", COVARS[1:i]),
response = "WAP_sd"), data = data, se_type = "HC0")
}
reformulate(c("Primary_Media", COVARS[1:i]),
response = "WAP_sd")
#### Primary News Source ####
#Create a variable that classifies individuals based on the primary media type they use
on18 %>%
mutate(Primary_media=case_when(
(primarynews_7 == 1 | primarynews_6 == 1) & (primarynews_5 == 0 & primarynews_4 == 0 & primarynews_3 == 0 & primarynews_2 == 0 & primarynews_1 == 0) ~ "Social_Media", #For individuals who only use Social Media
(primarynews_4 == 1 | primarynews_5 == 1) & (primarynews_6 == 0 & primarynews_7 == 0 & primarynews_3 == 0 & primarynews_2 == 0 & primarynews_1 == 0) ~ "Online", #For individuals who only use online sources that are not social media
(primarynews_3 == 1 | primarynews_2 == 1 | primarynews_1 == 1) & (primarynews_5 == 0 & primarynews_4 == 0 & primarynews_6 == 0 & primarynews_7 == 0) ~ "Legacy", #For individuals who only receive news from television or newspapers
TRUE ~ "Mixed"
))->on18
on18$Primary_media
for(i in 1:length(COVARS)){
data <- on18 |> filter(straightliner == 0)
WAP_primary_media[[i]] <-  lm_robust(reformulate(c("Primary_Media", COVARS[1:i]),
response = "WAP_sd"), data = data, se_type = "HC0")
}
data$data
data$Primary_Media
data$Primary_media
for(i in 1:length(COVARS)){
data <- on18 |> filter(straightliner == 0)
WAP_primary_media[[i]] <-  lm_robust(reformulate(c("Primary_media", COVARS[1:i]),
response = "WAP_sd"), data = data, se_type = "HC0")
}
on18 %>%
select(unsg:nhse) %>%
glimpse()
#This prints the variable labels of each item to see what each measures
on18 %>%
select(unsg:nhse) %>%
var_label()
#this prints the value lablels to see what each value label contains
on18 %>%
select(unsg:nhse) %>%
val_labels()
on18 %>%
mutate(
across(.cols=unsg:nhse,
binaryrecode, #recode function from 0_functions
.names="{.col}_correct")
)->on18
on18 %>%
select(ends_with("_correct"))
lookfor(on18, "seats in the House of Commons")
#political knowledge variable
on18$pol_knowledge <- (on18$unsg_correct + on18$financename_correct +
on18$ggname_correct + on18$nhse_correct)/4
table(on18$pol_knowledge)
for(i in 1:length(COVARS)){
data <- on18 |> filter(straightliner == 0)
WAP_primary_media[[i]] <-  lm_robust(reformulate(c("Primary_media", COVARS[1:i]),
response = "WAP_sd"), data = data, se_type = "HC0")
}
WAP_primary_media
modelsummary(WAP_primary_media, stars = T)
#Display Models
modelsummary(WAP_reg, stars = T, vcov = "HC0") #As numbers
for(i in 0:length(COVARS)){
data <- on18 |> filter(straightliner == 0)
WAP_primary_media[[i]] <-  lm_robust(reformulate(c("Primary_media", COVARS[1:i]),
response = "WAP_sd"), data = data, se_type = "HC0")
}
for(i in 0:length(COVARS)){
data <- on18 |> filter(straightliner == 0)
WAP_primary_media[[i]] <-  lm_robust(reformulate(c("Primary_media", COVARS[0:i]),
response = "WAP_sd"), data = data, se_type = "HC0")
}
WAP_primary_media
lm_robust(reformulate(c("Primary_media", COVARS[1:i]),
response = "WAP_sd"), data = data, se_type = "HC0")
WAP_reg[[1]] <- lm(WAP_sd ~ Primary_media, data = on18, na.action = na.omit);summary(WAP_reg[[1]])
WAP_graph[[1]] <- graph_regression(WAP_reg[[1]]); WAP_graph[[1]]
WAP_reg[[2]] <- lm(WAP_sd ~ Interest, data = on18, na.action = na.omit); summary(WAP_reg[[2]])
WAP_graph[[2]] <- graph_regression(WAP_reg[[2]]); WAP_graph[[2]]
WAP_reg[[3]] <- lm(WAP_sd ~ Interest + Primary_media, data = on18, na.action = na.omit); summary(WAP_reg[[3]])
WAP_graph[[3]] <- graph_regression(WAP_reg[[3]]); WAP_graph[[3]]
WAP_reg[[4]] <- lm(WAP_sd ~ Interest + Primary_media + age3, data = on18, na.action = na.omit); summary(WAP_reg[[4]])
WAP_graph[[4]] <- graph_regression(WAP_reg[[4]]); WAP_graph[[4]]
WAP_reg[[5]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree, data = on18, na.action = na.omit); summary(WAP_reg[[5]])
WAP_graph[[5]] <- graph_regression(WAP_reg[[5]]); WAP_graph[[5]]
WAP_reg[[6]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree + income3, data = on18, na.action = na.omit); summary(WAP_reg[[6]])
WAP_graph[[6]] <- graph_regression(WAP_reg[[6]]); WAP_graph[[6]]
WAP_reg[[7]] <- lm(WAP_sd ~ Interest + Primary_media + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit); summary(WAP_reg[[7]])
WAP_graph[[7]] <- graph_regression(WAP_reg[[7]]); WAP_graph[[7]]
WAP_Interact <- lm(WAP_sd ~ Primary_media*Interest, data = on18, na.action = na.omit)
summary(WAP_Interact)
modelsummary(WAP_primary_media, stars = T)
lm_robust(reformulate(c("Primary_media", COVARS[1:i]),
response = "WAP_sd"), data = data, se_type = "HC0")
lm_robust(reformulate(c("Primary_media"),
response = "WAP_sd"), data = data, se_type = "HC0")
on18 %>%
rowwise() %>%
sum(primarynews_1:primarynews_2)
on18 %>%
rowwise() %>%
mutate(number_of_legacy_sources = sum(primarynews_1:primarynews_3, na.rm = T))
on18<- on18 %>%
rowwise() %>%
mutate(number_of_legacy_sources = sum(primarynews_1:primarynews_3, na.rm = T))
table(on18$number_of_legacy_sources)
table(on18$primarynews_1, on18$primarynews_2)
on18 <- on18 %>%
mutate(number_of_legacy_sources = primarynews_1 + primarynews_2 + primarynews_3)
table(on18$number_of_legacy_sources)
on18$primarynews_1
media_Sources_by_primarymedia <- on18 %>%
group_by(Primary_media) %>%
summarise(across(CBCTV:HuffingtonPostonline, \(x)mean(x))) %>%
filter(Primary_media == "Online") %>%
pivot_longer(cols = 2:22)
#see the most read sources for online news users
media_Sources_by_primarymedia %>%
ggplot(aes(y = name, x = value)) + geom_point()
media_Sources_by_primarymedia <- on18 %>%
group_by(Primary_media) %>%
summarise(across(CBCTV:HuffingtonPostonline, \(x)mean(x))) %>%
pivot_longer(cols = 2:22)
media_Sources_by_primarymedia
View(on18)
on18 <- on18 %>%
filter(Primary_media == "legacy") %>%
rowwise() %>%
mutate(number_of_legacy = sum(c(CBCTV:CityTV, GlobeandMail:Otherlocalnewspaper)))
