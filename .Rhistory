#And I want y to be the Social Media Use
#You did this lower down with coord_flip()
#Which is an old way of switching x and y.
#Now, however, ggplot() lets you just specify whichever
# one you want to be horizontal and vertical with x and y
y = Social_Use2,
colour = Social_Use2)) +
geom_point()+
# geom_errorbar(aes (ymin = 0 - Standard_Deviation, ymax = 0 + Standard_Deviation), width =.2,
#position = position_dodge(.8)) +
facet_wrap(~Policy_Issue, labeller = label_wrap_gen(width=30)) +
labs(x = "Standard Deviation", y= "Social Media Use") +
theme_bw()  +
theme(axis.text.y=element_blank(),
axis.ticks.y = element_blank(),
#I actually don't like the legend on the bottom for this reason.
# We actually have a categorical variable (Social_Use2)
# That has an intuitive order to it, never to a lot
# I would like to capture that order in a legend that goes from low tohigh
#But I am going to uncomment poutting the legend in the bottom.
# legend.position ="bottom",
strip.text = element_text(size=8))+
# guides(colour = guide_legend(nrow = 3, byrow = T, title.position = "top", hjust = 0.5, reverse = T), linetype = guide_legend(nrow = 3, byrow = T, title.position = "top", hjust = 0.5, reverse = T)) +
#But this introduces a new problem which is that the
# Category "never" is at the top of the legend
#Try making the graph, stopping the code at line 176
# by deleting the +
#Then add it back in and see the difference
guides(color=guide_legend(reverse=T))->policy_issue_sd_graph
#scale_colour_manual(guide=guide_legend(reverse=T))
# scale_linetype_manual(values = c("twodash","twodash","longdash", "longdash", "dashed", "dashed", "solid", "solid")) -> policy_issue_sd_graph
ggsave(plot = policy_issue_sd_graph, "Plots/policy_issues_sd.png", width = 12, height = 7)
policies_media_down %>%
filter(complete.cases(.)) %>%
ggplot(., aes(x = Standard_Deviation,
y = Primary_media,
colour = Primary_media)) +
geom_point()+
facet_wrap(~Policy_Issue, labeller = label_wrap_gen(width=30)) +
labs(x = "Standard Deviation", y= "Primary Media Source") +
theme_bw()  +
theme(axis.text.y=element_blank(),
axis.ticks.y = element_blank(),
strip.text = element_text(size=8))+
guides(color=guide_legend(reverse=T))
#### Affective Polarization ####
# We need the party feeling scores
on18 %>%
select(starts_with("partyeval")) %>%
glimpse()
# so it looks like I took the step sometime of
# scaling these variables to 0 and 1, and they end in
# _out.
on18 %>%
select(starts_with("partyeval")) %>%
summary()
#Looks like the originals run from 0 to 5
on18 %>%
select(starts_with("partyeval")) %>%
val_labels()
on18 %>%
select(starts_with("partyeval")) %>%
var_label()
#Looks like 4 is Green
# 1 is Liberal
# 3 is NDP
# 2 isPC
# 0 is Really dislike and 5 is really like.
#Let's use the _out ones.
on18 %>%
select(id,starts_with("partyeval")&ends_with("out"))->affect
names(affect)
affect %>%
rename(Green_Like=2, Liberal_Like=3, NDP_Like=4, PC_Like=5)->affect
affect_wt <- affect
#For each respondent, we will need an average like for the parties
# This is mean(like)_i
#So we need to effectively calculate a mean for each row.
#Each row is one R.
affect %>%
rowwise() %>%
mutate(mean_like=mean(c_across(2:5), na.rm=T))->affect
#Now we need to take each R's like score for each party
# And subtract the mean from it.
#my guit is that we should pivot this down
#Could you:
# 1) pivot down the party like scores (not the respondent id)
# and not the mean like
affect_pol_cal <- affect %>%
pivot_longer(cols = !c(id, mean_like),
names_to = "Party",
values_to = "Party_like_score")
# 2) Then, in my mind's eye, we will have a column
# of party like scores and a column of mean like values
# It should be easy to just subtract the mean like column
affect_pol_cal
affect_pol_cal$like_mean <- (affect_pol_cal$Party_like_score - affect_pol_cal$mean_like)^2
# From the party like scores.
# 3) Then squre that last column
affect_pol_cal %>%
group_by(id) %>%
summarise(Soc_dis = sum(like_mean)) -> Soc_dis_scores
Soc_dis_scores$Soc_dis <- sqrt(Soc_dis_scores$Soc_dis/4)
# 4) Then we should just sum those up for each respondent.
full_join(on18, Soc_dis_scores, by = join_by(id)) -> on18
#Check this out
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(Soc_dis, na.rm = T), sd = sd(Soc_dis, na.rm = T), n=n(), se=sd/sqrt(n))->mean_affect_scores
mean_affect_scores %>%
filter(complete.cases(.)) %>%
ggplot(., aes(x = mean,
y = Social_Use2,
colour = Social_Use2)) +
geom_point()+
geom_errorbar(aes (xmin = mean - (1.96*se), xmax = mean + (1.96*se)), width =.2) +
labs(x = "Mean", y= "Social Media Use") +
theme_bw()  +
theme(axis.text.y=element_blank(),
axis.ticks.y = element_blank(),
strip.text = element_text(size=8))+
guides(color=guide_legend(reverse=T))+xlim(c(0,0.5)) -> affect_scores_social_use
affect_scores_social_use
on18 %>%
group_by(Primary_media) %>%
summarise(mean = mean(Soc_dis, na.rm = T), sd = sd(Soc_dis, na.rm = T))
#### Weighted Affective Polarization (WAP) Scores ####
affect_wt$Green_Like_wt <- (affect$Green_Like * 0.046)
affect_wt$PC_Like_wt <- (affect$PC_Like * 0.405)
affect_wt$Liberal_Like_wt <- (affect$Liberal_Like * 0.196)
affect_wt$NDP_Like_wt <- (affect$NDP_Like * 0.336)
affect_wt %>%
rowwise() %>%
mutate(mean_like=mean(c_across(6:9), na.rm=T))->affect_wt
affect_pol_cal_wt <- affect_wt %>%
select(., !(6:9)) %>%
pivot_longer(cols = !c(id, mean_like),
names_to = "Party",
values_to = "Party_like_score")
affect_pol_cal_wt %>%
mutate(vote_share=case_when(Party == "Green_Like" ~ 0.046, Party == "Liberal_Like" ~ 0.196, Party == "NDP_Like" ~ 0.336,
Party == "PC_Like" ~ 0.405
)) -> affect_pol_cal_wt
affect_pol_cal_wt$like_mean <- (affect_pol_cal_wt$Party_like_score - affect_pol_cal_wt$mean_like)^2
affect_pol_cal_wt$like_mean_wt <- (affect_pol_cal_wt$like_mean * affect_pol_cal_wt$vote_share)
affect_pol_cal_wt %>%
group_by(id) %>%
summarise(WAP = sum(like_mean_wt)) -> WAP_scores
WAP_scores$WAP <- sqrt(WAP_scores$WAP)
full_join(on18, WAP_scores, by = join_by(id)) -> on18
on18 %>%
group_by(Primary_media) %>%
summarise(mean = mean(pointerst_ONint, na.rm = T), sd = sd(pointerst_ONint, na.rm = T))
on18 %>%
group_by(Social_Use2) %>%
summarise(mean = mean(WAP, na.rm = T), sd = sd(WAP, na.rm = T))
WAP_scores
WAP_scores$WAP <- sqrt(WAP_scores$WAP)
WAP_scores$WAP
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
interact_help_racial_minorities
modelsummary(mods_interact$lm_mod, stars=T)
summary(WAP_Interact)
WAP_Interact_graph
mods_media <- policies_social_use_sd_dis2_down %>%
group_by(Policy_Issue) %>%
summarise(lm_mod = list(lm(distance ~ Primary_Media))) %>%
mutate(tidied = map(lm_mod, tidy, conf.int = T))
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
mods_media
mods_media[[2]]
vc_media <- hccm(mods_media[[2]])
vc_media <- hccm(mods_media[[2, 1]])
mods_media[[2, 1]]
mods_media[[2, 2]]
vc_media <- hccm(mods_media[[2, 2]])
mods_media[[3]]
vc_media <- hccm(mods_media[[3]])
vc_WAP_primarymedia <- hccm(WAP_primarymedia)
se_corrected_WAP_primarymedia <- sqrt(diag(vc_WAP_primarymedia))
se_corrected_WAP_primarymedia
summary(WAP_primarymedia)
mods_Interest %>%
unnest(tidied) %>%
filter(term!="(Intercept)") %>%
ggplot(aes(x = estimate, y = term)) + geom_point() +
geom_linerange(aes(xmin=conf.low, xmax = conf.high), position = position_dodge(width=.75)) +
facet_wrap(~Policy_Issue, labeller = label_wrap_gen(width=30)) + geom_vline(xintercept = 0) + theme_bw()
##Load needed scripts to complete analyses
source("Code/1_load_on18.R")
source("Code/0_functions.R")
mods_Interest %>%
unnest(tidied) %>%
filter(term!="(Intercept)") %>%
ggplot(aes(x = estimate, y = term)) + geom_point() +
geom_linerange(aes(xmin=conf.low, xmax = conf.high), position = position_dodge(width=.75)) +
facet_wrap(~Policy_Issue, labeller = label_wrap_gen(width=30)) + geom_vline(xintercept = 0) + theme_bw()
mods_media %>%
unnest(tidied) %>%
filter(term!="(Intercept)") %>%
ggplot(aes(x = estimate, y = term)) + geom_point() +
geom_linerange(aes(xmin=conf.low, xmax = conf.high), position = position_dodge(width=.75)) +
facet_wrap(~Policy_Issue, labeller = label_wrap_gen(width=30)) + geom_vline(xintercept = 0) + theme_bw()
mods_all %>%
unnest(tidied) %>%
filter(term!="(Intercept)") %>%
ggplot(aes(x = estimate, y = term)) + geom_point() +
geom_linerange(aes(xmin=conf.low, xmax = conf.high), position = position_dodge(width=.75)) +
facet_wrap(~Policy_Issue, labeller = label_wrap_gen(width=30)) + geom_vline(xintercept = 0) + theme_bw()
ggsave("Plots/interaction_models.png", plot = interaction_models)
interaction_models
WAP_Interest_Graph <- graph_regression(WAP_Interest); WAP_Interest_Graph
WAP_Interest_Graph <- graph_regression(WAP_Interest); WAP_Interest_Graph
WAP_primarymedia_graph <- graph_regression(WAP_primarymedia); WAP_primarymedia_graph
WAP_Interact <- lm(WAP ~ Primary_media+Interest, data = on18, na.action = na.omit)
summary(WAP_Interact)
WAP_Interact <- lm(WAP ~ Primary_media+Interest, data = on18, na.action = na.omit)
summary(WAP_Interact)
WAP_Interact <- lm(WAP ~ Primary_media + Interest, data = on18, na.action = na.omit)
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
WAP_Interact <- lm(WAP ~ Primary_media + Interest, data = on18, na.action = na.omit)
summary(WAP_Interact)
lm(WAP ~ Social_Use2, data = on18, na.action = na.omit)
summary(lm(WAP ~ Social_Use2, data = on18, na.action = na.omit))
mods_all %>%
unnest(tidied) %>%
filter(term!="(Intercept)") %>%
ggplot(aes(x = estimate, y = term)) + geom_point() +
geom_linerange(aes(xmin=conf.low, xmax = conf.high), position = position_dodge(width=.75)) +
facet_wrap(~Policy_Issue, labeller = label_wrap_gen(width=30)) + geom_vline(xintercept = 0) + theme_bw()
graph_regression(WAP_Interact)
mods_media %>%
unnest(tidied) %>%
filter(term!="(Intercept)") %>%
ggplot(aes(x = estimate, y = term)) + geom_point() +
geom_linerange(aes(xmin=conf.low, xmax = conf.high), position = position_dodge(width=.75)) +
facet_wrap(~Policy_Issue, labeller = label_wrap_gen(width=30)) + geom_vline(xintercept = 0) + theme_bw()
View(r)
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
mods_Interest %>%
unnest(tidied) %>%
filter(term!="(Intercept)") %>%
ggplot(aes(x = estimate, y = term)) + geom_point() +
geom_linerange(aes(xmin=conf.low, xmax = conf.high), position = position_dodge(width=.75)) +
facet_wrap(~Policy_Issue, labeller = label_wrap_gen(width=30)) + geom_vline(xintercept = 0) + theme_bw()
mods_media %>%
unnest(tidied) %>%
filter(term!="(Intercept)") %>%
ggplot(aes(x = estimate, y = term)) + geom_point() +
geom_linerange(aes(xmin=conf.low, xmax = conf.high), position = position_dodge(width=.75)) +
facet_wrap(~Policy_Issue, labeller = label_wrap_gen(width=30)) + geom_vline(xintercept = 0) + theme_bw()
mods_all %>%
unnest(tidied) %>%
filter(term!="(Intercept)") %>%
ggplot(aes(x = estimate, y = term)) + geom_point() +
geom_linerange(aes(xmin=conf.low, xmax = conf.high), position = position_dodge(width=.75)) +
facet_wrap(~Policy_Issue, labeller = label_wrap_gen(width=30)) + geom_vline(xintercept = 0) + theme_bw()
#Visualize the marginal effects from the interaction effects
WAP_Interact %>%
ggeffect(c("Interest", "Primary_media")) %>%
graph_interaction() -> WAP_Interact_graph; WAP_Interact_graph
WAP_primarymedia_graph <- graph_regression(WAP_primarymedia); WAP_primarymedia_graph
WAP_Interest_Graph <- graph_regression(WAP_Interest); WAP_Interest_Graph
ggarrange(plotlist = list(WAP_primarymedia_graph, WAP_Interest_Graph, WAP_Interact_graph))
lm(WAP ~ Social_Use2 + Primary_media, data = on18, na.action = na.omit) %>%
summary()
#Create regression models for policy polarization
on18$Social_Use2
lm(WAP ~ Social_Use2 + Primary_media, data = on18, na.action = na.omit) %>%
summary()
lm(WAP ~ Social_Use2, data = on18, na.action = na.omit) %>%
summary()
lm(WAP ~ Social_Use2 + Interest, data = on18, na.action = na.omit) %>%
summary()
lm(WAP ~ as.numeric(Social_Use2) + Interest, data = on18, na.action = na.omit) %>%
summary()
mods_media %>%
unnest(tidied) %>%
filter(term!="(Intercept)") %>%
ggplot(aes(x = estimate, y = term)) + geom_point() +
geom_linerange(aes(xmin=conf.low, xmax = conf.high), position = position_dodge(width=.75)) +
facet_wrap(~Policy_Issue, labeller = label_wrap_gen(width=30)) + geom_vline(xintercept = 0) + theme_bw()
mods_all %>%
unnest(tidied) %>%
filter(term!="(Intercept)") %>%
ggplot(aes(x = estimate, y = term)) + geom_point() +
geom_linerange(aes(xmin=conf.low, xmax = conf.high), position = position_dodge(width=.75)) +
facet_wrap(~Policy_Issue, labeller = label_wrap_gen(width=30)) + geom_vline(xintercept = 0) + theme_bw()
getwd()
setwd(~/Ontario_2018)
setwd("~/Ontario_2018")
setwd("./~/Ontario_2018")
setwd("./Ontario_2018")
setwd("../Ontario_2018")
setwd("../~/Ontario_2018")
addinslist:::addinslistAddin()
remotes::install_github("paleolimbot/rbbt")
It is often considered a forgone conclusion that social media usage is linked to increased levels of affective and policy polarization. Proponents of this idea argue that social media platforms create "echo chambers" or "filter bubbles" where users will only encounter ideas and policies that they already agree with @terrenEchoChambersSocial2021. Since the internet is a high choice media environment individuals can either choose to be exposed to diverse information or select media that reinforce their pre-existing opinions @duboisEchoChamberOverstated2018. On social media echo chambers occur because users shown ideologically agreeable materials as a result of these platforms' algorithms that show users content based on their past behaviour (Raynauld & Grennberg 2014). However, the empirical evidence supporting the existence of eco-chambers on social media has been mixed. Most studies in the United States find that Republicans and Democrats have similar media diets, both online and offline. Additionally, studies have found that there is some evidence that echo chambers exist on Twitter (now known as X) but not on Facebook. Notably, Terren et al. -@terrenEchoChambersSocial2021 found that studies that used digital trace evidence found more evidence of echo-chambers and polarization than studies that used self-reported data. For example, using Facebook trace evidence @bakshyExposureIdeologicallyDiverse2015 find that most users have Facebook friends who belong to the other party and that individuals are exposed to cross cutting content. They also find that individual choices, not algorithms, are what determine if an individual engages with opposing viewpoints.
on18$partyvote2018
source("Code/0_functions.R")
on18$help_racial_minorities
on18$help_women
- Strongly Agree (1), Agree, Disagree, Strongly Disagree (0); else NA
policies
on18 %>%
select(starts_with("agreement_"))-> policies
source("Code/0_functions.R")
##Load needed scripts to complete analyses
source("Code/1_load_on18.R")
on18 %>%
select(starts_with("agreement_"))-> policies
policy_names <- c("help_racial_minorities", "help_women", "more_coporate_tax", "more_personal_tax", "private_health_care",
"minimum_wage_to_high_prices", "income_inequality", "business_benefits_everyone",
"drug_benefit_u25", "free_post_secondary", "inappropriate_sex_ed")
names(policies)<-policy_names
#recombine
policies <- mutate_all(policies, function(x) as.numeric(as.character(x)))
range01 <- function(x, ...){(x-min(x, ...))/(max(x, ...)-min(x, ...))}
policies <- range01(policies, na.rm = T)
policies
policies %>%
bind_cols(., on18$Social_Use2)->policies_social_use
on18 <- policies %>%
bind_cols(., on18)
View(on18)
on18$help_racial_minorities
on18$partyvote2018
on18$help_racial_minorities
on18 <- on18 %>%
mutate(
lr_help_racial_minorities = case_match(help_racial_minorities, 0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA),
lr_help_women = case_match(help_women, 0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA),
lr_more_coporate_tax = case_match(more_coporate_tax, 0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA),
lr_more_personal_tax = case_match(more_personal_tax, 0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA),
lr_income_inequality = case_match(income_inequality, 0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA),
lr_drug_benefit_u25 = case_match(drug_benefit_u25, 0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA),
lr_free_post_secondary = case_match(free_post_secondary, 0 ~ 1, 0.25 ~ 0.75, 0.5 ~ 0.5, 0.75 ~ 0.25, 1 ~ 0, NA ~ NA)
)
?factanal
on18 %>%
dplyr::select(c(lr_help_racial_minorities:lr_free_post_secondary))
on18 %>%
dplyr::select(c(lr_help_racial_minorities:lr_free_post_secondary,
private_health_care, minimum_wage_to_high_prices, business_benefits_everyone,
inappropriate_sex_ed
))
on18 %>%
dplyr::select(c(lr_help_racial_minorities:lr_free_post_secondary,
private_health_care, minimum_wage_to_high_prices, business_benefits_everyone,
inappropriate_sex_ed
)) %>%
factanal(., factors = 10, na.action = na.exclude)
on18 %>%
dplyr::select(c(lr_help_racial_minorities:lr_free_post_secondary,
private_health_care, minimum_wage_to_high_prices, business_benefits_everyone,
inappropriate_sex_ed
)) %>%
cor(.) %>%
factanal(., factors = 10, na.action = na.exclude)
?cor
on18 %>%
dplyr::select(c(lr_help_racial_minorities:lr_free_post_secondary,
private_health_care, minimum_wage_to_high_prices, business_benefits_everyone,
inappropriate_sex_ed
)) %>%
cor(., na.rm = T)
on18 %>%
dplyr::select(c(lr_help_racial_minorities:lr_free_post_secondary,
private_health_care, minimum_wage_to_high_prices, business_benefits_everyone,
inappropriate_sex_ed
)) %>%
cor(.)
on18 %>%
dplyr::select(c(lr_help_racial_minorities:lr_free_post_secondary,
private_health_care, minimum_wage_to_high_prices, business_benefits_everyone,
inappropriate_sex_ed
)) %>%
cor(., use = "complete.obs") %>%
factanal(., factors = 10, na.action = na.exclude)
on18 %>%
dplyr::select(c(lr_help_racial_minorities:lr_free_post_secondary,
private_health_care, minimum_wage_to_high_prices, business_benefits_everyone,
inappropriate_sex_ed
)) %>%
cor(., use = "complete.obs")
on18 %>%
dplyr::select(c(lr_help_racial_minorities:lr_free_post_secondary,
private_health_care, minimum_wage_to_high_prices, business_benefits_everyone,
inappropriate_sex_ed
)) %>%
cor(., use = "complete.obs") %>%
factanal(., na.action = na.exclude)
on18 %>%
dplyr::select(c(lr_help_racial_minorities:lr_free_post_secondary,
private_health_care, minimum_wage_to_high_prices, business_benefits_everyone,
inappropriate_sex_ed
)) %>%
cor(., use = "complete.obs") %>%
factanal(., factors = 3, na.action = na.exclude)
library(pysch)
library(psych)
cor_policies <- on18 %>%
dplyr::select(c(lr_help_racial_minorities:lr_free_post_secondary,
private_health_care, minimum_wage_to_high_prices, business_benefits_everyone,
inappropriate_sex_ed
)) %>%
cor(., use = "complete.obs")
eigen(cor_policies)
eigen(cor_policies)$values
?fa
psych::fa(cor_policies, nfactors = 3)
on18$policy_polarization <- (lr_help_racial_minorities + lr_help_women + lr_more_coporate_tax +
lr_more_personal_tax + lr_income_inequality + lr_drug_benefit_u25 + lr_free_post_secondary +
private_health_care + minimum_wage_to_high_prices + business_benefits_everyone +
inappropriate_sex_ed)
on18 <- on18 %>%
mutate(policy_polarization = (lr_help_racial_minorities + lr_help_women + lr_more_coporate_tax +
lr_more_personal_tax + lr_income_inequality + lr_drug_benefit_u25 + lr_free_post_secondary +
private_health_care + minimum_wage_to_high_prices + business_benefits_everyone +
inappropriate_sex_ed))
#### Primary News Source ####
#Create a variable that classifies individuals based on the primary media type they use
on18 %>%
mutate(Primary_media=case_when(
(primarynews_7 == 1 | primarynews_6 == 1) & (primarynews_5 == 0 & primarynews_4 == 0 & primarynews_3 == 0 & primarynews_2 == 0 & primarynews_1 == 0) ~ "Social_Media", #For individuals who only use Social Media
(primarynews_4 == 1 | primarynews_5 == 1) & (primarynews_6 == 0 & primarynews_7 == 0 & primarynews_3 == 0 & primarynews_2 == 0 & primarynews_1 == 0) ~ "Online", #For individuals who only use online sources that are not social media
(primarynews_3 == 1 | primarynews_2 == 1 | primarynews_1 == 1) & (primarynews_5 == 0 & primarynews_4 == 0 & primarynews_6 == 0 & primarynews_7 == 0) ~ "Legacy", #For individuals who only receive news from television or newspapers
TRUE ~ "Mixed"
))->on18
on18$partyvote2018
policy_liberals_legacy <- on18 %>%
filter(Primary_media == Legacy & partyvote2018 == 1)
policy_liberals_legacy <- on18 %>%
filter(Primary_media == "Legacy" & partyvote2018 == 1) %>%
select(policy_polarization)
policy_liberals_legacy
on18$Primary_media
policy_liberals_online <- on18 %>%
filter(Primary_media == "Online" & partyvote2018 == 1) %>%
select(policy_polarization)
policy_liberals_social_media <- on18 %>%
filter(Primary_media == "Social_Media" & partyvote2018 == 1) %>%
select(policy_polarization)
policy_liberals_social_media <- on18 %>%
filter(Primary_media == "Mixed" & partyvote2018 == 1) %>%
select(policy_polarization)
on18$Social_Use2
on18$Social_Use
policy_liberals_legacy <- on18 %>%
filter(Primary_media == "Legacy" & partyvote2018 == 1) %>%
select(policy_polarization)
policy_liberals_online <- on18 %>%
filter(Primary_media == "Online" & partyvote2018 == 1) %>%
select(policy_polarization)
policy_liberals_social_media <- on18 %>%
filter(Primary_media == "Social_Media" & partyvote2018 == 1) %>%
select(policy_polarization)
policy_liberals_mixed <- on18 %>%
filter(Primary_media == "Mixed" & partyvote2018 == 1) %>%
select(policy_polarization)
on18$partyvote2018
policy_conservatives_legacy <- on18 %>%
filter(Primary_media == "Legacy" & partyvote2018 == 2) %>%
select(policy_polarization)
policy_conservatives_online <- on18 %>%
filter(Primary_media == "Online" & partyvote2018 == 2) %>%
select(policy_polarization)
policy_liberals_conservatives_media <- on18 %>%
filter(Primary_media == "Social_Media" & partyvote2018 == 2) %>%
select(policy_polarization)
policy_conservatives_mixed <- on18 %>%
filter(Primary_media == "Mixed" & partyvote2018 == 2) %>%
select(policy_polarization)
policy_conservatives_legacy <- on18 %>%
filter(Primary_media == "Legacy" & partyvote2018 == 2) %>%
select(policy_polarization)
policy_conservatives_online <- on18 %>%
filter(Primary_media == "Online" & partyvote2018 == 2) %>%
select(policy_polarization)
policy_conservatives_media <- on18 %>%
filter(Primary_media == "Social_Media" & partyvote2018 == 2) %>%
select(policy_polarization)
policy_conservatives_mixed <- on18 %>%
filter(Primary_media == "Mixed" & partyvote2018 == 2) %>%
select(policy_polarization)
on18$partyvote2018
policy_ndp_legacy <- on18 %>%
filter(Primary_media == "Legacy" & partyvote2018 == 3) %>%
select(policy_polarization)
policy_ndp_online <- on18 %>%
filter(Primary_media == "Online" & partyvote2018 == 3) %>%
select(policy_polarization)
policy_ndp_media <- on18 %>%
filter(Primary_media == "Social_Media" & partyvote2018 == 3) %>%
select(policy_polarization)
policy_ndp_mixed <- on18 %>%
filter(Primary_media == "Mixed" & partyvote2018 == 3) %>%
select(policy_polarization)
library(bayestestR)
overlap(policy_liberals_legacy, policy_conservatives_legacy)
overlap(policy_liberals_legacy, policy_ndp_legacy)
overlap(policy_ndp_legacy, policy_conservatives_legacy)
overlap(policy_liberals_online, policy_conservatives_online)
overlap(policy_liberals_online, policy_ndp_online)
overlap(policy_ndp_online, policy_conservatives_online)
overlap(policy_liberals_social_media, policy_conservatives_media)
overlap(policy_liberals_social_media, policy_ndp_media)
overlap(policy_ndp_media, policy_conservatives_media)
overlap(policy_liberals_mixed, policy_conservatives_mixed)
overlap(policy_liberals_mixed, policy_ndp_mixed)
overlap(policy_ndp_mixed, policy_conservatives_mixed)
