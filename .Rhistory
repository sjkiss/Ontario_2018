geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") + theme_bw()
age_predicted %>%
ggplot(aes(x = age, y = predicted_age, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") + theme_bw()
on18$WAP
affect_pol_cal_wt
affect_wt %>%
rowwise()
library(tidyverse)
affect_wt %>%
rowwise()
affect_wt
affect_wt %>%
rowwise()
WAP_scores
affect_pol_cal_wt %>%
group_by(id) %>%
summarise(WAP = sum(like_mean_wt)) -> WAP_scores
WAP_scores
source("~/Documents/Stats/Ontario_2018/Code/2_add_emotion_variables.R", echo=TRUE)
??here
library(here)
source("~/Documents/Stats/Ontario_2018/Code/2_add_emotion_variables.R", echo=TRUE)
source("~/Documents/Stats/Ontario_2018/Code/2_LSD_emotions.R", echo=TRUE)
summary(lm(fin_sentiment~Media, data=on18))
#Display Models
modelsummary(WAP_reg, stars = T, vcov = "HC0") #As numbers
|       Next, we estimate the correlation between primary media source and social media usage and levels of affective polarization. Figure \# presents the results from ordinary least squares (OLS) regression models with WAP scores as the dependent variable and social media usage as the independent variable. In all these models the dependent variable is standardized with a mean of 0 and a standard deviation of 1 and all the continuous independent variables are scaled from 0 to 1. Therefore, the coefficients represent in the change in the dependent variable correlated with a full change in the independent variable.
WAP_reg
WAP_reg %>%
tidy()
library(broom)
WAP_reg %>%
tidy()
WAP_reg_df <- map(WAP_reg, tidy, conf.int = T)
WAP_reg_df
WAP_reg_df <- bind_rows(WAP_reg_df, .id = "model_num")
WAP_reg_df
WAP_reg_df %>%
filter(term == "(Intercept)")
WAP_reg_df %>%
filter(!term == "(Intercept)")
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, ymax = conf.high, ymin = conf.low)) + geom_point() + geom_linerange()
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() + geom_linerange()
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() + geom_linerange() + facet_wrap(~model_num)
WAP_reg_df
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low, col = model_num)) + geom_point() + geom_linerange()
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() + geom_linerange() + facet_wrap(~model_num)
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() + geom_linerange() + facet_wrap(~model_num, ncol = 4)
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() + geom_linerange() + facet_wrap(~model_num, ncol = 4) + theme_bw()
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() + geom_linerange() + facet_wrap(~model_num, ncol = 7) + theme_bw()
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() + geom_linerange() + facet_wrap(~model_num, ncol = 3) + theme_bw()
WAP_reg_df_ci <- mapply(WAP_reg, confint, level = 0.95, HC_type = "HC0")
WAP_reg_df_ci <- map(WAP_reg, confint, level = 0.95, HC_type = "HC0")
WAP_reg_df_ci
WAP_reg_df_ci <- bind_rows(WAP_reg_df_ci, .id = "model_num")
WAP_reg_df_ci
WAP_reg_df <- map(WAP_reg, tidy)
WAP_reg_df
WAP_reg_df <- bind_rows(WAP_reg_df, .id = "model_num")
WAP_reg_df_ci <- bind_rows(WAP_reg_df_ci, .id = "model_num")
WAP_reg_df_ci <- map(WAP_reg_df_ci, as.tibble)
WAP_reg_df_ci <- map(WAP_reg_df_ci, as_tibble)
WAP_reg_df_ci <- bind_rows(WAP_reg_df_ci, .id = "model_num")
WAP_reg_df_ci
WAP_reg_df_ci <- bind_rows(WAP_reg_df_ci, .id = "model_num") %>%
rename("conf.low_95" = "X2.5..", "conf.high_95" = "X97.5..")
WAP_reg_df_ci <- bind_rows(WAP_reg_df_ci, .id = "model_num") %>%
rename("conf.low" = "`2.5 %`", "conf.high" = " `97.5 %`")
WAP_reg_df_ci <- bind_rows(WAP_reg_df_ci, .id = "model_num") %>%
rename("conf.low" = "`2.5 %`", "conf.high" = "`97.5 %`")
WAP_reg_df_ci <- bind_rows(WAP_reg_df_ci, .id = "model_num") %>%
rename("conf.low" = "2.5 %", "conf.high" = "`97.5 %`")
WAP_reg_df_ci <- bind_rows(WAP_reg_df_ci, .id = "model_num") %>%
rename("conf.low" = "2.5 %", "conf.high" = "97.5 %")
WAP_reg_df_ci
WAP_reg_df <- bind_cols(WAP_reg_df, WAP_reg_df_ci)
WAP_reg_df
WAP_reg_df_ci <- bind_rows(WAP_reg_df_ci) %>%
rename("conf.low" = "2.5 %", "conf.high" = "97.5 %")
WAP_reg_df_ci <- map(WAP_reg, confint, level = 0.95, HC_type = "HC0")
WAP_reg_df_ci <- map(WAP_reg_df_ci, as_tibble)
WAP_reg_df_ci <- bind_rows(WAP_reg_df_ci) %>%
rename("conf.low" = "2.5 %", "conf.high" = "97.5 %")
WAP_reg_df <- bind_cols(WAP_reg_df, WAP_reg_df_ci)
WAP_reg_df <- map(WAP_reg, tidy)
WAP_reg_df_ci <- map(WAP_reg, confint, level = 0.95, HC_type = "HC0")
WAP_reg_df_ci <- map(WAP_reg_df_ci, as_tibble)
WAP_reg_df <- bind_rows(WAP_reg_df, .id = "model_num")
WAP_reg_df_ci <- bind_rows(WAP_reg_df_ci) %>%
rename("conf.low" = "2.5 %", "conf.high" = "97.5 %")
WAP_reg_df <- bind_cols(WAP_reg_df, WAP_reg_df_ci)
WAP_reg_df
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() + geom_linerange() + facet_wrap(~model_num, ncol = 3) + theme_bw()
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() + geom_linerange() + facet_wrap(~model_num, ncol = 3) + theme_minimal()
bw
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() + geom_linerange() + facet_wrap(~model_num, ncol = 3) + theme_bw()
model_names <- list(
"1" = "Model 1",
"2" = "Model 2",
"3" = "Model 3",
"4" = "Model 4",
"5" = "Model 5",
"6" = "Model 6",
"7" = "Model 7",
)
model_names <- list(
"1" = "Model 1",
"2" = "Model 2",
"3" = "Model 3",
"4" = "Model 4",
"5" = "Model 5",
"6" = "Model 6",
"7" = "Model 7"
)
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() + geom_linerange() + facet_wrap(~model_num, ncol = 3, labeller = model_names) + theme_bw()
model_labeller <- function(variable, value){
return(model_names[vaule])
}
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() + geom_linerange() + facet_wrap(~model_num, ncol = 3, labeller = model_labeller) + theme_bw()
return(model_names[value])
model_labeller <- function(variable, value){
return(model_names[value])
}
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() + geom_linerange() + facet_wrap(~model_num, ncol = 3, labeller = model_labeller) + theme_bw()
age_legacy
range(WAP)
range(on18$WAP)
age_predicted %>%
ggplot(aes(x = age, y = predicted_WAP, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") + theme_bw()
source("~/Documents/Stats/Ontario_2018/Code/3_polarization.R", echo=TRUE)
age_social_media[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_social_media, interval = "confidence")
age_social_media$media <- "Social Media"
age_predicted <- rbind(age_legacy, age_mixed, age_online, age_social_media)
age_predicted %>%
ggplot(aes(x = age, y = predicted_WAP, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") + theme_bw()
age_legacy <- data.frame(age = seq(18, 100, 1),
Primary_media = "Legacy",
Interest = mean(on18$Interest, na.rm = T))
age_legacy[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_legacy, interval = "confidence")
age_legacy$media <- "Legacy"
age_mixed <- data.frame(age = seq(18, 100, 1),
Primary_media = "Mixed",
Interest = mean(on18$Interest, na.rm = T))
age_mixed[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_mixed, interval = "confidence")
age_mixed$media <- "Mixed"
age_online <- data.frame(age = seq(18, 100, 1),
Primary_media = "Online",
Interest = mean(on18$Interest, na.rm = T))
age_online[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_online, interval = "confidence")
age_online$media <- "Online"
age_social_media <- data.frame(age = seq(18, 100, 1),
Primary_media = "Social_Media",
Interest = mean(on18$Interest, na.rm = T))
age_social_media[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_social_media, interval = "confidence")
age_social_media$media <- "Social Media"
age_predicted <- rbind(age_legacy, age_mixed, age_online, age_social_media)
age_predicted %>%
ggplot(aes(x = age, y = predicted_WAP, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") + theme_bw()
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() + geom_linerange() + facet_wrap(~model_num, ncol = 3, labeller = model_labeller) + theme_bw()
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() +
geom_linerange() + geom_vline(xintercept = 0, lty = 4)
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() +
geom_linerange() + geom_vline(xintercept = 0, lty = 4) +
facet_wrap(~model_num, ncol = 3, labeller = model_labeller) + theme_bw()
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() +
geom_linerange() + geom_vline(xintercept = 0, lty = 4) +
facet_wrap(~model_num, ncol = 4, labeller = model_labeller) + theme_bw()
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() +
geom_linerange() + geom_vline(xintercept = 0, lty = 4) +
facet_wrap(~model_num, ncol = 2, labeller = model_labeller) + theme_bw()
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() +
geom_linerange() + geom_vline(xintercept = 0, lty = 4) +
facet_wrap(~model_num, ncol = 3, labeller = model_labeller) + theme_bw()
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() +
geom_linerange() + geom_vline(xintercept = 0, lty = 4) +
facet_wrap(~model_num, ncol = 4, labeller = model_labeller) + theme_bw()
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_Interact, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
marginaleffects::plot_slopes(WAP_Interact2, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
#Display Models
modelsummary(WAP_reg, stars = T, vcov = "HC0") #As numbers
WAP_reg_df <- map(WAP_reg, tidy)
WAP_reg_df_ci <- map(WAP_reg, confint, level = 0.95, HC_type = "HC0")
WAP_reg_df_ci <- map(WAP_reg_df_ci, as_tibble)
WAP_reg_df <- bind_rows(WAP_reg_df, .id = "model_num")
WAP_reg_df_ci <- bind_rows(WAP_reg_df_ci) %>%
rename("conf.low" = "2.5 %", "conf.high" = "97.5 %")
WAP_reg_df <- bind_cols(WAP_reg_df, WAP_reg_df_ci)
model_names <- list(
"1" = "Model 1",
"2" = "Model 2",
"3" = "Model 3",
"4" = "Model 4",
"5" = "Model 5",
"6" = "Model 6",
"7" = "Model 7"
)
model_labeller <- function(variable, value){
return(model_names[value])
}
WAP_reg_df %>%
filter(!term == "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, xmax = conf.high, xmin = conf.low)) + geom_point() +
geom_linerange() + geom_vline(xintercept = 0, lty = 4) +
facet_wrap(~model_num, ncol = 4, labeller = model_labeller) + theme_bw()
#Investigating the age coefficient
summary(lm(WAP_sd ~ age, data = on18))
summary(lm(WAP_sd ~ age + I(age^2), data = on18))
age_poly <- lm(WAP_sd ~ Interest + Primary_media * (age + I(age^2)), data = on18, na.action = na.omit); summary(age_poly)
summary(lm(WAP_sd ~ Interest + Primary_media + age + I(age^2) + degree + income3 + pol_knowledge, data = on18, na.action = na.omit))
age_legacy <- data.frame(age = seq(18, 100, 1),
Primary_media = "Legacy",
Interest = mean(on18$Interest, na.rm = T))
age_legacy[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_legacy, interval = "confidence")
age_legacy$media <- "Legacy"
age_mixed <- data.frame(age = seq(18, 100, 1),
Primary_media = "Mixed",
Interest = mean(on18$Interest, na.rm = T))
age_mixed[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_mixed, interval = "confidence")
age_mixed$media <- "Mixed"
age_online <- data.frame(age = seq(18, 100, 1),
Primary_media = "Online",
Interest = mean(on18$Interest, na.rm = T))
age_online[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_online, interval = "confidence")
age_online$media <- "Online"
age_social_media <- data.frame(age = seq(18, 100, 1),
Primary_media = "Social_Media",
Interest = mean(on18$Interest, na.rm = T))
age_social_media[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_social_media, interval = "confidence")
age_social_media$media <- "Social Media"
age_predicted <- rbind(age_legacy, age_mixed, age_online, age_social_media)
age_predicted %>%
ggplot(aes(x = age, y = predicted_WAP, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") + theme_bw()
WAP_reg_soc_use <- list()
WAP_reg_soc_use[[1]] <- lm(WAP ~ Social_Use2, data = on18, na.action = na.omit);summary(WAP_reg_soc_use[[1]])
WAP_reg_soc_use[[2]] <- lm(WAP_sd ~ Interest, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[2]])
WAP_reg_soc_use[[3]] <- lm(WAP_sd ~ Interest + Social_Use2, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[3]])
WAP_reg_soc_use[[4]] <- lm(WAP_sd ~ Interest + Social_Use2 + age3, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[4]])
WAP_reg_soc_use[[5]] <- lm(WAP_sd ~ Interest + Social_Use2 + age3 + degree, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[5]])
WAP_reg_soc_use[[6]] <- lm(WAP_sd ~ Interest + Social_Use2 + age3 + degree + income3, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[6]])
WAP_reg_soc_use[[7]] <- lm(WAP_sd ~ Interest + Social_Use2 + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit); summary(WAP_reg_soc_use[[7]])
#Create regression models for affective polarization using the weighted affective polarization (WAP) measure
WAP_lead_reg <- list()
WAP_lead_graph <- list()
WAP_lead_reg[[1]] <- lm(WAP_lead_sd ~ Primary_media, data = on18, na.action = na.omit);summary(WAP_lead_reg[[1]])
WAP_lead_graph[[1]] <- graph_regression(WAP_lead_reg[[1]]); WAP_lead_graph[[1]]
WAP_lead_reg[[2]] <- lm(WAP_lead_sd ~ Interest, data = on18, na.action = na.omit); summary(WAP_lead_reg[[2]])
WAP_lead_graph[[2]] <- graph_regression(WAP_lead_reg[[2]]); WAP_lead_graph[[2]]
WAP_lead_reg[[3]] <- lm(WAP_lead_sd ~ Interest + Primary_media, data = on18, na.action = na.omit); summary(WAP_lead_reg[[3]])
WAP_lead_graph[[3]] <- graph_regression(WAP_lead_reg[[3]]); WAP_lead_graph[[3]]
WAP_lead_reg[[4]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3, data = on18, na.action = na.omit); summary(WAP_lead_reg[[4]])
WAP_lead_graph[[4]] <- graph_regression(WAP_lead_reg[[4]]); WAP_lead_graph[[4]]
WAP_lead_reg[[5]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3 + degree, data = on18, na.action = na.omit); summary(WAP_lead_reg[[5]])
WAP_lead_graph[[5]] <- graph_regression(WAP_lead_reg[[5]]); WAP_lead_graph[[5]]
WAP_lead_reg[[6]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3 + degree + income3, data = on18, na.action = na.omit); summary(WAP_lead_reg[[6]])
WAP_lead_graph[[6]] <- graph_regression(WAP_lead_reg[[6]]); WAP_lead_graph[[6]]
WAP_lead_reg[[7]] <- lm(WAP_lead_sd ~ Interest + Primary_media + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit); summary(WAP_lead_reg[[7]])
WAP_lead_graph[[7]] <- graph_regression(WAP_lead_reg[[7]]); WAP_lead_graph[[7]]
WAP_lead_Interact <- lm(WAP_lead_sd ~ Primary_media*Interest, data = on18, na.action = na.omit)
summary(WAP_lead_Interact)
WAP_lead_Interact2 <- lm(WAP_lead_sd ~ Primary_media*Interest + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
summary(WAP_lead_Interact2)
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_lead_Interact, variables = "Interest", condition = "Primary_media") +
geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + coord_flip() + theme_bw()
marginaleffects::plot_slopes(WAP_lead_Interact2, variables = "Interest", condition = "Primary_media") +
geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + coord_flip() + theme_bw()
#Display Models
modelsummary(WAP_lead_reg, stars = T, vcov = "HC0") #As numbers
#### Primary Media ####
bimod_online <- bimodality_coefficient(policy_online, na.rm = T); bimod_online
bimod_leacgy <- bimodality_coefficient(policy_legacy, na.rm = T); bimod_leacgy
bimodality_coefficient(policy_social_media, na.rm = T)
bimodality_coefficient(policy_mixed, na.rm = T)
bimod_legacy <- policy_legacy %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Legacy Media", subtitle = "Bimodality Coefficent (0.29)", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_online <- policy_online %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Online Media", subtitle = "Bimodality Coefficent (0.36)", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_social <- policy_social_media %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Social Media", subtitle = "Bimodality Coefficent (0.31)", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_mixed <- policy_mixed %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Mixed media", subtitle = "Bimodality Coefficent (0.32)", x = "Policy Positions", y = NULL) +
theme_bw()
gridExtra::grid.arrange(bimod_legacy, bimod_online, bimod_social, bimod_mixed)
|       We then estiamte the same models that we estimated in @pm_WAP
on18$wap_difference
mean(on18$wap_difference)
mean(on18$wap_difference, na.rm = T)
WAP_reg_soc_use[[1]] <- lm(WAP_sd ~ Social_Use2, data = on18, na.action = na.omit);summary(WAP_reg_soc_use[[1]])
#WAP_graph[[7]] <- graph_regression(WAP_reg_soc_use[[7]]); WAP_graph[[7]]
modelsummary(WAP_reg_soc_use, stars = T, vcov = "HC0")
age_predicted %>%
ggplot(aes(x = age, y = predicted_WAP, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") + theme_bw()
age_poly <- lm(WAP_sd ~ Interest + Primary_media  + age + I(age^2)), data = on18, na.action = na.omit); summary(age_poly)
age_poly <- lm(WAP_sd ~ Interest + Primary_media  + age + I(age^2), data = on18, na.action = na.omit); summary(age_poly)
age_legacy <- data.frame(age = seq(18, 100, 1),
Primary_media = "Legacy",
Interest = mean(on18$Interest, na.rm = T))
age_legacy
age_legacy[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_legacy, interval = "confidence")
age_legacy
sort(age_legacy)
?sort
sort(age_legacy$predicted_WAP)
age_legacy
age_mixed <- data.frame(age = seq(18, 100, 1),
Primary_media = "Mixed",
Interest = mean(on18$Interest, na.rm = T))
age_mixed[, c("predicted_WAP",
"conf_up",
"conf_low")] <- predict(age_poly, age_mixed, interval = "confidence")
age_mixed
age_legacy
age_mixed
age_mixed
age_legacy
gridExtra::grid.arrange(bimod_legacy, bimod_online, bimod_social, bimod_mixed)
gridExtra::grid.arrange(bimod_often, bimod_rarely)
gridExtra::grid.arrange(bimod_often, bimod_rarely)
bimodality_coefficient(policy_often, na.rm = T)
bimodality_coefficient(policy_rarely, na.rm = T)
bimod_often <- policy_often %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Uses Social Media Often", subtitle = "Bimodality Coefficent (0.29)", x = "Policy Positions", y = NULL) +
theme_bw()
bimod_rarely <- policy_rarely %>%
ggplot() + geom_density(aes(policy_polarization), col = "seagreen", fill = "seagreen", alpha = 0.4) +
labs(title = "Uses Social Media Rarely", subtitle = "Bimodality Coefficent (0.33)", x = "Policy Positions", y = NULL) +
theme_bw()
gridExtra::grid.arrange(bimod_often, bimod_rarely)
BC_social_use <- gridExtra::grid.arrange(bimod_often, bimod_rarely)
BC_social_use
BC_social_use
BC_social_use
#| label: setup
#| echo: false
library(knitr)
opts_knit$set(root.dir=rprojroot::find_rstudio_root_file())
#opts_chunk$set(warning=F,message=F)
gridExtra::grid.arrange(bimod_often, bimod_rarely)
#| label: import
#| echo: false
#| warning: false
#| message: false
#| results: 'hide'
#| cache: true
source("Code/3_polarization.R")
#| label: import
#| echo: false
#| warning: false
#| message: false
#| results: 'hide'
#| cache: true
source("Code/3_polarization.R")
ggpubr::ggarrange(overlap_legacy, overlap_online, overlap_smedia, overlap_mixed)
ggpubr::ggarrange(overlap_often, overlap_rarely, ncol = 1)
ggpubr::ggarrange(overlap_often, overlap_rarely, ncol = 1)
ggpubr::ggarrange(overlap_often, overlap_rarely, ncol = 1)
overlap_rarely <- ggplot() + geom_density(aes(policy_polarization), data = policy_left_rarely, col = "red", fill = "red", alpha = 0.4) +
geom_density(aes(policy_polarization), data = policy_conservative_social_rarely, col = "blue", fill = "blue", alpha = 0.4) +
labs(title = "Uses Social Media Rarely", subtitle = "Overlap Coefficent (0.70)", x = "Policy Positions", y = NULL) + theme_bw()
ggpubr::ggarrange(overlap_often, overlap_rarely, ncol = 1)
lm(Interest ~ Primary_media, data = on18, na.action = na.omit)
Interest_pm <- lm(Interest ~ Primary_media, data = on18, na.action = na.omit); summary(Interest_pm)
Interest_su <- lm(Interest ~ Social_Use2, data = on18, na.action = na.omit); summary(Interest_su)
WAP_Interact <- lm(WAP_sd ~ Primary_media*Interest, data = on18, na.action = na.omit)
summary(WAP_Interact)
WAP_Interact2 <- lm(WAP_sd ~ Primary_media*Interest  + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
summary(WAP_Interact2)
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_Interact, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
marginaleffects::plot_slopes(WAP_Interact2, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_Interact, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_Interact, variables = "Primary_media", condition = "Interest") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
Interest
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_Interact, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
install.packages("mediation")
library(mediation)
?mediate
model_m <- lm(Interest ~ Primary_media + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
model_y <- lm(WAP_sd ~ Primary_media + Interest + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
mediate(model_m, model_y)
model_m <- on18 %>%
filter(!is.na(WAP_sd)) %>%
lm(Interest ~ Primary_media + age3 + degree + income3 + pol_knowledge, data = ., na.action = na.omit)
model_m
model_y <- lm(WAP_sd ~ Primary_media + Interest + age3 + degree + income3 + pol_knowledge, data = on18, na.action = na.omit)
mediate(model_m, model_y)
mediate(model_m, model_y, treat = "Primary_media", mediator = "Interest")
#Visualize the marginal effects from the interaction effects
marginaleffects::plot_slopes(WAP_Interact, variables = "Interest", condition = "Primary_media") + geom_hline(yintercept  = 0, lty = "dashed", col = "forestgreen") + theme_bw()
model_m <- on18 %>%
filter(!is.na(WAP_sd)) %>%
mutate(treatment = ifelse(Primary_media == "Social_Media", 1, 0)) %>%
lm(Interest ~ treatment + age3 + degree + income3 + pol_knowledge, data = ., na.action = na.omit)
model_y <- on18 %>%
filter(!is.na(WAP_sd)) %>%
mutate(treatment = ifelse(Primary_media == "Social_Media", 1, 0)) %>%
lm(WAP_sd ~ treatment + Interest + age3 + degree + income3 + pol_knowledge, data = ., na.action = na.omit)
mediate(model_m, model_y, treat = "treatment", mediator = "Interest")
mediation_model <- mediate(model_m, model_y, treat = "treatment", mediator = "Interest")
summary(mediation_model)
age_predicted %>%
ggplot(aes(x = age, y = predicted_WAP, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") + theme_bw()
age_predicted %>%
ggplot(aes(x = age, y = predicted_WAP, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") +
labs(x = "Age", y = "Predicted Level of Affective Polarization (WAP Score)") +
theme_bw()
age_predicted_graph <- age_predicted %>%
ggplot(aes(x = age, y = predicted_WAP, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") +
labs(x = "Age", y = "Predicted Level of Affective Polarization (WAP Score)") +
theme_bw()
age_predicted_graph <- age_predicted %>%
ggplot(aes(x = age, y = predicted_WAP, ymin = conf_low, ymax = conf_up)) +
geom_line(colour = "#008080") +  facet_wrap(~media) +
geom_ribbon(alpha = 0.2, fill = "aquamarine3") +
labs(x = "Age", y = "Predicted Level of Affective Polarization \n (WAP Score)") +
theme_bw()
age_predicted_graph
